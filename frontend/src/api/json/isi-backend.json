{
  "openapi": "3.0.1",
  "info": {
    "title": "ISI Backend API",
    "description": "ISI Backend - Serivce für das Informationssystem für soziale Infrastrukturplanung",
    "contact": { "name": "ISI Management", "email": "noreply@mail.de" },
    "version": "1.0.0"
  },
  "servers": [{ "url": "http://localhost:39146", "description": "Generated server url" }],
  "tags": [
    { "name": "Koordinaten", "description": "API to interact with the Koordinaten" },
    { "name": "Baurate", "description": "API zum interagieren mit Bauraten" },
    { "name": "Dokumente", "description": "API zum Erhalt aller Dokumente" },
    { "name": "MimeType", "description": "API zur MimeType-Prüfung" },
    { "name": "FoerdermixStamm", "description": "API zum Interagieren mit FoerdermixStamm" },
    {
      "name": "Dateihandling",
      "description": "API um Presigned-Urls bezüglich des Dateihandlings mittels des S3-Storage zu holen."
    },
    { "name": "Abfrage", "description": "API to interact with the Abfragen" },
    { "name": "Abfragelisten", "description": "API to get Abfragelisten" },
    { "name": "Infrastruktureinrichtung", "description": "API to get Infrastruktureinrichtungen" },
    { "name": "Stammdaten", "description": "API to import Stammdaten" },
    { "name": "Bauvorhaben", "description": "API um Bauvorhaben zu verwalten" },
    { "name": "AbfrageStatus", "description": "API to set the status for a Abfrage" },
    { "name": "Lookup", "description": "API zum Erhalt der LookupListen." },
    { "name": "FileInfoStamm", "description": "API zum Erhalten von dateibezogenen Stammdaten." }
  ],
  "paths": {
    "/stammdaten/foerdermix": {
      "get": {
        "tags": ["FoerdermixStamm"],
        "summary": "Lade alle Fördermix Stammdaten",
        "description": "Das Ergebnis wird nach der Bezeichnung aufsteigend sortiert",
        "operationId": "getFoerdermixStaemme",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/FoerdermixStammDto" } } }
            }
          }
        }
      },
      "put": {
        "tags": ["FoerdermixStamm"],
        "summary": "Aktualisierung eines FoerdermixStamm",
        "operationId": "updateFoerdermixStamm",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FoerdermixStammDto" } } },
          "required": true
        },
        "responses": {
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine FoerdermixStamm mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": {
            "description": "OK -> FoerdermixStamm wurde erfolgreich aktualisiert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/FoerdermixStammDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Fördermix konnte nicht gespeichert werden, da für die Bezeichnung im angegebenen Jahr bereits ein anderer Fördermix existiert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      },
      "post": {
        "tags": ["FoerdermixStamm"],
        "summary": "Anlegen eines FoerdermixStamm",
        "operationId": "saveFoerdermixStamm",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FoerdermixStammDto" } } },
          "required": true
        },
        "responses": {
          "409": {
            "description": "CONFLICT -> Fördermix konnte nicht erstellt werden, da für die Bezeichnung im angegebenen Jahr bereits ein anderer Fördermix existiert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "201": {
            "description": "CREATED -> FoerdermixStamm wurde erfolgreich erstellt.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/FoerdermixStammDto" } } }
          },
          "400": {
            "description": "BAD_REQUEST -> FoerdermixStamm konnte nicht erstellt werden, überprüfen sie die Eingabe.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      }
    },
    "/infrastruktureinrichtung": {
      "put": {
        "tags": ["Infrastruktureinrichtung"],
        "summary": "Aktualisierung einer Infrastruktureinrichtung",
        "operationId": "updateInfrastruktureinrichtung",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/GrundschuleDto" },
                  { "$ref": "#/components/schemas/GsNachmittagBetreuungDto" },
                  { "$ref": "#/components/schemas/HausFuerKinderDto" },
                  { "$ref": "#/components/schemas/KindergartenDto" },
                  { "$ref": "#/components/schemas/KinderkrippeDto" },
                  { "$ref": "#/components/schemas/MittelschuleDto" }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Infrastruktureinrichtung mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "400": {
            "description": "BAD_REQUEST -> Infrastruktureinrichtung konnte nicht aktualisiert werden, überprüfen sie die Eingabe.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": {
            "description": "OK -> Infrastruktureinrichtung wurde erfolgreich aktualisiert.",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GrundschuleDto" },
                    { "$ref": "#/components/schemas/GsNachmittagBetreuungDto" },
                    { "$ref": "#/components/schemas/HausFuerKinderDto" },
                    { "$ref": "#/components/schemas/KindergartenDto" },
                    { "$ref": "#/components/schemas/KinderkrippeDto" },
                    { "$ref": "#/components/schemas/MittelschuleDto" }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Infrastruktureinrichtung"],
        "summary": "Anlegen einer neuen Infrastruktureinrichtung",
        "operationId": "createInfrastruktureinrichtung",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/GrundschuleDto" },
                  { "$ref": "#/components/schemas/GsNachmittagBetreuungDto" },
                  { "$ref": "#/components/schemas/HausFuerKinderDto" },
                  { "$ref": "#/components/schemas/KindergartenDto" },
                  { "$ref": "#/components/schemas/KinderkrippeDto" },
                  { "$ref": "#/components/schemas/MittelschuleDto" }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BAD_REQUEST -> Infrastruktureinrichtung konnte nicht erstellt werden, überprüfen sie die Eingabe.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "201": {
            "description": "CREATED -> Infrastruktureinrichtung wurde erfolgreich erstellt.",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GrundschuleDto" },
                    { "$ref": "#/components/schemas/GsNachmittagBetreuungDto" },
                    { "$ref": "#/components/schemas/HausFuerKinderDto" },
                    { "$ref": "#/components/schemas/KindergartenDto" },
                    { "$ref": "#/components/schemas/KinderkrippeDto" },
                    { "$ref": "#/components/schemas/MittelschuleDto" }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/infrastruktur-abfrage/{id}/zurueck-an-sachbearbeitung": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Infrastrukturabfrage auf den Status IN_BEARBEITUNG_SACHBEARBEITUNG",
        "operationId": "zurueckAnSachbearbeitungInfrastrukturabfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht zur Bearbeitung zurückgegeben werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich zurückgegeben an den Abfrage Ersteller." }
        }
      }
    },
    "/infrastruktur-abfrage/{id}/zurueck-an-abfrageerstellung": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Infrastrukturabfrage auf den Status ANGELEGT",
        "operationId": "zurueckAbfrageerstellungInfrastrukturabfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht zur Bearbeitung zurückgegeben werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich zurückgegeben an den Abfrage Ersteller." }
        }
      }
    },
    "/infrastruktur-abfrage/{id}/verschicken-der-stellungnahme": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Infrastrukturabfrage auf den Status IN_BEARBEITUNG_FACHREFERATE",
        "operationId": "verschickenDerStellungnahmeInfrastrukturabfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht weitergegeben werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich an RBS oder SOZ zur Bearbeitung weitergegeben." }
        }
      }
    },
    "/infrastruktur-abfrage/{id}/speicher-von-soz-infrastruktur-versorgung": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Infrastrukturabfrage auf den Status ERLEDIGT",
        "operationId": "speichernVonSozialinfrastrukturVersorgungInfrastrukturAbfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht erledigt werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich erledigt." }
        }
      }
    },
    "/infrastruktur-abfrage/{id}/in-bearbeitung-setzen": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Infrastrukturabfrage auf den Status IN_BEARBEITUNG_SACHBEARBEITUNG",
        "operationId": "inBearbeitungSetzenInfrastrukturabfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht zur Bearbeitung zurückgegeben werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich zurückgegeben an den Abfrage Ersteller." }
        }
      }
    },
    "/infrastruktur-abfrage/{id}/freigabe": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Infrastrukturabfrage auf den Status OFFEN",
        "operationId": "freigabeInfrastrukturabfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "200": { "description": "OK -> Abfrage wurde erfolgreich freigegeben." },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht freigegeben werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      }
    },
    "/infrastruktur-abfrage/{id}/erneute-bearbeitung": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Infrastrukturabfrage auf den Status IN_BEARBEITUNG_SACHBEARBEITUNG",
        "operationId": "erneuteBearbeitungInfrastrukturabfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht erledigt werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich zur bearbeitung freigestellt." }
        }
      }
    },
    "/infrastruktur-abfrage/{id}/bedarfsmeldung-erfolgt": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Infrastrukturabfrage auf den Status BEDARFSMELDUNG_ERFOLGT",
        "operationId": "bedarfsmeldungErfolgtInfrastrukturAbfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "200": { "description": "OK -> Die Bedarfsmeldung der Fachreferate ist erfolgt" },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Die Bedarfsmeldung konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht erfolgen",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      }
    },
    "/infrastruktur-abfrage/{id}/abfrage-schliessen": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Infrastrukturabfrage auf den Status ERLEDIGT",
        "operationId": "abfrageSchliessenInfrastrukturAbfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich erledigt." },
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht erledgit werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      }
    },
    "/infrastruktur-abfrage/{id}/abbrechen": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Infrastrukturabfrage auf den Status ABBRUCH",
        "operationId": "abbrechenInfrastrukturabfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht abgebrochen werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich abbgebrochen." }
        }
      }
    },
    "/bauvorhaben": {
      "get": {
        "tags": ["Bauvorhaben"],
        "summary": "Lade alle Bauvorhaben",
        "description": "Das Ergebnis wird nach der Größe des Grundstückes absteigend sortiert",
        "operationId": "getBauvorhaben",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/BauvorhabenDto" } } }
            }
          }
        }
      },
      "put": {
        "tags": ["Bauvorhaben"],
        "summary": "Aktualisierung eines Bauvorhabens",
        "operationId": "updateBauvorhaben",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BauvorhabenDto" } } },
          "required": true
        },
        "responses": {
          "404": {
            "description": "NOT_FOUND -> Bauvorhaben mit dieser ID nicht vorhanden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Bauvorhaben konnte nicht aktualisiert werden, da der Vorhabensname bereits existiert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": {
            "description": "OK -> Bauvorhaben wurde erfolgreich aktualisiert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/BauvorhabenDto" } } }
          },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Die Dateien konnten nicht gelöscht werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      },
      "post": {
        "tags": ["Bauvorhaben"],
        "summary": "Anlegen eines neuen Bauvorhabens",
        "operationId": "createBauvorhaben",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BauvorhabenDto" } } },
          "required": true
        },
        "responses": {
          "201": {
            "description": "CREATED -> Bauvorhaben wurde erfolgreich erstellt.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/BauvorhabenDto" } } }
          },
          "400": {
            "description": "BAD_REQUEST -> Bauvorhaben konnte nicht erstellt werden, überprüfen sie die Eingabe.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Bauvorhaben konnte nicht erstellt werden, da der Vorhabensname bereits existiert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      }
    },
    "/bauvorhaben/change-relevante-abfragevariante": {
      "put": {
        "tags": ["Bauvorhaben"],
        "summary": "Setzt die übergebene Abfragevariante als relevante Abfrage beim Bauvorhaben, welches mit der Abfrage der Abfragevariante verknüpft ist.Ist die Abfragevariante bereits als relevant markiert, wird die relevante Abfragevariante des Bauvorhabens entfernt.Eine Relevantsetzung kann nur vorgenommen werden, wenn die Abfrage ein Bauvorhaben referenziert,die Abfrage im Status {@link StatusAbfrage#IN_BEARBEITUNG_SACHBEARBEITUNG} istund noch keine andere Abfrage als relevant markiert wurde.",
        "operationId": "putChangeRelevanteAbfragevariante",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AbfragevarianteDto" } } },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BAD_REQUEST -> Relevante Abfragevariante konnte nicht geändert werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "404": {
            "description": "NOT_FOUND -> Abfrage oder Abfragevariante nicht gefunden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": {
            "description": "OK -> Relevante Abfragevariante erfolgreich geändert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/BauvorhabenDto" } } }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Es wurde bereits eine andere Abfragevariante als relevant markiert oder die Abfrage referenziert kein Bauvorhaben.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      }
    },
    "/wgs-to-utm": {
      "post": {
        "tags": ["Koordinaten"],
        "summary": "Umrechnung Wgs84 zu UTM",
        "operationId": "wgs84toUtm32",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Wgs84Dto" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK -> Transformation der Koordinate von WGS84 zu UTM32 war erfolgreich.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/UtmDto" } } }
          },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Bei der Transformation der Koordinate ist ein Fehler aufgetreten.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      }
    },
    "/utm-to-wgs": {
      "post": {
        "tags": ["Koordinaten"],
        "summary": "Umrechnung UTM32 zu WGS84",
        "operationId": "utm32ToWgs84",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UtmDto" } } },
          "required": true
        },
        "responses": {
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Bei der Transformation der Koordinate ist ein Fehler aufgetreten.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": {
            "description": "OK -> Transformation der Koordinate von UTM32 zu WGS84 war erfolgreich.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/Wgs84Dto" } } }
          }
        }
      }
    },
    "/stammdaten/staedtebauliche-orientierungswerte/import": {
      "post": {
        "tags": ["Stammdaten"],
        "summary": "Importiert die CSV-Datei und persistiert die Einträge in der Datenbank.",
        "operationId": "importStaedtebaulicheOrientierungswerte",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["file"],
                "type": "object",
                "properties": { "file": { "type": "string", "format": "binary" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "UNPROCESSABLE_ENTITY -> Die CSV-Datei konnte nicht korrekt verarbeitet werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Beim importieren der Datei ist ein serverseitiger Fehler aufgetreten.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": { "description": "OK -> Import konnte erfolgreich durchgeführt werden." }
        }
      }
    },
    "/stammdaten/sobon-orientierungswerte-soziale-infrastruktur/import": {
      "post": {
        "tags": ["Stammdaten"],
        "summary": "Importiert die CSV-Datei und persistiert die Einträge in der Datenbank.",
        "operationId": "importSoBoNOrientierungswerteSozialeInfrastruktur",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["file"],
                "type": "object",
                "properties": { "file": { "type": "string", "format": "binary" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "UNPROCESSABLE_ENTITY -> Die CSV-Datei konnte nicht korrekt verarbeitet werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Beim importieren der Datei ist ein serverseitiger Fehler aufgetreten.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": { "description": "OK -> Import konnte erfolgreich durchgeführt werden." }
        }
      }
    },
    "/presigned-url": {
      "get": {
        "tags": ["Dateihandling"],
        "summary": "Stellt die Presigned-Url zum Holen einer Datei zur Verfügung.",
        "description": "Die Presigned-Url ist vom Aufrufer mit der Http-Methode GET zu verwenden.",
        "operationId": "getFile",
        "parameters": [
          {
            "name": "pathToFile",
            "in": "query",
            "description": "Der Dateipfad muss absolut, ohne Angabe des Buckets und ohne führenden Pfadtrenner angegeben werden. Beispiel: outerFolder/innerFolder/thefile.pdf",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Der Dateipfad muss absolut, ohne Angabe des Buckets und ohne führenden Pfadtrenner angegeben werden. Beispiel: outerFolder/innerFolder/thefile.pdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/PresignedUrlDto" } } }
          },
          "400": {
            "description": "BAD REQUEST -> Der JSON-Body des Requests ist fehlerhaft oder nicht vorhanden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Die Presigned-Url konnte nicht erzeugt werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "404": {
            "description": "NOT FOUND -> Die Datei ist im S3-Storage nicht verfügbar.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      },
      "post": {
        "tags": ["Dateihandling"],
        "summary": "Stellt die Presigned-Url zum Initialen Speichern einer Datei zur Verfügung.",
        "description": "Die Presigned-Url ist vom Aufrufer mit der Http-Methode PUT zu verwenden.",
        "operationId": "saveFile",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FilepathDto" } } },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BAD REQUEST -> Der Request ist fehlerhaft.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/PresignedUrlDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Die Datei existiert bereits im S3-Storage unter dem Dateipfad.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Die Presigned-Url konnte nicht erzeugt werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      }
    },
    "/mime-type": {
      "post": {
        "tags": ["MimeType"],
        "summary": "Stellt die Mime-Type-Information für die im Parameter referenzierte und im S3-Storage befindliche Datei zur Verfügung.",
        "description": "Handelt es sich um einen ungültigen Mime-Type wird die referenzierte Datei vom S3-Storage gelöscht.",
        "operationId": "extractMediaTypeInformationForAllowedMediaType",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FilepathDto" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/MimeTypeInformationDto" } } }
          },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Bei der Ermittlung des Mime-Types ist ein Fehler aufgetreten.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "406": {
            "description": "NOT ACCEPTABLE -> Die referenzierte und im S3-Storage befindliche Datei besitzt keinen zulässigen Mime-Type.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      }
    },
    "/infrastruktur-abfragen": {
      "get": {
        "tags": ["Abfrage"],
        "summary": "Lade alle Infrastrukturabfragen",
        "description": "Das Ergebnis wird nach Frist Stellungnahme absteigend sortiert",
        "operationId": "getInfrastrukturabfragen",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/InfrastrukturabfrageDto" } }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Abfrage"],
        "summary": "Anlegen einer neuen Infrastrukturabfrage",
        "operationId": "createInfrastrukturabfrage",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/InfrastrukturabfrageAngelegtDto" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "CREATED -> Abfrage wurde erfolgreich erstellt.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InfrastrukturabfrageDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Abfrage konnte nicht erstellt werden, da der Name der Abfrage oder Abfragevariante bereits existiert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "400": {
            "description": "BAD_REQUEST -> Abfrage konnte nicht erstellt werden, überprüfen sie die Eingabe.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      }
    },
    "/infrastruktur-abfragen/abfrage-in-bearbeitung-sachbearbeitung/{id}": {
      "patch": {
        "tags": ["Abfrage"],
        "summary": "Aktualisierung einer Infrastrukturabfrage im Status IN_BEARBEITUNG_SACHBEARBEITUNG.",
        "operationId": "patchAbfrageInBearbeitungSachbearbeitung",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InfrastrukturabfrageInBearbeitungSachbearbeitungDto" }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BAD_REQUEST -> Abfrage konnte nicht aktualisiert werden, überprüfen sie die Eingabe oder die Abfrage befindet sich in einem unzulässigen Status",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": {
            "description": "OK -> Abfrage wurde erfolgreich aktualisiert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InfrastrukturabfrageDto" } } }
          }
        }
      }
    },
    "/infrastruktur-abfragen/abfrage-in-bearbeitung-fachreferate/{id}": {
      "patch": {
        "tags": ["Abfrage"],
        "summary": "Aktualisierung einer Infrastrukturabfrage im Status IN_BEARBEITUNG_FACHREFERATE.",
        "operationId": "patchAbfrageInBearbeitungFachreferate",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InfrastrukturabfrageInBearbeitungFachreferateDto" }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BAD_REQUEST -> Abfrage konnte nicht aktualisiert werden, überprüfen sie die Eingabe oder die Abfrage befindet sich in einem unzulässigen Status",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": {
            "description": "OK -> Abfrage wurde erfolgreich aktualisiert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InfrastrukturabfrageDto" } } }
          }
        }
      }
    },
    "/infrastruktur-abfragen/abfrage-angelegt/{id}": {
      "patch": {
        "tags": ["Abfrage"],
        "summary": "Aktualisierung einer Infrastrukturabfrage im Status ANGELEGT.",
        "operationId": "patchAbfrageAngelegt",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/InfrastrukturabfrageAngelegtDto" } }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BAD_REQUEST -> Abfrage konnte nicht aktualisiert werden, überprüfen sie die Eingabe oder die Abfrage befindet sich in einem unzulässigen Status",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "409": {
            "description": "CONFLICT -> Abfrage konnte nicht erstellt werden, da der Name der Abfrage oder Abfragevariante bereits existiert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": {
            "description": "OK -> Abfrage wurde erfolgreich aktualisiert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InfrastrukturabfrageDto" } } }
          },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Die Dateien konnten nicht gelöscht werden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      }
    },
    "/stammdaten/foerdermix/{id}": {
      "get": {
        "tags": ["FoerdermixStamm"],
        "summary": "Lesen eines FoerdermixStamm",
        "operationId": "getFoerdermixStammById",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/FoerdermixStammDto" } } }
          },
          "404": {
            "description": "NOT FOUND -> FoerdermixStamm mit dieser ID nicht vorhanden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      },
      "delete": {
        "tags": ["FoerdermixStamm"],
        "summary": "Löschen eines FoerdermixStamm",
        "operationId": "deleteFoerdermixStammById",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "404": {
            "description": "NOT FOUND -> FoerdermixStamm mit dieser ID nicht vorhanden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "204": { "description": "NO CONTENT" }
        }
      }
    },
    "/stammdaten/file-information": {
      "get": {
        "tags": ["FileInfoStamm"],
        "description": "Gibt die in der Anwendung erlaubten Dateiendungen, maximalen Dateigrößen, ... zurück (z.B. .pdf).",
        "operationId": "getFileInformation",
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/FileInformationDto" } } }
          }
        }
      }
    },
    "/lookup-lists": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gibt die Lookuplisten zurück.",
        "operationId": "getLookupLists",
        "responses": {
          "200": {
            "description": "OK -> Lookuplisten wurden erfolgreich zurückgegeben.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/LookupListsDto" } } }
          }
        }
      }
    },
    "/infrastruktureinrichtung/{id}": {
      "get": {
        "tags": ["Infrastruktureinrichtung"],
        "summary": "Lesen einer Infrastruktureinrichtung",
        "operationId": "getInfrastruktureinrichtungById",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GrundschuleDto" },
                    { "$ref": "#/components/schemas/GsNachmittagBetreuungDto" },
                    { "$ref": "#/components/schemas/HausFuerKinderDto" },
                    { "$ref": "#/components/schemas/KindergartenDto" },
                    { "$ref": "#/components/schemas/KinderkrippeDto" },
                    { "$ref": "#/components/schemas/MittelschuleDto" }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND -> Grundschule mit dieser ID nicht vorhanden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      },
      "delete": {
        "tags": ["Infrastruktureinrichtung"],
        "summary": "Löschen einer Infrastruktureinrichtung",
        "operationId": "deleteInfrastruktureinrichtungById",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "404": {
            "description": "NOT FOUND -> Infrastruktureinrichtung mit dieser ID nicht vorhanden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "204": { "description": "NO CONTENT" },
          "409": {
            "description": "CONFLICT -> Die Infrastruktureinrichtung referenziert ein Bauvorhaben.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      }
    },
    "/infrastruktureinrichtung/all": {
      "get": {
        "tags": ["Infrastruktureinrichtung"],
        "summary": "Lade alle Infrastruktureinrichtungen für die Listendarstellung",
        "operationId": "getInfrastruktureinrichtungListElements",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/InfrastruktureinrichtungListElementsDto" } }
            }
          }
        }
      }
    },
    "/infrastruktur-abfragen/{id}": {
      "get": {
        "tags": ["Abfrage"],
        "summary": "Lesen einer Infrastrukturabfrage",
        "operationId": "getInfrastrukturabfrageById",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InfrastrukturabfrageDto" } } }
          },
          "404": {
            "description": "NOT FOUND -> Abfrage mit dieser ID nicht vorhanden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      },
      "delete": {
        "tags": ["Abfrage"],
        "summary": "Löschen einer Infrastrukturabfrage",
        "operationId": "deleteInfrastrukturabfrageById",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "409": {
            "description": "CONFLICT -> Die Abfrage referenziert ein Bauvorhaben.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "404": {
            "description": "NOT FOUND -> Abfrage mit dieser ID nicht vorhanden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "204": { "description": "NO CONTENT" }
        }
      }
    },
    "/infrastruktur-abfrage/{id}/transitions": {
      "get": {
        "tags": ["AbfrageStatus"],
        "summary": "Holt alle möglichen StatusAbfrage Transitions auf Basis der Authorities und des aktuellen Status",
        "operationId": "transitionsInfrastrukturabfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "200": {
            "description": "OK -> Alle mögliche Transistions gefunden",
            "content": {
              "*/*": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/TransitionDto" } } }
            }
          }
        }
      }
    },
    "/dokumente": {
      "get": {
        "tags": ["Dokumente"],
        "summary": "Holen aller in der Anwendung vorhandenen Dokumente",
        "operationId": "getDokumente",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 100 }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/DokumenteDto" } } }
          }
        }
      }
    },
    "/bauvorhaben/{id}": {
      "get": {
        "tags": ["Bauvorhaben"],
        "summary": "Lesen eines Bauvorhabens",
        "operationId": "getBauvorhabenById",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/BauvorhabenDto" } } }
          },
          "404": {
            "description": "NOT FOUND -> Bauvorhaben mit dieser ID nicht vorhanden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      },
      "delete": {
        "tags": ["Bauvorhaben"],
        "summary": "Löschen eines Bauvorhabens",
        "operationId": "deleteBauvorhaben",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "409": {
            "description": "CONFLICT -> Das Bauvorhaben wird durch Abfragen referenziert.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          },
          "204": { "description": "NO CONTENT" },
          "404": {
            "description": "NOT FOUND -> Bauvorhaben mit dieser ID nicht vorhanden.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      }
    },
    "/bauvorhaben/referenced/infrastruktureinrichtung/{id}": {
      "get": {
        "tags": ["Bauvorhaben"],
        "summary": "Lade alle Infrastruktureinrichtungen die einem Bauvorhaben angehören",
        "description": "Das Ergebnis wird anhand des InfrastruktureinrichtungTyps und innerhalb des Types alphabetisch sortiert",
        "operationId": "getReferencedInfrastruktureinrichtung",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/InfrastruktureinrichtungListElementDto" }
                }
              }
            }
          }
        }
      }
    },
    "/bauvorhaben/referenced/abfragen/{id}": {
      "get": {
        "tags": ["Bauvorhaben"],
        "summary": "Lade alle Infrastrukturabfragen die einem Bauvorhaben angehören",
        "description": "Das Ergebnis wird anhand des Erstellungsdatums aufsteigend sortiert.",
        "operationId": "getReferencedInfrastrukturabfragen",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/AbfrageListElementDto" } }
              }
            }
          }
        }
      }
    },
    "/baurate/determine": {
      "get": {
        "tags": ["Baurate"],
        "summary": "Ermittelt die Bauraten auf Basis der Stammdaten für idealtypische Bauraten",
        "operationId": "determineBauraten",
        "parameters": [
          {
            "name": "realisierungsbeginn",
            "in": "query",
            "required": true,
            "schema": { "minimum": 0, "type": "integer", "format": "int32" }
          },
          {
            "name": "wohneinheiten",
            "in": "query",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "format": "int64" }
          },
          {
            "name": "geschossflaecheWohnen",
            "in": "query",
            "required": false,
            "schema": { "minimum": 0, "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/BaurateDto" } } }
            }
          },
          "404": {
            "description": "NOT FOUND -> Es konnten keine Bauraten ermittelt werden, da keine idealtypischen Bauraten für die gegebenen Parameter existieren.",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } } }
          }
        }
      }
    },
    "/abfragen": {
      "get": {
        "tags": ["Abfragelisten"],
        "summary": "Lade alle Abfragen für die Listendarstellung",
        "operationId": "getAbfrageListElements",
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/AbfrageListElementsDto" } } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "FoerderartDto": {
        "type": "object",
        "properties": { "bezeichnung": { "type": "string" }, "anteilProzent": { "type": "number" } }
      },
      "FoerdermixDto": {
        "type": "object",
        "properties": { "foerderarten": { "type": "array", "items": { "$ref": "#/components/schemas/FoerderartDto" } } }
      },
      "FoerdermixStammDto": {
        "required": ["bezeichnung", "bezeichnungJahr", "foerdermix"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "bezeichnungJahr": { "maxLength": 255, "minLength": 0, "type": "string" },
          "bezeichnung": { "maxLength": 80, "minLength": 0, "type": "string" },
          "foerdermix": { "$ref": "#/components/schemas/FoerdermixDto" }
        }
      },
      "InformationResponseDto": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "enum": ["ERROR", "WARNING", "INFORMATION_SUCCESS", "INFORMATION_NEUTRAL"] },
          "timestamp": { "type": "string", "format": "date-time" },
          "traceId": { "type": "string" },
          "spanId": { "type": "string" },
          "httpStatus": { "type": "integer", "format": "int32" },
          "originalException": { "type": "string" },
          "messages": { "type": "array", "items": { "type": "string" } }
        }
      },
      "AdresseDto": {
        "type": "object",
        "properties": {
          "plz": { "maxLength": 255, "minLength": 0, "type": "string" },
          "ort": { "maxLength": 255, "minLength": 0, "type": "string" },
          "strasse": { "maxLength": 255, "minLength": 0, "type": "string" },
          "hausnummer": { "maxLength": 255, "minLength": 0, "type": "string" },
          "coordinate": { "$ref": "#/components/schemas/Wgs84Dto" }
        }
      },
      "GrundschuleDto": {
        "required": ["nameEinrichtung", "schule", "status"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/InfrastruktureinrichtungDto" },
          { "type": "object", "properties": { "schule": { "$ref": "#/components/schemas/SchuleDto" } } }
        ]
      },
      "GsNachmittagBetreuungDto": {
        "required": ["anzahlHortGruppen", "anzahlHortPlaetze", "nameEinrichtung", "status"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/InfrastruktureinrichtungDto" },
          {
            "type": "object",
            "properties": {
              "artGsNachmittagBetreuung": {
                "type": "string",
                "enum": [
                  "HORT",
                  "KOOPERATIVER_GANZTAG_FLEXIBLE_VARIANTE",
                  "KOOPERATIVER_GANZTAG_RHYTHMISIERTE_VARIANTE",
                  "TAGESHEIM",
                  "MITTAGSBETREUUNG"
                ]
              },
              "anzahlHortPlaetze": { "minimum": 0, "type": "integer", "format": "int32" },
              "anzahlHortGruppen": { "minimum": 0, "type": "integer", "format": "int32" },
              "wohnungsnaheHortPlaetze": { "minimum": 0, "type": "integer", "format": "int32" }
            }
          }
        ]
      },
      "HausFuerKinderDto": {
        "required": ["nameEinrichtung", "status"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/InfrastruktureinrichtungDto" },
          {
            "type": "object",
            "properties": {
              "anzahlKinderkrippePlaetze": { "type": "integer", "format": "int32" },
              "anzahlKindergartenPlaetze": { "type": "integer", "format": "int32" },
              "anzahlHortPlaetze": { "type": "integer", "format": "int32" },
              "anzahlKinderkrippeGruppen": { "type": "integer", "format": "int32" },
              "anzahlKindergartenGruppen": { "type": "integer", "format": "int32" },
              "anzahlHortGruppen": { "type": "integer", "format": "int32" },
              "wohnungsnaheKinderkrippePlaetze": { "type": "integer", "format": "int32" },
              "wohnungsnaheKindergartenPlaetze": { "type": "integer", "format": "int32" },
              "wohnungsnaheHortPlaetze": { "type": "integer", "format": "int32" }
            }
          }
        ]
      },
      "InfrastruktureinrichtungDto": {
        "required": ["nameEinrichtung", "status"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "infrastruktureinrichtungTyp": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "KINDERKRIPPE",
              "KINDERGARTEN",
              "GS_NACHMITTAG_BETREUUNG",
              "HAUS_FUER_KINDER",
              "GRUNDSCHULE",
              "MITTELSCHULE"
            ]
          },
          "lfdNr": { "type": "integer", "format": "int64" },
          "bauvorhaben": { "type": "string", "format": "uuid" },
          "allgemeineOrtsangabe": { "maxLength": 255, "minLength": 0, "type": "string" },
          "adresse": { "$ref": "#/components/schemas/AdresseDto" },
          "nameEinrichtung": { "maxLength": 255, "minLength": 0, "type": "string" },
          "fertigstellungsjahr": { "maximum": 2100, "minimum": 1900, "type": "integer", "format": "int32" },
          "status": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "UNGESICHERTE_PLANUNG",
              "GESICHERTE_PLANUNG_NEUE_EINR",
              "GESICHERTE_PLANUNG_ERW_PLAETZE_BEST_EINR",
              "GESICHERTE_PLANUNG_TF_KITA_STANDORT",
              "GESICHERTE_PLANUNG_REDUZIERUNG_PLAETZE",
              "GESICHERTE_PLANUNG_INTERIMSSTANDORT",
              "UNGESICHERTE_PLANUNG_TF_KITA_STANDORT",
              "BESTAND"
            ]
          },
          "einrichtungstraeger": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "KITA_STAEDTISCHE_EINRICHTUNG",
              "KITA_EINRICHTUNG_BETRIEBSTRAEGERSCHAFT",
              "KITA_FREIE_GEMEINNUETZIGE_SONSTIGE",
              "KITA_EINRICHTUNG_GESAMTSTAEDTISCH",
              "GS_BETREUUNG_STAEDTISCHE_EINRICHTUNG",
              "GS_BETREUUNG_ELTERN_KIND_INITIATIVE",
              "GS_BETREUUNG_STAATLICHE_EINRICHTUNG",
              "GS_BETREUUNG_PRIVATE_TRAEGERSCHAFT",
              "GS_BETREUUNG_KIRCHLICHE_TRAEGERSCHAFT",
              "SCHULE_STAEDTISCHE_EINRICHTUNG",
              "SCHULE_STAATLICHE_EINRICHTUNG",
              "SCHULE_PRIVATE_TRAEGERSCHAFT",
              "SCHULE_KIRCHLICHE_TRAEGERSCHAFT"
            ]
          },
          "flaecheGesamtgrundstueck": { "type": "number" },
          "flaecheTeilgrundstueck": { "type": "number" },
          "zugeordnetesBaugebiet": { "type": "string", "format": "uuid" }
        },
        "discriminator": { "propertyName": "infrastruktureinrichtungTyp" }
      },
      "KindergartenDto": {
        "required": ["anzahlKindergartenGruppen", "anzahlKindergartenPlaetze", "nameEinrichtung", "status"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/InfrastruktureinrichtungDto" },
          {
            "type": "object",
            "properties": {
              "anzahlKindergartenPlaetze": { "type": "integer", "format": "int32" },
              "anzahlKindergartenGruppen": { "type": "integer", "format": "int32" },
              "wohnungsnaheKindergartenPlaetze": { "type": "integer", "format": "int32" }
            }
          }
        ]
      },
      "KinderkrippeDto": {
        "required": ["anzahlKinderkrippeGruppen", "anzahlKinderkrippePlaetze", "nameEinrichtung", "status"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/InfrastruktureinrichtungDto" },
          {
            "type": "object",
            "properties": {
              "anzahlKinderkrippePlaetze": { "type": "integer", "format": "int32" },
              "anzahlKinderkrippeGruppen": { "type": "integer", "format": "int32" },
              "wohnungsnaheKinderkrippePlaetze": { "type": "integer", "format": "int32" }
            }
          }
        ]
      },
      "MittelschuleDto": {
        "required": ["nameEinrichtung", "schule", "status"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/InfrastruktureinrichtungDto" },
          { "type": "object", "properties": { "schule": { "$ref": "#/components/schemas/SchuleDto" } } }
        ]
      },
      "SchuleDto": {
        "required": ["anzahlKlassen", "anzahlPlaetze"],
        "type": "object",
        "properties": {
          "anzahlKlassen": { "type": "integer", "format": "int32" },
          "anzahlPlaetze": { "type": "integer", "format": "int32" }
        }
      },
      "Wgs84Dto": {
        "required": ["latitude", "longitude"],
        "type": "object",
        "properties": {
          "latitude": { "type": "number", "format": "double" },
          "longitude": { "type": "number", "format": "double" }
        }
      },
      "AbfragevarianteDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "abfragevariantenName": { "type": "string" },
          "planungsrecht": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "BPLAN_PARAG_30",
              "BPLAN_PARAG_12",
              "BPLAN_PARAG_11",
              "BPLAN_AEND_BBPLAN",
              "NACHVERD_PARAG_34",
              "NACHVERD_PARAG_35",
              "NACHVERD_PARAG_31",
              "NACHVERD_BAURECHTSAUSSCHOEPFUNG",
              "SONSTIGES_UMSTRUKTURIERUNG",
              "SONSTIGES_PARAG_165",
              "SONSTIGES_PARAG_246"
            ]
          },
          "geschossflaecheWohnen": { "type": "number" },
          "geschossflaecheWohnenGenehmigt": { "type": "number" },
          "geschossflaecheWohnenFestgesetzt": { "type": "number" },
          "geschossflaecheWohnenSoBoNursaechlich": { "type": "number" },
          "geschossflaecheWohnenBestandswohnbaurecht": { "type": "number" },
          "gesamtanzahlWe": { "type": "integer", "format": "int32" },
          "anzahlWeBaurechtlichGenehmigt": { "type": "integer", "format": "int32" },
          "anzahlWeBaurechtlichFestgesetzt": { "type": "integer", "format": "int32" },
          "realisierungVon": { "type": "integer", "format": "int32" },
          "satzungsbeschluss": { "type": "string", "format": "date" },
          "geschossflaecheGenossenschaftlicheWohnungen": { "type": "number" },
          "sonderwohnformen": { "type": "boolean" },
          "geschossflaecheStudentenwohnungen": { "type": "number" },
          "geschossflaecheSeniorenwohnungen": { "type": "number" },
          "geschossflaecheSonstiges": { "type": "number" },
          "bauabschnitte": { "type": "array", "items": { "$ref": "#/components/schemas/BauabschnittDto" } },
          "abfragevarianteSachbearbeitung": { "$ref": "#/components/schemas/AbfragevarianteSachbearbeitungDto" }
        }
      },
      "AbfragevarianteSachbearbeitungDto": {
        "type": "object",
        "properties": {
          "geschossflaecheWohnenPlanungsursaechlich": { "type": "number" },
          "soBoNOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022"]
          },
          "anmerkung": { "type": "string" },
          "bedarfsmeldungFachreferate": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BedarfsmeldungFachabteilungenDto" }
          }
        }
      },
      "BauabschnittDto": {
        "required": ["baugebiete", "bezeichnung", "technical"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "bezeichnung": { "maxLength": 255, "minLength": 0, "type": "string" },
          "baugebiete": { "type": "array", "items": { "$ref": "#/components/schemas/BaugebietDto" } },
          "technical": { "type": "boolean" }
        }
      },
      "BaugebietDto": {
        "required": ["baugebietArt", "bauraten", "bezeichnung", "realisierungVon", "technical"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "bezeichnung": { "maxLength": 255, "minLength": 0, "type": "string" },
          "baugebietArt": { "type": "string", "enum": ["WR", "WA", "MU", "MK", "MI", "GE"] },
          "realisierungVon": { "maximum": 2100, "minimum": 1900, "type": "integer", "format": "int32" },
          "gesamtanzahlWe": { "type": "integer", "format": "int32" },
          "anzahlWohneinheitenBaurechtlichGenehmigt": { "type": "integer", "format": "int32" },
          "anzahlWohneinheitenBaurechtlichFestgesetzt": { "type": "integer", "format": "int32" },
          "geschossflaecheWohnen": { "type": "number" },
          "geschossflaecheWohnenGenehmigt": { "type": "number" },
          "geschossflaecheWohnenFestgesetzt": { "type": "number" },
          "bauraten": { "type": "array", "items": { "$ref": "#/components/schemas/BaurateDto" } },
          "technical": { "type": "boolean" }
        }
      },
      "BaurateDto": {
        "required": ["foerdermix", "jahr"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "jahr": { "maximum": 2100, "minimum": 1900, "type": "integer", "format": "int32" },
          "anzahlWeGeplant": { "type": "integer", "format": "int32" },
          "geschossflaecheWohnenGeplant": { "type": "number" },
          "foerdermix": { "$ref": "#/components/schemas/FoerdermixDto" }
        }
      },
      "BauvorhabenDto": {
        "required": [
          "artFnp",
          "bauvorhabenNummer",
          "eigentuemer",
          "grundstuecksgroesse",
          "nameVorhaben",
          "planungsrecht",
          "sobonRelevant",
          "standVorhaben"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "nameVorhaben": { "maxLength": 255, "minLength": 0, "type": "string" },
          "eigentuemer": { "maxLength": 255, "minLength": 0, "type": "string" },
          "grundstuecksgroesse": { "type": "number" },
          "standVorhaben": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "GRUNDSATZ_ECKDATENBESCHLUSS",
              "AUFSTELLUNGSBESCHLUSS",
              "PARAG_3_1_BAUGB",
              "PARAG_3_2_BAUGB",
              "PARAG_4_1_2_BAUGB",
              "BILLIGUNGSBESCHLUSS",
              "SATZUNGSBESCHLUSS",
              "BPLAN_IN_KRAFT",
              "VORBESCHEID_EINGEREICHT",
              "BAUANTRAG_EINGEREICHT",
              "BAUGENEHMIGUNG_ERTEILT",
              "BAUBEGINN_ANGEZEIGT",
              "BAUFERTIGSTELLUNG_GEPLANT",
              "BAUFERTIGSTELLUNG_ANGEZEIGT"
            ]
          },
          "bauvorhabenNummer": { "maxLength": 255, "minLength": 0, "type": "string" },
          "adresse": { "$ref": "#/components/schemas/AdresseDto" },
          "verortung": { "$ref": "#/components/schemas/VerortungDto" },
          "allgemeineOrtsangabe": { "maxLength": 255, "minLength": 0, "type": "string" },
          "bebauungsplannummer": { "maxLength": 255, "minLength": 0, "type": "string" },
          "fisNummer": { "maxLength": 255, "minLength": 0, "type": "string" },
          "anmerkung": { "maxLength": 255, "minLength": 0, "type": "string" },
          "sobonRelevant": { "$ref": "#/components/schemas/UncertainBoolean" },
          "sobonJahr": {
            "type": "string",
            "enum": [
              "JAHR_1995",
              "JAHR_1997",
              "JAHR_2001",
              "JAHR_2006",
              "JAHR_2012",
              "JAHR_2017",
              "JAHR_2017_PLUS",
              "JAHR_2021"
            ]
          },
          "planungsrecht": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "BPLAN_PARAG_30",
              "BPLAN_PARAG_12",
              "BPLAN_PARAG_11",
              "BPLAN_AEND_BBPLAN",
              "NACHVERD_PARAG_34",
              "NACHVERD_PARAG_35",
              "NACHVERD_PARAG_31",
              "NACHVERD_BAURECHTSAUSSCHOEPFUNG",
              "SONSTIGES_UMSTRUKTURIERUNG",
              "SONSTIGES_PARAG_165",
              "SONSTIGES_PARAG_246"
            ]
          },
          "artFnp": { "type": "array", "items": { "type": "string", "enum": ["WR", "WA", "MU", "MK", "MI", "GE"] } },
          "dokumente": { "type": "array", "items": { "$ref": "#/components/schemas/DokumentDto" } },
          "relevanteAbfragevariante": { "$ref": "#/components/schemas/AbfragevarianteDto" }
        }
      },
      "BedarfsmeldungFachabteilungenDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "anzahlEinrichtungen": { "type": "integer", "format": "int32" },
          "infrastruktureinrichtungTyp": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "KINDERKRIPPE",
              "KINDERGARTEN",
              "GS_NACHMITTAG_BETREUUNG",
              "HAUS_FUER_KINDER",
              "GRUNDSCHULE",
              "MITTELSCHULE"
            ]
          },
          "anzahlKinderkrippengruppen": { "type": "integer", "format": "int32" },
          "anzahlKindergartengruppen": { "type": "integer", "format": "int32" },
          "anzahlHortgruppen": { "type": "integer", "format": "int32" },
          "anzahlGrundschulzuege": { "type": "integer", "format": "int32" }
        }
      },
      "DokumentDto": {
        "required": ["artDokument", "filePath", "sizeInBytes", "typDokument"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "filePath": { "$ref": "#/components/schemas/FilepathDto" },
          "artDokument": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "EMAIL",
              "BESCHLUSS",
              "ANLAGE",
              "ANTRAG",
              "KARTE",
              "STELLUNGNAHME",
              "DATEN_BAUVORHABEN",
              "GEBAEUDEPLAN",
              "BERECHNUNG",
              "INFOS_BAUGENEHMIGUNG",
              "PRESSEARTIKEL",
              "SONSTIGES"
            ]
          },
          "sizeInBytes": { "minimum": 0, "type": "integer", "format": "int64" },
          "typDokument": { "maxLength": 255, "minLength": 0, "type": "string" }
        }
      },
      "FilepathDto": {
        "required": ["pathToFile"],
        "type": "object",
        "properties": {
          "pathToFile": {
            "type": "string",
            "description": "Der Dateipfad muss absolut, ohne Angabe des Buckets und ohne führenden Pfadtrenner angegeben werden. Beispiel: outerFolder/innerFolder/thefile.pdf"
          }
        }
      },
      "FlurstueckDto": {
        "required": ["multiPolygon"],
        "type": "object",
        "properties": {
          "nummer": { "type": "string" },
          "flaecheQm": { "type": "number" },
          "zaehler": { "type": "integer", "format": "int64" },
          "nenner": { "type": "integer", "format": "int64" },
          "eigentumsart": { "type": "integer", "format": "int64" },
          "eigentumsartBedeutung": { "type": "string" },
          "gemarkungNummer": { "type": "number" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryDto" }
        }
      },
      "GemarkungDto": {
        "required": ["flurstuecke", "multiPolygon"],
        "type": "object",
        "properties": {
          "nummer": { "type": "number" },
          "name": { "type": "string" },
          "flurstuecke": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/FlurstueckDto" }
          },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryDto" }
        }
      },
      "MultiPolygonGeometryDto": {
        "required": ["coordinates", "type"],
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": { "type": "array", "items": { "type": "array", "items": { "type": "number" } } }
            }
          }
        }
      },
      "StadtbezirkDto": {
        "required": ["multiPolygon"],
        "type": "object",
        "properties": {
          "nummer": { "type": "string" },
          "name": { "type": "string" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryDto" }
        }
      },
      "UncertainBoolean": { "type": "string", "enum": ["UNSPECIFIED", "TRUE", "FALSE"] },
      "VerortungDto": {
        "required": ["gemarkungen", "multiPolygon", "stadtbezirke"],
        "type": "object",
        "properties": {
          "stadtbezirke": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/StadtbezirkDto" }
          },
          "gemarkungen": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/GemarkungDto" }
          },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryDto" }
        }
      },
      "UtmDto": {
        "required": ["east", "north"],
        "type": "object",
        "properties": {
          "zone": { "maxLength": 255, "minLength": 0, "type": "string" },
          "north": { "type": "number", "format": "double" },
          "east": { "type": "number", "format": "double" }
        }
      },
      "PresignedUrlDto": {
        "type": "object",
        "properties": {
          "httpMethodToUse": { "type": "string", "description": "Die HTTP-Methode für den Request der Presigned-Url" },
          "url": { "type": "string", "description": "Die Presigned-Url" }
        }
      },
      "MimeTypeInformationDto": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "description": { "type": "string" },
          "acronym": { "type": "string" }
        }
      },
      "AbfrageAngelegtDto": {
        "required": ["fristStellungnahme", "nameAbfrage", "standVorhaben"],
        "type": "object",
        "properties": {
          "dokumente": { "type": "array", "items": { "$ref": "#/components/schemas/DokumentDto" } },
          "allgemeineOrtsangabe": { "maxLength": 255, "minLength": 0, "type": "string" },
          "adresse": { "$ref": "#/components/schemas/AdresseDto" },
          "verortung": { "$ref": "#/components/schemas/VerortungModel" },
          "fristStellungnahme": { "type": "string", "format": "date" },
          "anmerkung": { "maxLength": 255, "minLength": 0, "type": "string" },
          "bebauungsplannummer": { "maxLength": 255, "minLength": 0, "type": "string" },
          "nameAbfrage": { "maxLength": 70, "minLength": 0, "type": "string" },
          "standVorhaben": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "GRUNDSATZ_ECKDATENBESCHLUSS",
              "AUFSTELLUNGSBESCHLUSS",
              "PARAG_3_1_BAUGB",
              "PARAG_3_2_BAUGB",
              "PARAG_4_1_2_BAUGB",
              "BILLIGUNGSBESCHLUSS",
              "SATZUNGSBESCHLUSS",
              "BPLAN_IN_KRAFT",
              "VORBESCHEID_EINGEREICHT",
              "BAUANTRAG_EINGEREICHT",
              "BAUGENEHMIGUNG_ERTEILT",
              "BAUBEGINN_ANGEZEIGT",
              "BAUFERTIGSTELLUNG_GEPLANT",
              "BAUFERTIGSTELLUNG_ANGEZEIGT"
            ]
          },
          "bauvorhaben": { "type": "string", "format": "uuid" }
        }
      },
      "AbfragevarianteAngelegtDto": {
        "required": [
          "abfragevariantenName",
          "abfragevariantenNr",
          "planungsrecht",
          "realisierungVon",
          "sonderwohnformen"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "abfragevariantenName": { "maxLength": 30, "minLength": 0, "type": "string" },
          "planungsrecht": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "BPLAN_PARAG_30",
              "BPLAN_PARAG_12",
              "BPLAN_PARAG_11",
              "BPLAN_AEND_BBPLAN",
              "NACHVERD_PARAG_34",
              "NACHVERD_PARAG_35",
              "NACHVERD_PARAG_31",
              "NACHVERD_BAURECHTSAUSSCHOEPFUNG",
              "SONSTIGES_UMSTRUKTURIERUNG",
              "SONSTIGES_PARAG_165",
              "SONSTIGES_PARAG_246"
            ]
          },
          "geschossflaecheWohnen": { "type": "number" },
          "geschossflaecheWohnenGenehmigt": { "type": "number" },
          "geschossflaecheWohnenFestgesetzt": { "type": "number" },
          "geschossflaecheWohnenSoBoNursaechlich": { "type": "number" },
          "geschossflaecheWohnenBestandswohnbaurecht": { "type": "number" },
          "gesamtanzahlWe": { "type": "integer", "format": "int32" },
          "anzahlWeBaurechtlichGenehmigt": { "type": "integer", "format": "int32" },
          "anzahlWeBaurechtlichFestgesetzt": { "type": "integer", "format": "int32" },
          "realisierungVon": { "maximum": 2100, "minimum": 1900, "type": "integer", "format": "int32" },
          "satzungsbeschluss": { "type": "string", "format": "date" },
          "geschossflaecheGenossenschaftlicheWohnungen": { "type": "number" },
          "sonderwohnformen": { "type": "boolean" },
          "geschossflaecheStudentenwohnungen": { "type": "number" },
          "geschossflaecheSeniorenwohnungen": { "type": "number" },
          "geschossflaecheSonstiges": { "type": "number" },
          "bauabschnitte": { "type": "array", "items": { "$ref": "#/components/schemas/BauabschnittDto" } }
        }
      },
      "FlurstueckModel": {
        "type": "object",
        "properties": {
          "nummer": { "type": "string" },
          "flaecheQm": { "type": "number" },
          "zaehler": { "type": "integer", "format": "int64" },
          "nenner": { "type": "integer", "format": "int64" },
          "eigentumsart": { "type": "integer", "format": "int64" },
          "eigentumsartBedeutung": { "type": "string" },
          "gemarkungNummer": { "type": "number" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryModel" }
        }
      },
      "GemarkungModel": {
        "type": "object",
        "properties": {
          "nummer": { "type": "number" },
          "name": { "type": "string" },
          "flurstuecke": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/FlurstueckModel" }
          },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryModel" }
        }
      },
      "InfrastrukturabfrageAngelegtDto": {
        "required": ["abfrage", "abfragevarianten", "offiziellerVerfahrensschritt", "sobonRelevant"],
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "abfrage": { "$ref": "#/components/schemas/AbfrageAngelegtDto" },
          "sobonRelevant": { "$ref": "#/components/schemas/UncertainBoolean" },
          "sobonJahr": {
            "type": "string",
            "enum": [
              "JAHR_1995",
              "JAHR_1997",
              "JAHR_2001",
              "JAHR_2006",
              "JAHR_2012",
              "JAHR_2017",
              "JAHR_2017_PLUS",
              "JAHR_2021"
            ]
          },
          "abfragevarianten": {
            "maxItems": 5,
            "minItems": 1,
            "type": "array",
            "items": { "$ref": "#/components/schemas/AbfragevarianteAngelegtDto" }
          },
          "aktenzeichenProLbk": { "maxLength": 255, "minLength": 0, "type": "string" },
          "offiziellerVerfahrensschritt": { "$ref": "#/components/schemas/UncertainBoolean" },
          "displayName": { "maxLength": 255, "minLength": 0, "type": "string" }
        }
      },
      "MultiPolygonGeometryModel": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": { "type": "array", "items": { "type": "array", "items": { "type": "number" } } }
            }
          }
        }
      },
      "StadtbezirkModel": {
        "type": "object",
        "properties": {
          "nummer": { "type": "string" },
          "name": { "type": "string" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryModel" }
        }
      },
      "VerortungModel": {
        "type": "object",
        "properties": {
          "stadtbezirke": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/StadtbezirkModel" }
          },
          "gemarkungen": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/GemarkungModel" }
          },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryModel" }
        }
      },
      "AbfrageDto": {
        "required": ["fristStellungnahme"],
        "type": "object",
        "properties": {
          "dokumente": { "type": "array", "items": { "$ref": "#/components/schemas/DokumentDto" } },
          "allgemeineOrtsangabe": { "type": "string" },
          "adresse": { "$ref": "#/components/schemas/AdresseDto" },
          "verortung": { "$ref": "#/components/schemas/VerortungDto" },
          "fristStellungnahme": { "type": "string", "format": "date" },
          "anmerkung": { "type": "string" },
          "statusAbfrage": { "$ref": "#/components/schemas/StatusAbfrage" },
          "bebauungsplannummer": { "type": "string" },
          "nameAbfrage": { "type": "string" },
          "standVorhaben": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "GRUNDSATZ_ECKDATENBESCHLUSS",
              "AUFSTELLUNGSBESCHLUSS",
              "PARAG_3_1_BAUGB",
              "PARAG_3_2_BAUGB",
              "PARAG_4_1_2_BAUGB",
              "BILLIGUNGSBESCHLUSS",
              "SATZUNGSBESCHLUSS",
              "BPLAN_IN_KRAFT",
              "VORBESCHEID_EINGEREICHT",
              "BAUANTRAG_EINGEREICHT",
              "BAUGENEHMIGUNG_ERTEILT",
              "BAUBEGINN_ANGEZEIGT",
              "BAUFERTIGSTELLUNG_GEPLANT",
              "BAUFERTIGSTELLUNG_ANGEZEIGT"
            ]
          },
          "bauvorhaben": { "type": "string", "format": "uuid" }
        }
      },
      "InfrastrukturabfrageDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "abfrage": { "$ref": "#/components/schemas/AbfrageDto" },
          "sobonRelevant": { "$ref": "#/components/schemas/UncertainBoolean" },
          "sobonJahr": {
            "type": "string",
            "enum": [
              "JAHR_1995",
              "JAHR_1997",
              "JAHR_2001",
              "JAHR_2006",
              "JAHR_2012",
              "JAHR_2017",
              "JAHR_2017_PLUS",
              "JAHR_2021"
            ]
          },
          "abfragevarianten": { "type": "array", "items": { "$ref": "#/components/schemas/AbfragevarianteDto" } },
          "abfragevariantenSachbearbeitung": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AbfragevarianteDto" }
          },
          "aktenzeichenProLbk": { "type": "string" },
          "offiziellerVerfahrensschritt": { "$ref": "#/components/schemas/UncertainBoolean" },
          "displayName": { "type": "string" }
        }
      },
      "StatusAbfrage": {
        "type": "string",
        "enum": [
          "ANGELEGT",
          "OFFEN",
          "IN_BEARBEITUNG_SACHBEARBEITUNG",
          "IN_BEARBEITUNG_FACHREFERATE",
          "BEDARFSMELDUNG_ERFOLGT",
          "ERLEDIGT",
          "ABBRUCH"
        ]
      },
      "AbfragevarianteInBearbeitungSachbearbeitungDto": {
        "required": [
          "abfragevarianteSachbearbeitung",
          "abfragevariantenName",
          "abfragevariantenNr",
          "planungsrecht",
          "realisierungVon",
          "sonderwohnformen"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "abfragevariantenName": { "maxLength": 30, "minLength": 0, "type": "string" },
          "planungsrecht": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "BPLAN_PARAG_30",
              "BPLAN_PARAG_12",
              "BPLAN_PARAG_11",
              "BPLAN_AEND_BBPLAN",
              "NACHVERD_PARAG_34",
              "NACHVERD_PARAG_35",
              "NACHVERD_PARAG_31",
              "NACHVERD_BAURECHTSAUSSCHOEPFUNG",
              "SONSTIGES_UMSTRUKTURIERUNG",
              "SONSTIGES_PARAG_165",
              "SONSTIGES_PARAG_246"
            ]
          },
          "geschossflaecheWohnen": { "type": "number" },
          "geschossflaecheWohnenGenehmigt": { "type": "number" },
          "geschossflaecheWohnenFestgesetzt": { "type": "number" },
          "geschossflaecheWohnenSoBoNursaechlich": { "type": "number" },
          "geschossflaecheWohnenBestandswohnbaurecht": { "type": "number" },
          "gesamtanzahlWe": { "type": "integer", "format": "int32" },
          "anzahlWeBaurechtlichGenehmigt": { "type": "integer", "format": "int32" },
          "anzahlWeBaurechtlichFestgesetzt": { "type": "integer", "format": "int32" },
          "realisierungVon": { "maximum": 2100, "minimum": 1900, "type": "integer", "format": "int32" },
          "satzungsbeschluss": { "type": "string", "format": "date" },
          "geschossflaecheGenossenschaftlicheWohnungen": { "type": "number" },
          "sonderwohnformen": { "type": "boolean" },
          "geschossflaecheStudentenwohnungen": { "type": "number" },
          "geschossflaecheSeniorenwohnungen": { "type": "number" },
          "geschossflaecheSonstiges": { "type": "number" },
          "bauabschnitte": { "type": "array", "items": { "$ref": "#/components/schemas/BauabschnittDto" } },
          "abfragevarianteSachbearbeitung": { "$ref": "#/components/schemas/AbfragevarianteSachbearbeitungDto" }
        }
      },
      "AbfragevarianteSachbearbeitungInBearbeitungSachbearbeitungDto": {
        "required": ["abfragevarianteSachbearbeitung"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "abfragevarianteSachbearbeitung": { "$ref": "#/components/schemas/AbfragevarianteSachbearbeitungDto" }
        }
      },
      "InfrastrukturabfrageInBearbeitungSachbearbeitungDto": {
        "required": ["abfragevarianten", "abfragevariantenSachbearbeitung"],
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "abfragevarianten": {
            "maxItems": 5,
            "minItems": 1,
            "type": "array",
            "items": { "$ref": "#/components/schemas/AbfragevarianteSachbearbeitungInBearbeitungSachbearbeitungDto" }
          },
          "abfragevariantenSachbearbeitung": {
            "maxItems": 5,
            "minItems": 0,
            "type": "array",
            "items": { "$ref": "#/components/schemas/AbfragevarianteInBearbeitungSachbearbeitungDto" }
          }
        }
      },
      "AbfragevarianteInBearbeitungFachreferateDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "bedarfsmeldungFachreferate": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BedarfsmeldungFachabteilungenDto" }
          }
        }
      },
      "InfrastrukturabfrageInBearbeitungFachreferateDto": {
        "required": ["abfragevarianten", "abfragevariantenSachbearbeitung"],
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "abfragevarianten": {
            "maxItems": 5,
            "minItems": 1,
            "type": "array",
            "items": { "$ref": "#/components/schemas/AbfragevarianteInBearbeitungFachreferateDto" }
          },
          "abfragevariantenSachbearbeitung": {
            "maxItems": 5,
            "minItems": 0,
            "type": "array",
            "items": { "$ref": "#/components/schemas/AbfragevarianteInBearbeitungFachreferateDto" }
          }
        }
      },
      "FileInformationDto": {
        "type": "object",
        "properties": {
          "maxFileSizeBytes": { "type": "integer", "format": "int64" },
          "maxNumberOfFiles": { "type": "integer", "format": "int64" },
          "allowedMimeTypes": { "type": "array", "items": { "type": "string" } }
        }
      },
      "LookupEntryDto": {
        "type": "object",
        "properties": { "key": { "type": "string" }, "value": { "type": "string" } }
      },
      "LookupListDto": {
        "type": "object",
        "properties": { "list": { "type": "array", "items": { "$ref": "#/components/schemas/LookupEntryDto" } } }
      },
      "LookupListsDto": {
        "type": "object",
        "properties": {
          "uncertainBoolean": { "$ref": "#/components/schemas/LookupListDto" },
          "artDokument": { "$ref": "#/components/schemas/LookupListDto" },
          "artAbfrage": { "$ref": "#/components/schemas/LookupListDto" },
          "sobonVerfahrensgrundsaetzeJahr": { "$ref": "#/components/schemas/LookupListDto" },
          "standVorhaben": { "$ref": "#/components/schemas/LookupListDto" },
          "statusAbfrage": { "$ref": "#/components/schemas/LookupListDto" },
          "planungsrecht": { "$ref": "#/components/schemas/LookupListDto" },
          "baugebietArt": { "$ref": "#/components/schemas/LookupListDto" },
          "statusInfrastruktureinrichtung": { "$ref": "#/components/schemas/LookupListDto" },
          "einrichtungstraeger": { "$ref": "#/components/schemas/LookupListDto" },
          "infrastruktureinrichtungTyp": { "$ref": "#/components/schemas/LookupListDto" },
          "artGsNachmittagBetreuung": { "$ref": "#/components/schemas/LookupListDto" },
          "sobonOrientierungswertJahr": { "$ref": "#/components/schemas/LookupListDto" }
        }
      },
      "InfrastruktureinrichtungListElementDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "nameEinrichtung": { "type": "string" },
          "infrastruktureinrichtungTyp": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "KINDERKRIPPE",
              "KINDERGARTEN",
              "GS_NACHMITTAG_BETREUUNG",
              "HAUS_FUER_KINDER",
              "GRUNDSCHULE",
              "MITTELSCHULE"
            ]
          }
        }
      },
      "InfrastruktureinrichtungListElementsDto": {
        "type": "object",
        "properties": {
          "listElements": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/InfrastruktureinrichtungListElementDto" }
          }
        }
      },
      "TransitionDto": {
        "type": "object",
        "properties": {
          "url": { "type": "string" },
          "buttonName": { "type": "string" },
          "index": { "type": "integer", "format": "int32" },
          "dialogText": { "type": "string" }
        }
      },
      "DokumenteDto": {
        "type": "object",
        "properties": {
          "dokumente": { "type": "array", "items": { "$ref": "#/components/schemas/DokumentDto" } },
          "pageNumber": { "type": "integer", "format": "int32" },
          "pageSize": { "type": "integer", "format": "int32" },
          "totalElements": { "type": "integer", "format": "int64" },
          "totalPages": { "type": "integer", "format": "int32" },
          "last": { "type": "boolean" }
        }
      },
      "AbfrageListElementDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "nameAbfrage": { "maxLength": 70, "minLength": 0, "type": "string" },
          "stadtbezirke": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/StadtbezirkDto" }
          },
          "statusAbfrage": { "$ref": "#/components/schemas/StatusAbfrage" },
          "fristStellungnahme": { "type": "string", "format": "date" },
          "type": { "type": "string", "enum": ["INFRASTRUKTURABFRAGE", "STANDORTABFRAGE"] },
          "sobonJahr": {
            "type": "string",
            "enum": [
              "JAHR_1995",
              "JAHR_1997",
              "JAHR_2001",
              "JAHR_2006",
              "JAHR_2012",
              "JAHR_2017",
              "JAHR_2017_PLUS",
              "JAHR_2021"
            ]
          },
          "createdDateTime": { "type": "string", "format": "date-time" }
        }
      },
      "AbfrageListElementsDto": {
        "type": "object",
        "properties": {
          "listElements": { "type": "array", "items": { "$ref": "#/components/schemas/AbfrageListElementDto" } }
        }
      }
    }
  }
}

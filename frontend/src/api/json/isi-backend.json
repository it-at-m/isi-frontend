{
  "openapi": "3.0.1",
  "info": {
    "title": "ISI Backend API",
    "description": "ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung",
    "contact": { "name": "ISI Management", "email": "noreply@mail.de" },
    "version": "1.1.0"
  },
  "servers": [{ "url": "http://localhost:39146", "description": "Generated server url" }],
  "tags": [
    { "name": "Koordinaten", "description": "API to interact with the Koordinaten" },
    { "name": "Baurate", "description": "API zum interagieren mit Bauraten" },
    { "name": "Dokumente", "description": "API zum Erhalt aller Dokumente" },
    { "name": "MimeType", "description": "API zur MimeType-Prüfung" },
    { "name": "FoerdermixStamm", "description": "API zum Interagieren mit FoerdermixStamm" },
    {
      "name": "Dateihandling",
      "description": "API um Presigned-Urls bezüglich des Dateihandlings mittels des S3-Storage zu holen."
    },
    { "name": "Suche", "description": "API für die Suche" },
    { "name": "Infrastruktureinrichtung", "description": "API to get Infrastruktureinrichtungen" },
    { "name": "Stammdaten", "description": "API to import Stammdaten" },
    { "name": "Bauvorhaben", "description": "API um Bauvorhaben zu verwalten" },
    { "name": "AbfrageStatus", "description": "API to set the status for a Abfrage" },
    { "name": "Abfragen", "description": "API zum interagieren mit Abfragen" },
    { "name": "Kommentare", "description": "API um Kommentare zu verwalten" },
    { "name": "Lookup", "description": "API zum Erhalt der LookupListen." },
    { "name": "FileInfoStamm", "description": "API zum Erhalten von dateibezogenen Stammdaten." }
  ],
  "paths": {
    "/abfrages": {
      "get": {
        "tags": ["abfrage-entity-controller"],
        "description": "get-abfrage",
        "operationId": "getCollectionResource-abfrage-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/PagedModelEntityModelAbfrage" } },
              "application/x-spring-data-compact+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelAbfrage" }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["abfrage-entity-controller"],
        "description": "create-abfrage",
        "operationId": "postCollectionResource-abfrage-post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AbfrageRequestBody" } } },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfrage" } } }
          }
        }
      }
    },
    "/abfrages/search/findAllByBauvorhabenId": {
      "get": {
        "tags": ["abfrage-search-controller"],
        "operationId": "executeSearch-abfrage-get",
        "parameters": [{ "name": "id", "in": "query", "schema": { "type": "string", "format": "uuid" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfrage" } } }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/abfrages/search/findAllByBauvorhabenIdOrderByCreatedDateTimeDesc": {
      "get": {
        "tags": ["abfrage-search-controller"],
        "operationId": "executeSearch-abfrage-get_1",
        "parameters": [{ "name": "id", "in": "query", "schema": { "type": "string", "format": "uuid" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfrage" } } }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/abfrages/search/findByNameIgnoreCase": {
      "get": {
        "tags": ["abfrage-search-controller"],
        "operationId": "executeSearch-abfrage-get_2",
        "parameters": [{ "name": "nameAbfrage", "in": "query", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfrage" } } }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/abfrages/{id}": {
      "get": {
        "tags": ["abfrage-entity-controller"],
        "description": "get-abfrage",
        "operationId": "getItemResource-abfrage-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfrage" } } }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["abfrage-entity-controller"],
        "description": "update-abfrage",
        "operationId": "putItemResource-abfrage-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AbfrageRequestBody" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfrage" } } }
          },
          "201": {
            "description": "Created",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfrage" } } }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["abfrage-entity-controller"],
        "description": "delete-abfrage",
        "operationId": "deleteItemResource-abfrage-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["abfrage-entity-controller"],
        "description": "patch-abfrage",
        "operationId": "patchItemResource-abfrage-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AbfrageRequestBody" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfrage" } } }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/abfrages/{id}/bauvorhaben": {
      "get": {
        "tags": ["abfrage-property-reference-controller"],
        "description": "get-bauvorhaben-by-abfrage-Id",
        "operationId": "followPropertyReference-abfrage-get_1",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["abfrage-property-reference-controller"],
        "description": "update-bauvorhaben-by-abfrage-Id",
        "operationId": "createPropertyReference-abfrage-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CollectionModelObject" } },
            "application/x-spring-data-compact+json": {
              "schema": { "$ref": "#/components/schemas/CollectionModelObject" }
            },
            "text/uri-list": { "schema": { "type": "string" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["abfrage-property-reference-controller"],
        "description": "delete-bauvorhaben-by-abfrage-Id",
        "operationId": "deletePropertyReference-abfrage-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["abfrage-property-reference-controller"],
        "description": "patch-bauvorhaben-by-abfrage-Id",
        "operationId": "createPropertyReference-abfrage-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CollectionModelObject" } },
            "application/x-spring-data-compact+json": {
              "schema": { "$ref": "#/components/schemas/CollectionModelObject" }
            },
            "text/uri-list": { "schema": { "type": "string" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/abfrages/{id}/bauvorhaben/{propertyId}": {
      "get": {
        "tags": ["abfrage-property-reference-controller"],
        "description": "get-bauvorhaben-by-abfrage-Id",
        "operationId": "followPropertyReference-abfrage-get",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "delete": {
        "tags": ["abfrage-property-reference-controller"],
        "description": "delete-bauvorhaben-by-abfrage-Id",
        "operationId": "deletePropertyReferenceId-abfrage-delete",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      }
    },
    "/abfragevarianteBaugenehmigungsverfahrens": {
      "get": {
        "tags": ["abfragevariante-baugenehmigungsverfahren-entity-controller"],
        "description": "get-abfragevariantebaugenehmigungsverfahren",
        "operationId": "getCollectionResource-abfragevariantebaugenehmigungsverfahren-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelAbfragevarianteBaugenehmigungsverfahren"
                }
              },
              "application/x-spring-data-compact+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelAbfragevarianteBaugenehmigungsverfahren"
                }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["abfragevariante-baugenehmigungsverfahren-entity-controller"],
        "description": "create-abfragevariantebaugenehmigungsverfahren",
        "operationId": "postCollectionResource-abfragevariantebaugenehmigungsverfahren-post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AbfragevarianteBaugenehmigungsverfahrenRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBaugenehmigungsverfahren" }
              }
            }
          }
        }
      }
    },
    "/abfragevarianteBaugenehmigungsverfahrens/search/findAbfrageIdForAbfragevarianteById": {
      "get": {
        "tags": ["abfragevariante-baugenehmigungsverfahren-search-controller"],
        "operationId": "executeSearch-abfragevariantebaugenehmigungsverfahren-get",
        "parameters": [{ "name": "id", "in": "query", "schema": { "type": "string", "format": "uuid" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBaugenehmigungsverfahren" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/abfragevarianteBaugenehmigungsverfahrens/search/findAbfrageIdForAbfragevarianteSachbearbeitungById": {
      "get": {
        "tags": ["abfragevariante-baugenehmigungsverfahren-search-controller"],
        "operationId": "executeSearch-abfragevariantebaugenehmigungsverfahren-get_1",
        "parameters": [{ "name": "id", "in": "query", "schema": { "type": "string", "format": "uuid" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBaugenehmigungsverfahren" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/abfragevarianteBaugenehmigungsverfahrens/{id}": {
      "get": {
        "tags": ["abfragevariante-baugenehmigungsverfahren-entity-controller"],
        "description": "get-abfragevariantebaugenehmigungsverfahren",
        "operationId": "getItemResource-abfragevariantebaugenehmigungsverfahren-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBaugenehmigungsverfahren" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["abfragevariante-baugenehmigungsverfahren-entity-controller"],
        "description": "update-abfragevariantebaugenehmigungsverfahren",
        "operationId": "putItemResource-abfragevariantebaugenehmigungsverfahren-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AbfragevarianteBaugenehmigungsverfahrenRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBaugenehmigungsverfahren" }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBaugenehmigungsverfahren" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["abfragevariante-baugenehmigungsverfahren-entity-controller"],
        "description": "delete-abfragevariantebaugenehmigungsverfahren",
        "operationId": "deleteItemResource-abfragevariantebaugenehmigungsverfahren-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["abfragevariante-baugenehmigungsverfahren-entity-controller"],
        "description": "patch-abfragevariantebaugenehmigungsverfahren",
        "operationId": "patchItemResource-abfragevariantebaugenehmigungsverfahren-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AbfragevarianteBaugenehmigungsverfahrenRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBaugenehmigungsverfahren" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/abfragevarianteBauleitplanverfahrens": {
      "get": {
        "tags": ["abfragevariante-bauleitplanverfahren-entity-controller"],
        "description": "get-abfragevariantebauleitplanverfahren",
        "operationId": "getCollectionResource-abfragevariantebauleitplanverfahren-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelAbfragevarianteBauleitplanverfahren" }
              },
              "application/x-spring-data-compact+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelAbfragevarianteBauleitplanverfahren" }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["abfragevariante-bauleitplanverfahren-entity-controller"],
        "description": "create-abfragevariantebauleitplanverfahren",
        "operationId": "postCollectionResource-abfragevariantebauleitplanverfahren-post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AbfragevarianteBauleitplanverfahrenRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBauleitplanverfahren" }
              }
            }
          }
        }
      }
    },
    "/abfragevarianteBauleitplanverfahrens/search/findAbfrageIdForAbfragevarianteById": {
      "get": {
        "tags": ["abfragevariante-bauleitplanverfahren-search-controller"],
        "operationId": "executeSearch-abfragevariantebauleitplanverfahren-get",
        "parameters": [{ "name": "id", "in": "query", "schema": { "type": "string", "format": "uuid" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBauleitplanverfahren" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/abfragevarianteBauleitplanverfahrens/search/findAbfrageIdForAbfragevarianteSachbearbeitungById": {
      "get": {
        "tags": ["abfragevariante-bauleitplanverfahren-search-controller"],
        "operationId": "executeSearch-abfragevariantebauleitplanverfahren-get_1",
        "parameters": [{ "name": "id", "in": "query", "schema": { "type": "string", "format": "uuid" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBauleitplanverfahren" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/abfragevarianteBauleitplanverfahrens/{id}": {
      "get": {
        "tags": ["abfragevariante-bauleitplanverfahren-entity-controller"],
        "description": "get-abfragevariantebauleitplanverfahren",
        "operationId": "getItemResource-abfragevariantebauleitplanverfahren-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBauleitplanverfahren" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["abfragevariante-bauleitplanverfahren-entity-controller"],
        "description": "update-abfragevariantebauleitplanverfahren",
        "operationId": "putItemResource-abfragevariantebauleitplanverfahren-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AbfragevarianteBauleitplanverfahrenRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBauleitplanverfahren" }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBauleitplanverfahren" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["abfragevariante-bauleitplanverfahren-entity-controller"],
        "description": "delete-abfragevariantebauleitplanverfahren",
        "operationId": "deleteItemResource-abfragevariantebauleitplanverfahren-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["abfragevariante-bauleitplanverfahren-entity-controller"],
        "description": "patch-abfragevariantebauleitplanverfahren",
        "operationId": "patchItemResource-abfragevariantebauleitplanverfahren-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AbfragevarianteBauleitplanverfahrenRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBauleitplanverfahren" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/abfragevarianteWeiteresVerfahrens": {
      "get": {
        "tags": ["abfragevariante-weiteres-verfahren-entity-controller"],
        "description": "get-abfragevarianteweiteresverfahren",
        "operationId": "getCollectionResource-abfragevarianteweiteresverfahren-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelAbfragevarianteWeiteresVerfahren" }
              },
              "application/x-spring-data-compact+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelAbfragevarianteWeiteresVerfahren" }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["abfragevariante-weiteres-verfahren-entity-controller"],
        "description": "create-abfragevarianteweiteresverfahren",
        "operationId": "postCollectionResource-abfragevarianteweiteresverfahren-post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AbfragevarianteWeiteresVerfahrenRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteWeiteresVerfahren" }
              }
            }
          }
        }
      }
    },
    "/abfragevarianteWeiteresVerfahrens/search/findAbfrageIdForAbfragevarianteById": {
      "get": {
        "tags": ["abfragevariante-weiteres-verfahren-search-controller"],
        "operationId": "executeSearch-abfragevarianteweiteresverfahren-get",
        "parameters": [{ "name": "id", "in": "query", "schema": { "type": "string", "format": "uuid" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteWeiteresVerfahren" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/abfragevarianteWeiteresVerfahrens/search/findAbfrageIdForAbfragevarianteSachbearbeitungById": {
      "get": {
        "tags": ["abfragevariante-weiteres-verfahren-search-controller"],
        "operationId": "executeSearch-abfragevarianteweiteresverfahren-get_1",
        "parameters": [{ "name": "id", "in": "query", "schema": { "type": "string", "format": "uuid" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteWeiteresVerfahren" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/abfragevarianteWeiteresVerfahrens/{id}": {
      "get": {
        "tags": ["abfragevariante-weiteres-verfahren-entity-controller"],
        "description": "get-abfragevarianteweiteresverfahren",
        "operationId": "getItemResource-abfragevarianteweiteresverfahren-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteWeiteresVerfahren" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["abfragevariante-weiteres-verfahren-entity-controller"],
        "description": "update-abfragevarianteweiteresverfahren",
        "operationId": "putItemResource-abfragevarianteweiteresverfahren-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AbfragevarianteWeiteresVerfahrenRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteWeiteresVerfahren" }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteWeiteresVerfahren" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["abfragevariante-weiteres-verfahren-entity-controller"],
        "description": "delete-abfragevarianteweiteresverfahren",
        "operationId": "deleteItemResource-abfragevarianteweiteresverfahren-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["abfragevariante-weiteres-verfahren-entity-controller"],
        "description": "patch-abfragevarianteweiteresverfahren",
        "operationId": "patchItemResource-abfragevarianteweiteresverfahren-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AbfragevarianteWeiteresVerfahrenRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelAbfragevarianteWeiteresVerfahren" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/abfragevariantes": {
      "get": {
        "tags": ["abfragevariante-entity-controller"],
        "description": "get-abfragevariante",
        "operationId": "getCollectionResource-abfragevariante-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelAbfragevariante" }
              },
              "application/x-spring-data-compact+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelAbfragevariante" }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["abfragevariante-entity-controller"],
        "description": "create-abfragevariante",
        "operationId": "postCollectionResource-abfragevariante-post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/AbfragevarianteRequestBody" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfragevariante" } }
            }
          }
        }
      }
    },
    "/abfragevariantes/{id}": {
      "get": {
        "tags": ["abfragevariante-entity-controller"],
        "description": "get-abfragevariante",
        "operationId": "getItemResource-abfragevariante-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfragevariante" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["abfragevariante-entity-controller"],
        "description": "update-abfragevariante",
        "operationId": "putItemResource-abfragevariante-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/AbfragevarianteRequestBody" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfragevariante" } }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfragevariante" } }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["abfragevariante-entity-controller"],
        "description": "delete-abfragevariante",
        "operationId": "deleteItemResource-abfragevariante-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["abfragevariante-entity-controller"],
        "description": "patch-abfragevariante",
        "operationId": "patchItemResource-abfragevariante-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/AbfragevarianteRequestBody" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfragevariante" } }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/bauvorhabens": {
      "get": {
        "tags": ["bauvorhaben-entity-controller"],
        "description": "get-bauvorhaben",
        "operationId": "getCollectionResource-bauvorhaben-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/PagedModelEntityModelBauvorhaben" } },
              "application/x-spring-data-compact+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelBauvorhaben" }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["bauvorhaben-entity-controller"],
        "description": "create-bauvorhaben",
        "operationId": "postCollectionResource-bauvorhaben-post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BauvorhabenRequestBody" } } },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          }
        }
      }
    },
    "/bauvorhabens/search/findAllByOrderByGrundstuecksgroesseDesc": {
      "get": {
        "tags": ["bauvorhaben-search-controller"],
        "operationId": "executeSearch-bauvorhaben-get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/bauvorhabens/search/findByNameVorhabenIgnoreCase": {
      "get": {
        "tags": ["bauvorhaben-search-controller"],
        "operationId": "executeSearch-bauvorhaben-get_1",
        "parameters": [{ "name": "nameVorhaben", "in": "query", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/bauvorhabens/{id}": {
      "get": {
        "tags": ["bauvorhaben-entity-controller"],
        "description": "get-bauvorhaben",
        "operationId": "getItemResource-bauvorhaben-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["bauvorhaben-entity-controller"],
        "description": "update-bauvorhaben",
        "operationId": "putItemResource-bauvorhaben-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BauvorhabenRequestBody" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["bauvorhaben-entity-controller"],
        "description": "delete-bauvorhaben",
        "operationId": "deleteItemResource-bauvorhaben-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["bauvorhaben-entity-controller"],
        "description": "patch-bauvorhaben",
        "operationId": "patchItemResource-bauvorhaben-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BauvorhabenRequestBody" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/bauvorhabens/{id}/dokumente": {
      "get": {
        "tags": ["bauvorhaben-property-reference-controller"],
        "description": "get-dokument-by-bauvorhaben-Id",
        "operationId": "followPropertyReference-bauvorhaben-get_1",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/CollectionModelDokument" } },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["bauvorhaben-property-reference-controller"],
        "description": "update-dokument-by-bauvorhaben-Id",
        "operationId": "createPropertyReference-bauvorhaben-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CollectionModelObject" } },
            "application/x-spring-data-compact+json": {
              "schema": { "$ref": "#/components/schemas/CollectionModelObject" }
            },
            "text/uri-list": { "schema": { "type": "string" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/CollectionModelDokument" } }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/CollectionModelDokument" } }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["bauvorhaben-property-reference-controller"],
        "description": "delete-dokument-by-bauvorhaben-Id",
        "operationId": "deletePropertyReference-bauvorhaben-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["bauvorhaben-property-reference-controller"],
        "description": "patch-dokument-by-bauvorhaben-Id",
        "operationId": "createPropertyReference-bauvorhaben-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CollectionModelObject" } },
            "application/x-spring-data-compact+json": {
              "schema": { "$ref": "#/components/schemas/CollectionModelObject" }
            },
            "text/uri-list": { "schema": { "type": "string" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/CollectionModelDokument" } }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/bauvorhabens/{id}/dokumente/{propertyId}": {
      "get": {
        "tags": ["bauvorhaben-property-reference-controller"],
        "description": "get-dokument-by-bauvorhaben-Id",
        "operationId": "followPropertyReference-bauvorhaben-get",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/CollectionModelDokument" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "delete": {
        "tags": ["bauvorhaben-property-reference-controller"],
        "description": "delete-dokument-by-bauvorhaben-Id",
        "operationId": "deletePropertyReferenceId-bauvorhaben-delete",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      }
    },
    "/bauvorhabens/{id}/relevanteAbfragevariante": {
      "get": {
        "tags": ["bauvorhaben-property-reference-controller"],
        "description": "get-abfragevariante-by-bauvorhaben-Id",
        "operationId": "followPropertyReference-bauvorhaben-get_2_1",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfragevariante" } },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["bauvorhaben-property-reference-controller"],
        "description": "update-abfragevariante-by-bauvorhaben-Id",
        "operationId": "createPropertyReference-bauvorhaben-put_1",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CollectionModelObject" } },
            "application/x-spring-data-compact+json": {
              "schema": { "$ref": "#/components/schemas/CollectionModelObject" }
            },
            "text/uri-list": { "schema": { "type": "string" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfragevariante" } }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfragevariante" } }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["bauvorhaben-property-reference-controller"],
        "description": "delete-abfragevariante-by-bauvorhaben-Id",
        "operationId": "deletePropertyReference-bauvorhaben-delete_1",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["bauvorhaben-property-reference-controller"],
        "description": "patch-abfragevariante-by-bauvorhaben-Id",
        "operationId": "createPropertyReference-bauvorhaben-patch_1",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CollectionModelObject" } },
            "application/x-spring-data-compact+json": {
              "schema": { "$ref": "#/components/schemas/CollectionModelObject" }
            },
            "text/uri-list": { "schema": { "type": "string" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfragevariante" } }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/bauvorhabens/{id}/relevanteAbfragevariante/{propertyId}": {
      "get": {
        "tags": ["bauvorhaben-property-reference-controller"],
        "description": "get-abfragevariante-by-bauvorhaben-Id",
        "operationId": "followPropertyReference-bauvorhaben-get_2",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelAbfragevariante" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "delete": {
        "tags": ["bauvorhaben-property-reference-controller"],
        "description": "delete-abfragevariante-by-bauvorhaben-Id",
        "operationId": "deletePropertyReferenceId-bauvorhaben-delete_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      }
    },
    "/dokuments": {
      "get": {
        "tags": ["dokument-entity-controller"],
        "description": "get-dokument",
        "operationId": "getCollectionResource-dokument-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/PagedModelEntityModelDokument" } },
              "application/x-spring-data-compact+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelDokument" }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["dokument-entity-controller"],
        "description": "create-dokument",
        "operationId": "postCollectionResource-dokument-post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DokumentRequestBody" } } },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelDokument" } } }
          }
        }
      }
    },
    "/dokuments/{id}": {
      "get": {
        "tags": ["dokument-entity-controller"],
        "description": "get-dokument",
        "operationId": "getItemResource-dokument-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelDokument" } } }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["dokument-entity-controller"],
        "description": "update-dokument",
        "operationId": "putItemResource-dokument-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DokumentRequestBody" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelDokument" } } }
          },
          "201": {
            "description": "Created",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelDokument" } } }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["dokument-entity-controller"],
        "description": "delete-dokument",
        "operationId": "deleteItemResource-dokument-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["dokument-entity-controller"],
        "description": "patch-dokument",
        "operationId": "patchItemResource-dokument-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DokumentRequestBody" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelDokument" } } }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/foerdermixStamms": {
      "get": {
        "tags": ["foerdermix-stamm-entity-controller"],
        "description": "get-foerdermixstamm",
        "operationId": "getCollectionResource-foerdermixstamm-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelFoerdermixStamm" }
              },
              "application/x-spring-data-compact+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelFoerdermixStamm" }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["foerdermix-stamm-entity-controller"],
        "description": "create-foerdermixstamm",
        "operationId": "postCollectionResource-foerdermixstamm-post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/FoerdermixStammRequestBody" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelFoerdermixStamm" } }
            }
          }
        }
      }
    },
    "/foerdermixStamms/search/findAllByOrderByFoerdermixBezeichnungAsc": {
      "get": {
        "tags": ["foerdermix-stamm-search-controller"],
        "operationId": "executeSearch-foerdermixstamm-get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelFoerdermixStamm" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/foerdermixStamms/search/findByFoerdermixBezeichnungJahrIgnoreCaseAndFoerdermixBezeichnungIgnoreCase": {
      "get": {
        "tags": ["foerdermix-stamm-search-controller"],
        "operationId": "executeSearch-foerdermixstamm-get_1",
        "parameters": [
          { "name": "bezeichnungJahr", "in": "query", "schema": { "type": "string" } },
          { "name": "bezeichnung", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelFoerdermixStamm" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/foerdermixStamms/{id}": {
      "get": {
        "tags": ["foerdermix-stamm-entity-controller"],
        "description": "get-foerdermixstamm",
        "operationId": "getItemResource-foerdermixstamm-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelFoerdermixStamm" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["foerdermix-stamm-entity-controller"],
        "description": "update-foerdermixstamm",
        "operationId": "putItemResource-foerdermixstamm-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/FoerdermixStammRequestBody" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelFoerdermixStamm" } }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelFoerdermixStamm" } }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["foerdermix-stamm-entity-controller"],
        "description": "delete-foerdermixstamm",
        "operationId": "deleteItemResource-foerdermixstamm-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["foerdermix-stamm-entity-controller"],
        "description": "patch-foerdermixstamm",
        "operationId": "patchItemResource-foerdermixstamm-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/FoerdermixStammRequestBody" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelFoerdermixStamm" } }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/globalCounters": {
      "get": {
        "tags": ["global-counter-entity-controller"],
        "description": "get-globalcounter",
        "operationId": "getCollectionResource-globalcounter-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelGlobalCounter" }
              },
              "application/x-spring-data-compact+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelGlobalCounter" }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["global-counter-entity-controller"],
        "description": "create-globalcounter",
        "operationId": "postCollectionResource-globalcounter-post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GlobalCounterRequestBody" } } },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelGlobalCounter" } }
            }
          }
        }
      }
    },
    "/globalCounters/search/findByCounterType": {
      "get": {
        "tags": ["global-counter-search-controller"],
        "operationId": "executeSearch-globalcounter-get",
        "parameters": [
          { "name": "counterType", "in": "query", "schema": { "type": "string", "enum": ["NUMMER_BAUVORHABEN"] } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelGlobalCounter" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/globalCounters/{id}": {
      "get": {
        "tags": ["global-counter-entity-controller"],
        "description": "get-globalcounter",
        "operationId": "getItemResource-globalcounter-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelGlobalCounter" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["global-counter-entity-controller"],
        "description": "update-globalcounter",
        "operationId": "putItemResource-globalcounter-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GlobalCounterRequestBody" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelGlobalCounter" } }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelGlobalCounter" } }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["global-counter-entity-controller"],
        "description": "delete-globalcounter",
        "operationId": "deleteItemResource-globalcounter-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["global-counter-entity-controller"],
        "description": "patch-globalcounter",
        "operationId": "patchItemResource-globalcounter-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/GlobalCounterRequestBody" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelGlobalCounter" } }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/idealtypischeBaurates": {
      "get": {
        "tags": ["idealtypische-baurate-entity-controller"],
        "description": "get-idealtypischebaurate",
        "operationId": "getCollectionResource-idealtypischebaurate-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelIdealtypischeBaurate" }
              },
              "application/x-spring-data-compact+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelIdealtypischeBaurate" }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["idealtypische-baurate-entity-controller"],
        "description": "create-idealtypischebaurate",
        "operationId": "postCollectionResource-idealtypischebaurate-post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/IdealtypischeBaurateRequestBody" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelIdealtypischeBaurate" } }
            }
          }
        }
      }
    },
    "/idealtypischeBaurates/search/findByTypAndVonLessThanEqualAndBisExklusivGreaterThan": {
      "get": {
        "tags": ["idealtypische-baurate-search-controller"],
        "operationId": "executeSearch-idealtypischebaurate-get",
        "parameters": [
          {
            "name": "typ",
            "in": "query",
            "schema": { "type": "string", "enum": ["ANZAHL_WOHNEINHEITEN_GESAMT", "GESCHOSSFLAECHE_WOHNEN_GESAMT"] }
          },
          { "name": "von", "in": "query", "schema": { "type": "number" } },
          { "name": "bisExklusiv", "in": "query", "schema": { "type": "number" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelIdealtypischeBaurate" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/idealtypischeBaurates/{id}": {
      "get": {
        "tags": ["idealtypische-baurate-entity-controller"],
        "description": "get-idealtypischebaurate",
        "operationId": "getItemResource-idealtypischebaurate-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelIdealtypischeBaurate" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["idealtypische-baurate-entity-controller"],
        "description": "update-idealtypischebaurate",
        "operationId": "putItemResource-idealtypischebaurate-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/IdealtypischeBaurateRequestBody" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelIdealtypischeBaurate" } }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelIdealtypischeBaurate" } }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["idealtypische-baurate-entity-controller"],
        "description": "delete-idealtypischebaurate",
        "operationId": "deleteItemResource-idealtypischebaurate-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["idealtypische-baurate-entity-controller"],
        "description": "patch-idealtypischebaurate",
        "operationId": "patchItemResource-idealtypischebaurate-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/IdealtypischeBaurateRequestBody" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelIdealtypischeBaurate" } }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/infrastruktureinrichtungs": {
      "get": {
        "tags": ["infrastruktureinrichtung-entity-controller"],
        "description": "get-infrastruktureinrichtung",
        "operationId": "getCollectionResource-infrastruktureinrichtung-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelInfrastruktureinrichtung" }
              },
              "application/x-spring-data-compact+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelInfrastruktureinrichtung" }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["infrastruktureinrichtung-entity-controller"],
        "description": "create-infrastruktureinrichtung",
        "operationId": "postCollectionResource-infrastruktureinrichtung-post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/InfrastruktureinrichtungRequestBody" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelInfrastruktureinrichtung" }
              }
            }
          }
        }
      }
    },
    "/infrastruktureinrichtungs/search/findAllByBauvorhabenId": {
      "get": {
        "tags": ["infrastruktureinrichtung-search-controller"],
        "operationId": "executeSearch-infrastruktureinrichtung-get",
        "parameters": [{ "name": "id", "in": "query", "schema": { "type": "string", "format": "uuid" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelInfrastruktureinrichtung" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/infrastruktureinrichtungs/{id}": {
      "get": {
        "tags": ["infrastruktureinrichtung-entity-controller"],
        "description": "get-infrastruktureinrichtung",
        "operationId": "getItemResource-infrastruktureinrichtung-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelInfrastruktureinrichtung" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["infrastruktureinrichtung-entity-controller"],
        "description": "update-infrastruktureinrichtung",
        "operationId": "putItemResource-infrastruktureinrichtung-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/InfrastruktureinrichtungRequestBody" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelInfrastruktureinrichtung" }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelInfrastruktureinrichtung" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["infrastruktureinrichtung-entity-controller"],
        "description": "delete-infrastruktureinrichtung",
        "operationId": "deleteItemResource-infrastruktureinrichtung-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["infrastruktureinrichtung-entity-controller"],
        "description": "patch-infrastruktureinrichtung",
        "operationId": "patchItemResource-infrastruktureinrichtung-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/InfrastruktureinrichtungRequestBody" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelInfrastruktureinrichtung" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/infrastruktureinrichtungs/{id}/bauvorhaben": {
      "get": {
        "tags": ["infrastruktureinrichtung-property-reference-controller"],
        "description": "get-bauvorhaben-by-infrastruktureinrichtung-Id",
        "operationId": "followPropertyReference-infrastruktureinrichtung-get_1",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["infrastruktureinrichtung-property-reference-controller"],
        "description": "update-bauvorhaben-by-infrastruktureinrichtung-Id",
        "operationId": "createPropertyReference-infrastruktureinrichtung-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CollectionModelObject" } },
            "application/x-spring-data-compact+json": {
              "schema": { "$ref": "#/components/schemas/CollectionModelObject" }
            },
            "text/uri-list": { "schema": { "type": "string" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["infrastruktureinrichtung-property-reference-controller"],
        "description": "delete-bauvorhaben-by-infrastruktureinrichtung-Id",
        "operationId": "deletePropertyReference-infrastruktureinrichtung-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["infrastruktureinrichtung-property-reference-controller"],
        "description": "patch-bauvorhaben-by-infrastruktureinrichtung-Id",
        "operationId": "createPropertyReference-infrastruktureinrichtung-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CollectionModelObject" } },
            "application/x-spring-data-compact+json": {
              "schema": { "$ref": "#/components/schemas/CollectionModelObject" }
            },
            "text/uri-list": { "schema": { "type": "string" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/infrastruktureinrichtungs/{id}/bauvorhaben/{propertyId}": {
      "get": {
        "tags": ["infrastruktureinrichtung-property-reference-controller"],
        "description": "get-bauvorhaben-by-infrastruktureinrichtung-Id",
        "operationId": "followPropertyReference-infrastruktureinrichtung-get",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "delete": {
        "tags": ["infrastruktureinrichtung-property-reference-controller"],
        "description": "delete-bauvorhaben-by-infrastruktureinrichtung-Id",
        "operationId": "deletePropertyReferenceId-infrastruktureinrichtung-delete",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      }
    },
    "/kommentars": {
      "get": {
        "tags": ["kommentar-entity-controller"],
        "description": "get-kommentar",
        "operationId": "getCollectionResource-kommentar-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/PagedModelEntityModelKommentar" } },
              "application/x-spring-data-compact+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelKommentar" }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["kommentar-entity-controller"],
        "description": "create-kommentar",
        "operationId": "postCollectionResource-kommentar-post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/KommentarRequestBody" } } },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelKommentar" } } }
          }
        }
      }
    },
    "/kommentars/search/deleteAllByBauvorhabenId": {
      "get": {
        "tags": ["kommentar-search-controller"],
        "operationId": "executeSearch-kommentar-get",
        "parameters": [{ "name": "bauvorhaben", "in": "query", "schema": { "type": "string", "format": "uuid" } }],
        "responses": { "200": { "description": "OK" }, "404": { "description": "Not Found" } }
      }
    },
    "/kommentars/search/deleteAllByInfrastruktureinrichtungId": {
      "get": {
        "tags": ["kommentar-search-controller"],
        "operationId": "executeSearch-kommentar-get_1",
        "parameters": [
          { "name": "infrastruktureinrichtung", "in": "query", "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": { "200": { "description": "OK" }, "404": { "description": "Not Found" } }
      }
    },
    "/kommentars/search/findAllByBauvorhabenIdOrderByCreatedDateTimeDesc": {
      "get": {
        "tags": ["kommentar-search-controller"],
        "operationId": "executeSearch-kommentar-get_2",
        "parameters": [{ "name": "bauvorhaben", "in": "query", "schema": { "type": "string", "format": "uuid" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelKommentar" } } }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/kommentars/search/findAllByInfrastruktureinrichtungIdOrderByCreatedDateTimeDesc": {
      "get": {
        "tags": ["kommentar-search-controller"],
        "operationId": "executeSearch-kommentar-get_3",
        "parameters": [
          { "name": "infrastruktureinrichtung", "in": "query", "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelKommentar" } } }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/kommentars/{id}": {
      "get": {
        "tags": ["kommentar-entity-controller"],
        "description": "get-kommentar",
        "operationId": "getItemResource-kommentar-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelKommentar" } } }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["kommentar-entity-controller"],
        "description": "update-kommentar",
        "operationId": "putItemResource-kommentar-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/KommentarRequestBody" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelKommentar" } } }
          },
          "201": {
            "description": "Created",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelKommentar" } } }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["kommentar-entity-controller"],
        "description": "delete-kommentar",
        "operationId": "deleteItemResource-kommentar-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["kommentar-entity-controller"],
        "description": "patch-kommentar",
        "operationId": "patchItemResource-kommentar-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/KommentarRequestBody" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelKommentar" } } }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/kommentars/{id}/bauvorhaben": {
      "get": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "get-bauvorhaben-by-kommentar-Id",
        "operationId": "followPropertyReference-kommentar-get_1",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "update-bauvorhaben-by-kommentar-Id",
        "operationId": "createPropertyReference-kommentar-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CollectionModelObject" } },
            "application/x-spring-data-compact+json": {
              "schema": { "$ref": "#/components/schemas/CollectionModelObject" }
            },
            "text/uri-list": { "schema": { "type": "string" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "delete-bauvorhaben-by-kommentar-Id",
        "operationId": "deletePropertyReference-kommentar-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "patch-bauvorhaben-by-kommentar-Id",
        "operationId": "createPropertyReference-kommentar-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CollectionModelObject" } },
            "application/x-spring-data-compact+json": {
              "schema": { "$ref": "#/components/schemas/CollectionModelObject" }
            },
            "text/uri-list": { "schema": { "type": "string" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/kommentars/{id}/bauvorhaben/{propertyId}": {
      "get": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "get-bauvorhaben-by-kommentar-Id",
        "operationId": "followPropertyReference-kommentar-get",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "delete": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "delete-bauvorhaben-by-kommentar-Id",
        "operationId": "deletePropertyReferenceId-kommentar-delete",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      }
    },
    "/kommentars/{id}/dokumente": {
      "get": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "get-dokument-by-kommentar-Id",
        "operationId": "followPropertyReference-kommentar-get_2_1",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/CollectionModelDokument" } },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "update-dokument-by-kommentar-Id",
        "operationId": "createPropertyReference-kommentar-put_1",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CollectionModelObject" } },
            "application/x-spring-data-compact+json": {
              "schema": { "$ref": "#/components/schemas/CollectionModelObject" }
            },
            "text/uri-list": { "schema": { "type": "string" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/CollectionModelDokument" } }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/CollectionModelDokument" } }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "delete-dokument-by-kommentar-Id",
        "operationId": "deletePropertyReference-kommentar-delete_1",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "patch-dokument-by-kommentar-Id",
        "operationId": "createPropertyReference-kommentar-patch_1",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CollectionModelObject" } },
            "application/x-spring-data-compact+json": {
              "schema": { "$ref": "#/components/schemas/CollectionModelObject" }
            },
            "text/uri-list": { "schema": { "type": "string" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/CollectionModelDokument" } }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/kommentars/{id}/dokumente/{propertyId}": {
      "get": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "get-dokument-by-kommentar-Id",
        "operationId": "followPropertyReference-kommentar-get_2",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/CollectionModelDokument" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "delete": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "delete-dokument-by-kommentar-Id",
        "operationId": "deletePropertyReferenceId-kommentar-delete_1",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      }
    },
    "/kommentars/{id}/infrastruktureinrichtung": {
      "get": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "get-infrastruktureinrichtung-by-kommentar-Id",
        "operationId": "followPropertyReference-kommentar-get_3_1",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelInfrastruktureinrichtung" }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "update-infrastruktureinrichtung-by-kommentar-Id",
        "operationId": "createPropertyReference-kommentar-put_2",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CollectionModelObject" } },
            "application/x-spring-data-compact+json": {
              "schema": { "$ref": "#/components/schemas/CollectionModelObject" }
            },
            "text/uri-list": { "schema": { "type": "string" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelInfrastruktureinrichtung" }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelInfrastruktureinrichtung" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "delete-infrastruktureinrichtung-by-kommentar-Id",
        "operationId": "deletePropertyReference-kommentar-delete_2",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "patch-infrastruktureinrichtung-by-kommentar-Id",
        "operationId": "createPropertyReference-kommentar-patch_2",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CollectionModelObject" } },
            "application/x-spring-data-compact+json": {
              "schema": { "$ref": "#/components/schemas/CollectionModelObject" }
            },
            "text/uri-list": { "schema": { "type": "string" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelInfrastruktureinrichtung" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/kommentars/{id}/infrastruktureinrichtung/{propertyId}": {
      "get": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "get-infrastruktureinrichtung-by-kommentar-Id",
        "operationId": "followPropertyReference-kommentar-get_3",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelInfrastruktureinrichtung" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "delete": {
        "tags": ["kommentar-property-reference-controller"],
        "description": "delete-infrastruktureinrichtung-by-kommentar-Id",
        "operationId": "deletePropertyReferenceId-kommentar-delete_2",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      }
    },
    "/profile": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "listAllFormsOfMetadata_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/RepresentationModelObject" } }
            }
          }
        }
      }
    },
    "/profile/abfrages": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/profile/abfragevarianteBaugenehmigungsverfahrens": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_2",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/profile/abfragevarianteBauleitplanverfahrens": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_3",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/profile/abfragevarianteWeiteresVerfahrens": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_4",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/profile/abfragevariantes": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_5",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/profile/bauvorhabens": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_6",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/profile/dokuments": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_7",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/profile/foerdermixStamms": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_8",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/profile/globalCounters": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_9",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/profile/idealtypischeBaurates": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_10",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/profile/infrastruktureinrichtungs": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_11",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/profile/kommentars": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_12",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/profile/sobonOrientierungswertSozialeInfrastrukturs": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_13",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/profile/staedtebaulicheOrientierungswerts": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_14",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/profile/umlegungFoerderartens": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_15",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/profile/versorgungsquoteGruppenstaerkes": {
      "get": {
        "tags": ["profile-controller"],
        "operationId": "descriptor_1_1_16",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string" } },
              "application/alps+json": { "schema": { "type": "string" } },
              "application/schema+json": { "schema": { "$ref": "#/components/schemas/JsonSchema" } }
            }
          }
        }
      }
    },
    "/sobonOrientierungswertSozialeInfrastrukturs": {
      "get": {
        "tags": ["sobon-orientierungswert-soziale-infrastruktur-entity-controller"],
        "description": "get-sobonorientierungswertsozialeinfrastruktur",
        "operationId": "getCollectionResource-sobonorientierungswertsozialeinfrastruktur-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelSobonOrientierungswertSozialeInfrastruktur"
                }
              },
              "application/x-spring-data-compact+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelSobonOrientierungswertSozialeInfrastruktur"
                }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["sobon-orientierungswert-soziale-infrastruktur-entity-controller"],
        "description": "create-sobonorientierungswertsozialeinfrastruktur",
        "operationId": "postCollectionResource-sobonorientierungswertsozialeinfrastruktur-post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SobonOrientierungswertSozialeInfrastrukturRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelSobonOrientierungswertSozialeInfrastruktur" }
              }
            }
          }
        }
      }
    },
    "/sobonOrientierungswertSozialeInfrastrukturs/search/findFirstByEinrichtungstypAndFoerderartBezeichnungAndGueltigAbIsLessThanEqualOrderByGueltigAbDesc": {
      "get": {
        "tags": ["sobon-orientierungswert-soziale-infrastruktur-search-controller"],
        "operationId": "executeSearch-sobonorientierungswertsozialeinfrastruktur-get",
        "parameters": [
          {
            "name": "einrichtungstyp",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "UNSPECIFIED",
                "KINDERKRIPPE",
                "KINDERGARTEN",
                "GS_NACHMITTAG_BETREUUNG",
                "HAUS_FUER_KINDER",
                "GRUNDSCHULE",
                "MITTELSCHULE"
              ]
            }
          },
          { "name": "foerderartBezeichnung", "in": "query", "schema": { "type": "string" } },
          { "name": "gueltigAb", "in": "query", "schema": { "type": "string", "format": "date" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelSobonOrientierungswertSozialeInfrastruktur" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sobonOrientierungswertSozialeInfrastrukturs/{id}": {
      "get": {
        "tags": ["sobon-orientierungswert-soziale-infrastruktur-entity-controller"],
        "description": "get-sobonorientierungswertsozialeinfrastruktur",
        "operationId": "getItemResource-sobonorientierungswertsozialeinfrastruktur-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelSobonOrientierungswertSozialeInfrastruktur" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["sobon-orientierungswert-soziale-infrastruktur-entity-controller"],
        "description": "update-sobonorientierungswertsozialeinfrastruktur",
        "operationId": "putItemResource-sobonorientierungswertsozialeinfrastruktur-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SobonOrientierungswertSozialeInfrastrukturRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelSobonOrientierungswertSozialeInfrastruktur" }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelSobonOrientierungswertSozialeInfrastruktur" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["sobon-orientierungswert-soziale-infrastruktur-entity-controller"],
        "description": "delete-sobonorientierungswertsozialeinfrastruktur",
        "operationId": "deleteItemResource-sobonorientierungswertsozialeinfrastruktur-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["sobon-orientierungswert-soziale-infrastruktur-entity-controller"],
        "description": "patch-sobonorientierungswertsozialeinfrastruktur",
        "operationId": "patchItemResource-sobonorientierungswertsozialeinfrastruktur-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SobonOrientierungswertSozialeInfrastrukturRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelSobonOrientierungswertSozialeInfrastruktur" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/staedtebaulicheOrientierungswerts": {
      "get": {
        "tags": ["staedtebauliche-orientierungswert-entity-controller"],
        "description": "get-staedtebaulicheorientierungswert",
        "operationId": "getCollectionResource-staedtebaulicheorientierungswert-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelStaedtebaulicheOrientierungswert" }
              },
              "application/x-spring-data-compact+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelStaedtebaulicheOrientierungswert" }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["staedtebauliche-orientierungswert-entity-controller"],
        "description": "create-staedtebaulicheorientierungswert",
        "operationId": "postCollectionResource-staedtebaulicheorientierungswert-post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StaedtebaulicheOrientierungswertRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelStaedtebaulicheOrientierungswert" }
              }
            }
          }
        }
      }
    },
    "/staedtebaulicheOrientierungswerts/search/findFirstByFoerderartBezeichnungAndGueltigAbIsLessThanEqualOrderByGueltigAbDesc": {
      "get": {
        "tags": ["staedtebauliche-orientierungswert-search-controller"],
        "operationId": "executeSearch-staedtebaulicheorientierungswert-get",
        "parameters": [
          { "name": "foerderartBezeichnung", "in": "query", "schema": { "type": "string" } },
          { "name": "gueltigAb", "in": "query", "schema": { "type": "string", "format": "date" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelStaedtebaulicheOrientierungswert" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/staedtebaulicheOrientierungswerts/{id}": {
      "get": {
        "tags": ["staedtebauliche-orientierungswert-entity-controller"],
        "description": "get-staedtebaulicheorientierungswert",
        "operationId": "getItemResource-staedtebaulicheorientierungswert-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelStaedtebaulicheOrientierungswert" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["staedtebauliche-orientierungswert-entity-controller"],
        "description": "update-staedtebaulicheorientierungswert",
        "operationId": "putItemResource-staedtebaulicheorientierungswert-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StaedtebaulicheOrientierungswertRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelStaedtebaulicheOrientierungswert" }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelStaedtebaulicheOrientierungswert" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["staedtebauliche-orientierungswert-entity-controller"],
        "description": "delete-staedtebaulicheorientierungswert",
        "operationId": "deleteItemResource-staedtebaulicheorientierungswert-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["staedtebauliche-orientierungswert-entity-controller"],
        "description": "patch-staedtebaulicheorientierungswert",
        "operationId": "patchItemResource-staedtebaulicheorientierungswert-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StaedtebaulicheOrientierungswertRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelStaedtebaulicheOrientierungswert" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/umlegungFoerderartens": {
      "get": {
        "tags": ["umlegung-foerderarten-entity-controller"],
        "description": "get-umlegungfoerderarten",
        "operationId": "getCollectionResource-umlegungfoerderarten-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelUmlegungFoerderarten" }
              },
              "application/x-spring-data-compact+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelUmlegungFoerderarten" }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["umlegung-foerderarten-entity-controller"],
        "description": "create-umlegungfoerderarten",
        "operationId": "postCollectionResource-umlegungfoerderarten-post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UmlegungFoerderartenRequestBody" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelUmlegungFoerderarten" } }
            }
          }
        }
      }
    },
    "/umlegungFoerderartens/search/findFirstByBezeichnungAndGueltigAbIsLessThanEqualOrderByGueltigAbDesc": {
      "get": {
        "tags": ["umlegung-foerderarten-search-controller"],
        "operationId": "executeSearch-umlegungfoerderarten-get",
        "parameters": [
          { "name": "bezeichnung", "in": "query", "schema": { "type": "string" } },
          { "name": "datum", "in": "query", "schema": { "type": "string", "format": "date" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelUmlegungFoerderarten" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/umlegungFoerderartens/{id}": {
      "get": {
        "tags": ["umlegung-foerderarten-entity-controller"],
        "description": "get-umlegungfoerderarten",
        "operationId": "getItemResource-umlegungfoerderarten-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelUmlegungFoerderarten" } }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["umlegung-foerderarten-entity-controller"],
        "description": "update-umlegungfoerderarten",
        "operationId": "putItemResource-umlegungfoerderarten-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UmlegungFoerderartenRequestBody" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelUmlegungFoerderarten" } }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelUmlegungFoerderarten" } }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["umlegung-foerderarten-entity-controller"],
        "description": "delete-umlegungfoerderarten",
        "operationId": "deleteItemResource-umlegungfoerderarten-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["umlegung-foerderarten-entity-controller"],
        "description": "patch-umlegungfoerderarten",
        "operationId": "patchItemResource-umlegungfoerderarten-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UmlegungFoerderartenRequestBody" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/EntityModelUmlegungFoerderarten" } }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/versorgungsquoteGruppenstaerkes": {
      "get": {
        "tags": ["versorgungsquote-gruppenstaerke-entity-controller"],
        "description": "get-versorgungsquotegruppenstaerke",
        "operationId": "getCollectionResource-versorgungsquotegruppenstaerke-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelVersorgungsquoteGruppenstaerke" }
              },
              "application/x-spring-data-compact+json": {
                "schema": { "$ref": "#/components/schemas/PagedModelEntityModelVersorgungsquoteGruppenstaerke" }
              },
              "text/uri-list": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": ["versorgungsquote-gruppenstaerke-entity-controller"],
        "description": "create-versorgungsquotegruppenstaerke",
        "operationId": "postCollectionResource-versorgungsquotegruppenstaerke-post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/VersorgungsquoteGruppenstaerkeRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelVersorgungsquoteGruppenstaerke" }
              }
            }
          }
        }
      }
    },
    "/versorgungsquoteGruppenstaerkes/search/findFirstByInfrastruktureinrichtungTypAndGueltigAbIsLessThanEqualOrderByGueltigAbDesc": {
      "get": {
        "tags": ["versorgungsquote-gruppenstaerke-search-controller"],
        "operationId": "executeSearch-versorgungsquotegruppenstaerke-get",
        "parameters": [
          {
            "name": "infrastruktureinrichtungTyp",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "UNSPECIFIED",
                "KINDERKRIPPE",
                "KINDERGARTEN",
                "GS_NACHMITTAG_BETREUUNG",
                "HAUS_FUER_KINDER",
                "GRUNDSCHULE",
                "MITTELSCHULE"
              ]
            }
          },
          { "name": "gueltigAb", "in": "query", "schema": { "type": "string", "format": "date" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelVersorgungsquoteGruppenstaerke" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/versorgungsquoteGruppenstaerkes/{id}": {
      "get": {
        "tags": ["versorgungsquote-gruppenstaerke-entity-controller"],
        "description": "get-versorgungsquotegruppenstaerke",
        "operationId": "getItemResource-versorgungsquotegruppenstaerke-get",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelVersorgungsquoteGruppenstaerke" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["versorgungsquote-gruppenstaerke-entity-controller"],
        "description": "update-versorgungsquotegruppenstaerke",
        "operationId": "putItemResource-versorgungsquotegruppenstaerke-put",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/VersorgungsquoteGruppenstaerkeRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelVersorgungsquoteGruppenstaerke" }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelVersorgungsquoteGruppenstaerke" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      },
      "delete": {
        "tags": ["versorgungsquote-gruppenstaerke-entity-controller"],
        "description": "delete-versorgungsquotegruppenstaerke",
        "operationId": "deleteItemResource-versorgungsquotegruppenstaerke-delete",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "204": { "description": "No Content" }, "404": { "description": "Not Found" } }
      },
      "patch": {
        "tags": ["versorgungsquote-gruppenstaerke-entity-controller"],
        "description": "patch-versorgungsquotegruppenstaerke",
        "operationId": "patchItemResource-versorgungsquotegruppenstaerke-patch",
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/VersorgungsquoteGruppenstaerkeRequestBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "$ref": "#/components/schemas/EntityModelVersorgungsquoteGruppenstaerke" }
              }
            }
          },
          "204": { "description": "No Content" }
        }
      }
    },
    "/stammdaten/foerdermix": {
      "get": {
        "tags": ["FoerdermixStamm"],
        "summary": "Lade alle Fördermix Stammdaten",
        "description": "Das Ergebnis wird nach der Bezeichnung aufsteigend sortiert",
        "operationId": "getFoerdermixStaemme",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/FoerdermixStammDto" } }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["FoerdermixStamm"],
        "summary": "Aktualisierung eines FoerdermixStamm",
        "operationId": "updateFoerdermixStamm",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FoerdermixStammDto" } } },
          "required": true
        },
        "responses": {
          "409": {
            "description": "CONFLICT -> Fördermix konnte nicht gespeichert werden, da für die Bezeichnung im angegebenen Jahr bereits ein anderer Fördermix existiert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine FoerdermixStamm mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": {
            "description": "OK -> FoerdermixStamm wurde erfolgreich aktualisiert.",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/FoerdermixStammDto" } } }
          }
        }
      },
      "post": {
        "tags": ["FoerdermixStamm"],
        "summary": "Anlegen eines FoerdermixStamm",
        "operationId": "saveFoerdermixStamm",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FoerdermixStammDto" } } },
          "required": true
        },
        "responses": {
          "400": {
            "description": "BAD_REQUEST -> FoerdermixStamm konnte nicht erstellt werden, überprüfen sie die Eingabe.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "201": {
            "description": "CREATED -> FoerdermixStamm wurde erfolgreich erstellt.",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/FoerdermixStammDto" } } }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "409": {
            "description": "CONFLICT -> Fördermix konnte nicht erstellt werden, da für die Bezeichnung im angegebenen Jahr bereits ein anderer Fördermix existiert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/kommentar": {
      "put": {
        "tags": ["Kommentare"],
        "summary": "Aktualisierung eines Kommentars",
        "operationId": "updateKommentar",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/KommentarDto" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK -> Kommentar wurde erfolgreich aktualisiert.",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/KommentarDto" } } }
          },
          "404": {
            "description": "NOT_FOUND -> Kommentar mit dieser ID nicht vorhanden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "400": {
            "description": "BAD_REQUEST -> Kommentar konnte nicht erstellt werden, überprüfen sie die Eingabe.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      },
      "post": {
        "tags": ["Kommentare"],
        "summary": "Anlegen eines neuen Kommentars",
        "operationId": "createKommentar",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/KommentarDto" } } },
          "required": true
        },
        "responses": {
          "201": {
            "description": "CREATED -> Kommentar wurde erfolgreich erstellt.",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/KommentarDto" } } }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "400": {
            "description": "BAD_REQUEST -> Kommentar konnte nicht erstellt werden, überprüfen sie die Eingabe.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/infrastruktureinrichtung": {
      "put": {
        "tags": ["Infrastruktureinrichtung"],
        "summary": "Aktualisierung einer Infrastruktureinrichtung",
        "operationId": "updateInfrastruktureinrichtung",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/GrundschuleDto" },
                  { "$ref": "#/components/schemas/GsNachmittagBetreuungDto" },
                  { "$ref": "#/components/schemas/HausFuerKinderDto" },
                  { "$ref": "#/components/schemas/KindergartenDto" },
                  { "$ref": "#/components/schemas/KinderkrippeDto" },
                  { "$ref": "#/components/schemas/MittelschuleDto" }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Infrastruktureinrichtung mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "400": {
            "description": "BAD_REQUEST -> Infrastruktureinrichtung konnte nicht aktualisiert werden, überprüfen sie die Eingabe.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": {
            "description": "OK -> Infrastruktureinrichtung wurde erfolgreich aktualisiert.",
            "content": {
              "application/hal+json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GrundschuleDto" },
                    { "$ref": "#/components/schemas/GsNachmittagBetreuungDto" },
                    { "$ref": "#/components/schemas/HausFuerKinderDto" },
                    { "$ref": "#/components/schemas/KindergartenDto" },
                    { "$ref": "#/components/schemas/KinderkrippeDto" },
                    { "$ref": "#/components/schemas/MittelschuleDto" }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Infrastruktureinrichtung"],
        "summary": "Anlegen einer neuen Infrastruktureinrichtung",
        "operationId": "createInfrastruktureinrichtung",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/GrundschuleDto" },
                  { "$ref": "#/components/schemas/GsNachmittagBetreuungDto" },
                  { "$ref": "#/components/schemas/HausFuerKinderDto" },
                  { "$ref": "#/components/schemas/KindergartenDto" },
                  { "$ref": "#/components/schemas/KinderkrippeDto" },
                  { "$ref": "#/components/schemas/MittelschuleDto" }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "400": {
            "description": "BAD_REQUEST -> Infrastruktureinrichtung konnte nicht erstellt werden, überprüfen sie die Eingabe.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "201": {
            "description": "CREATED -> Infrastruktureinrichtung wurde erfolgreich erstellt.",
            "content": {
              "application/hal+json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GrundschuleDto" },
                    { "$ref": "#/components/schemas/GsNachmittagBetreuungDto" },
                    { "$ref": "#/components/schemas/HausFuerKinderDto" },
                    { "$ref": "#/components/schemas/KindergartenDto" },
                    { "$ref": "#/components/schemas/KinderkrippeDto" },
                    { "$ref": "#/components/schemas/MittelschuleDto" }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/bauvorhaben": {
      "put": {
        "tags": ["Bauvorhaben"],
        "summary": "Aktualisierung eines Bauvorhabens",
        "operationId": "updateBauvorhaben",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BauvorhabenDto" } } },
          "required": true
        },
        "responses": {
          "403": {
            "description": "FORBIDDEN -> Keine Berechtigung um die Abfrage mit dem Bauvorhaben zu verknüpfen.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "409": {
            "description": "CONFLICT -> Bauvorhaben konnte nicht aktualisiert werden, da der Vorhabensname bereits existiert oder bei einer Datenübernahme die Abfrage bereits ein Bauvorhaben referenziert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Bauvorhaben mit dieser ID nicht vorhanden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": {
            "description": "OK -> Bauvorhaben wurde erfolgreich aktualisiert.",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/BauvorhabenDto" } } }
          },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Die Dateien konnten nicht gelöscht werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      },
      "post": {
        "tags": ["Bauvorhaben"],
        "summary": "Anlegen eines neuen Bauvorhabens",
        "operationId": "createBauvorhaben",
        "parameters": [
          { "name": "abfrageId", "in": "query", "required": false, "schema": { "type": "string", "format": "uuid" } }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BauvorhabenDto" } } },
          "required": true
        },
        "responses": {
          "403": {
            "description": "FORBIDDEN -> Keine Berechtigung um die Abfrage mit dem Bauvorhaben zu verknüpfen.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "201": {
            "description": "CREATED -> Bauvorhaben wurde erfolgreich erstellt.",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/BauvorhabenDto" } } }
          },
          "404": {
            "description": "NOT_FOUND -> Die ausgewählte Abfrage existiert nicht mehr.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "400": {
            "description": "BAD_REQUEST -> Bauvorhaben konnte nicht erstellt werden, überprüfen sie die Eingabe.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "409": {
            "description": "CONFLICT -> Bauvorhaben konnte nicht erstellt werden, da der Vorhabensname bereits existiert oder bei einer Datenübernahme die Abfrage bereits ein Bauvorhaben referenziert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/bauvorhaben/change-relevante-abfragevariante": {
      "put": {
        "tags": ["Bauvorhaben"],
        "summary": "Setzt die übergebene Abfragevariante als relevante Abfrage beim Bauvorhaben, welches mit der Abfrage der Abfragevariante verknüpft ist.Ist die Abfragevariante bereits als relevant markiert, wird die relevante Abfragevariante des Bauvorhabens entfernt.Eine Relevantsetzung kann nur vorgenommen werden, wenn die Abfrage ein Bauvorhaben referenziert,die Abfrage im Status {@link StatusAbfrage#IN_BEARBEITUNG_SACHBEARBEITUNG} istund noch keine andere Abfrage als relevant markiert wurde.",
        "operationId": "putChangeRelevanteAbfragevariante",
        "parameters": [
          {
            "name": "abfragevariante-id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "404": {
            "description": "NOT_FOUND -> Abfrage oder Abfragevariante nicht gefunden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": {
            "description": "OK -> Relevante Abfragevariante erfolgreich geändert.",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/BauvorhabenDto" } } }
          },
          "403": {
            "description": "FORBIDDEN -> Keine Berechtigung um die Abfrage zu bearbeiten.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "409": {
            "description": "CONFLICT -> Es wurde bereits eine andere Abfragevariante als relevant markiert oder die Abfrage referenziert kein Bauvorhaben.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "400": {
            "description": "BAD_REQUEST -> Relevante Abfragevariante konnte nicht geändert werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/abfrage-status/{id}/zurueck-an-sachbearbeitung": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Abfrage auf den Status IN_BEARBEITUNG_SACHBEARBEITUNG",
        "operationId": "zurueckAnSachbearbeitungAbfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht zur Bearbeitung zurückgegeben werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "403": {
            "description": "FORBIDDEN -> Sie haben keine Berechtigung, den Statuswechsel durchzuführen.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich zurückgegeben an den Abfrage Ersteller." }
        }
      }
    },
    "/abfrage-status/{id}/zurueck-an-abfrageerstellung": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Abfrage auf den Status ANGELEGT",
        "operationId": "zurueckAnAbfrageerstellungAbfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht zur Bearbeitung zurückgegeben werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "403": {
            "description": "FORBIDDEN -> Sie haben keine Berechtigung, den Statuswechsel durchzuführen.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich zurückgegeben an den Abfrage Ersteller." }
        }
      }
    },
    "/abfrage-status/{id}/verschicken-der-stellungnahme": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Abfrage auf den Status IN_BEARBEITUNG_FACHREFERATE",
        "operationId": "verschickenDerStellungnahme",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "403": {
            "description": "FORBIDDEN -> Sie haben keine Berechtigung, den Statuswechsel durchzuführen.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht weitergegeben werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich an RBS oder SOZ zur Bearbeitung weitergegeben." }
        }
      }
    },
    "/abfrage-status/{id}/in-bearbeitung-setzen": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Abfrage auf den Status IN_BEARBEITUNG_SACHBEARBEITUNG",
        "operationId": "inBearbeitungSetzenAbfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht zur Bearbeitung zurückgegeben werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "403": {
            "description": "FORBIDDEN -> Sie haben keine Berechtigung, den Statuswechsel durchzuführen.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich zurückgegeben an den Abfrage Ersteller." }
        }
      }
    },
    "/abfrage-status/{id}/freigabe": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Abfrage auf den Status OFFEN",
        "operationId": "freigabeAbfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "200": { "description": "OK -> Abfrage wurde erfolgreich freigegeben." },
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht freigegeben werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "403": {
            "description": "FORBIDDEN -> Sie haben keine Berechtigung, den Statuswechsel durchzuführen.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/abfrage-status/{id}/erneute-bearbeitung-sachbearbeitung": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Abfrage auf den Status IN_BEARBEITUNG_SACHBEARBEITUNG",
        "operationId": "erneuteBearbeitungSachbearbeitung",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "403": {
            "description": "FORBIDDEN -> Sie haben keine Berechtigung, den Statuswechsel durchzuführen.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht erledigt werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich zur bearbeitung freigestellt." }
        }
      }
    },
    "/abfrage-status/{id}/erledigt-ohne-fachreferat": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Abfrage auf den Status ERLEDIGT_OHNE_FACHREFERAT",
        "operationId": "erledigtOhneFachreferat",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "403": {
            "description": "FORBIDDEN -> Sie haben keine Berechtigung, den Statuswechsel durchzuführen.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich erledigt." },
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht erledgit werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/abfrage-status/{id}/erledigt-mit-fachreferat": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Abfrage auf den Status ERLEDIGT_MIT_FACHREFERAT",
        "operationId": "erledigtMitFachreferat",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "403": {
            "description": "FORBIDDEN -> Sie haben keine Berechtigung, den Statuswechsel durchzuführen.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht erledigt werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich erledigt." }
        }
      }
    },
    "/abfrage-status/{id}/bedarfsmeldung-erfolgt": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Abfrage auf den Status BEDARFSMELDUNG_ERFOLGT",
        "operationId": "bedarfsmeldungErfolgt",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "409": {
            "description": "CONFLICT -> Die Bedarfsmeldung konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht erfolgen",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": { "description": "OK -> Die Bedarfsmeldung der Fachreferate ist erfolgt" },
          "403": {
            "description": "FORBIDDEN -> Sie haben keine Berechtigung, den Statuswechsel durchzuführen.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/abfrage-status/{id}/abbrechen": {
      "put": {
        "tags": ["AbfrageStatus"],
        "summary": "Setzt eine Abfrage auf den Status ABBRUCH",
        "operationId": "abbrechenAbfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } },
          { "name": "anmerkung", "in": "query", "required": false, "schema": { "type": "string", "default": "" } }
        ],
        "responses": {
          "403": {
            "description": "FORBIDDEN -> Sie haben keine Berechtigung, den Statuswechsel durchzuführen.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "409": {
            "description": "CONFLICT -> Die Abfrage konnte aufgrund des aktuellen Status oder des bereits existierenden Abfragenamen nicht abgebrochen werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": { "description": "OK -> Abfrage wurde erfolgreich abbgebrochen." }
        }
      }
    },
    "/wgs-to-utm": {
      "post": {
        "tags": ["Koordinaten"],
        "summary": "Umrechnung Wgs84 zu UTM",
        "operationId": "wgs84toUtm32",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Wgs84Dto" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK -> Transformation der Koordinate von WGS84 zu UTM32 war erfolgreich.",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/UtmDto" } } }
          },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Bei der Transformation der Koordinate ist ein Fehler aufgetreten.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/utm-to-wgs": {
      "post": {
        "tags": ["Koordinaten"],
        "summary": "Umrechnung UTM32 zu WGS84",
        "operationId": "utm32ToWgs84",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UtmDto" } } },
          "required": true
        },
        "responses": {
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Bei der Transformation der Koordinate ist ein Fehler aufgetreten.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": {
            "description": "OK -> Transformation der Koordinate von UTM32 zu WGS84 war erfolgreich.",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/Wgs84Dto" } } }
          }
        }
      }
    },
    "/stammdaten/staedtebauliche-orientierungswerte/import": {
      "post": {
        "tags": ["Stammdaten"],
        "summary": "Importiert die CSV-Datei und persistiert die Einträge in der Datenbank.",
        "operationId": "importStaedtebaulicheOrientierungswerte",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["file"],
                "type": "object",
                "properties": { "file": { "type": "string", "format": "binary" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "UNPROCESSABLE_ENTITY -> Die CSV-Datei konnte nicht korrekt verarbeitet werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": { "description": "OK -> Import konnte erfolgreich durchgeführt werden." },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Beim importieren der Datei ist ein serverseitiger Fehler aufgetreten.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/stammdaten/sobon-orientierungswerte-soziale-infrastruktur/import": {
      "post": {
        "tags": ["Stammdaten"],
        "summary": "Importiert die CSV-Datei und persistiert die Einträge in der Datenbank.",
        "operationId": "importSoBoNOrientierungswerteSozialeInfrastruktur",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["file"],
                "type": "object",
                "properties": { "file": { "type": "string", "format": "binary" } }
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "UNPROCESSABLE_ENTITY -> Die CSV-Datei konnte nicht korrekt verarbeitet werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": { "description": "OK -> Import konnte erfolgreich durchgeführt werden." },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Beim importieren der Datei ist ein serverseitiger Fehler aufgetreten.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/search/searchword-suggestion": {
      "post": {
        "tags": ["Suche"],
        "summary": "Suche nach Suchwortvorschläge für das im Request-Body gegebene Suchanfrage.",
        "operationId": "searchForSearchwordSuggestion",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SearchQueryDto" } } },
          "required": true
        },
        "responses": {
          "404": {
            "description": "NOT_FOUND -> Im Requestbody wurde kein zu durchsuchender Entitätstyp gewählt.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": {
            "description": "OK -> Es wurde eine erfolgreiche Suche nach Suchwortvorschlägen durchgeführt.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/SuchwortSuggestionsDto" } }
            }
          }
        }
      }
    },
    "/search/entities": {
      "post": {
        "tags": ["Suche"],
        "summary": "Suche nach Entitäten für die im Request-Body gegebene Suchanfrage.",
        "operationId": "searchForEntities",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SearchQueryAndSortingDto" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK -> Es wurde eine erfolgreiche Enititätssuche durchgeführt.",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/SearchResultsDto" } } }
          },
          "404": {
            "description": "NOT_FOUND -> Im Requestbody wurde kein zu durchsuchender Entitätstyp gewählt.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/presigned-url": {
      "get": {
        "tags": ["Dateihandling"],
        "summary": "Stellt die Presigned-Url zum Holen einer Datei zur Verfügung.",
        "description": "Die Presigned-Url ist vom Aufrufer mit der Http-Methode GET zu verwenden.",
        "operationId": "getFile",
        "parameters": [
          {
            "name": "pathToFile",
            "in": "query",
            "description": "Der Dateipfad muss absolut, ohne Angabe des Buckets und ohne führenden Pfadtrenner angegeben werden. Beispiel: outerFolder/innerFolder/thefile.pdf",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Der Dateipfad muss absolut, ohne Angabe des Buckets und ohne führenden Pfadtrenner angegeben werden. Beispiel: outerFolder/innerFolder/thefile.pdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/PresignedUrlDto" } } }
          },
          "400": {
            "description": "BAD REQUEST -> Der JSON-Body des Requests ist fehlerhaft oder nicht vorhanden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Die Presigned-Url konnte nicht erzeugt werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT FOUND -> Die Datei ist im S3-Storage nicht verfügbar.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      },
      "post": {
        "tags": ["Dateihandling"],
        "summary": "Stellt die Presigned-Url zum Initialen Speichern einer Datei zur Verfügung.",
        "description": "Die Presigned-Url ist vom Aufrufer mit der Http-Methode PUT zu verwenden.",
        "operationId": "saveFile",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FilepathDto" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/PresignedUrlDto" } } }
          },
          "400": {
            "description": "BAD REQUEST -> Der Request ist fehlerhaft.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "409": {
            "description": "CONFLICT -> Die Datei existiert bereits im S3-Storage unter dem Dateipfad.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Die Presigned-Url konnte nicht erzeugt werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/mime-type": {
      "post": {
        "tags": ["MimeType"],
        "summary": "Stellt die Mime-Type-Information für die im Parameter referenzierte und im S3-Storage befindliche Datei zur Verfügung.",
        "description": "Handelt es sich um einen ungültigen Mime-Type wird die referenzierte Datei vom S3-Storage gelöscht.",
        "operationId": "extractMediaTypeInformationForAllowedMediaType",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FilepathDto" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/MimeTypeInformationDto" } }
            }
          },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Bei der Ermittlung des Mime-Types ist ein Fehler aufgetreten.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "406": {
            "description": "NOT ACCEPTABLE -> Die referenzierte und im S3-Storage befindliche Datei besitzt keinen zulässigen Mime-Type.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/abfrage": {
      "post": {
        "tags": ["Abfragen"],
        "summary": "Anlegen einer neuen Abfrage",
        "operationId": "save",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/BaugenehmigungsverfahrenAngelegtDto" },
                  { "$ref": "#/components/schemas/BauleitplanverfahrenAngelegtDto" },
                  { "$ref": "#/components/schemas/WeiteresVerfahrenAngelegtDto" }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "CREATED -> Abfrage wurde erfolgreich erstellt.",
            "content": {
              "application/hal+json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/BaugenehmigungsverfahrenDto" },
                    { "$ref": "#/components/schemas/BauleitplanverfahrenDto" },
                    { "$ref": "#/components/schemas/WeiteresVerfahrenDto" }
                  ]
                }
              }
            }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "400": {
            "description": "BAD_REQUEST -> Abfrage konnte nicht erstellt werden, überprüfen sie die Eingabe.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "409": {
            "description": "CONFLICT -> Abfrage konnte nicht erstellt werden, da der Name der Abfrage oder Abfragevariante bereits existiert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Das referenzierte Bauvorhaben existiert nicht.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/abfrage/in-bearbeitung-sachbearbeitung/{id}": {
      "patch": {
        "tags": ["Abfragen"],
        "summary": "Aktualisierung einer Abfrage im Status IN_BEARBEITUNG_SACHBEARBEITUNG.",
        "operationId": "patchInBearbeitungSachbearbeitung",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/BaugenehmigungsverfahrenInBearbeitungSachbearbeitungDto" },
                  { "$ref": "#/components/schemas/BauleitplanverfahrenInBearbeitungSachbearbeitungDto" },
                  { "$ref": "#/components/schemas/WeiteresVerfahrenInBearbeitungSachbearbeitungDto" }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "CONFLICT -> Abfrage konnte nicht aktualisiert werden, da der Name der Abfrage oder Abfragevariante bereits existiert oder die Abfrage nicht im korrekten Status ist.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "403": {
            "description": "FORBIDDEN -> Keine Berechtigung um die Abfrage zu bearbeiten.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": {
            "description": "OK -> Abfrage wurde erfolgreich aktualisiert.",
            "content": {
              "application/hal+json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/BaugenehmigungsverfahrenDto" },
                    { "$ref": "#/components/schemas/BauleitplanverfahrenDto" },
                    { "$ref": "#/components/schemas/WeiteresVerfahrenDto" }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST -> Abfrage konnte nicht aktualisiert werden, überprüfen sie die Eingabe oder die Abfrage befindet sich in einem unzulässigen Status",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/abfrage/in-bearbeitung-fachreferate/{id}": {
      "patch": {
        "tags": ["Abfragen"],
        "summary": "Aktualisierung einer Abfrage im Status IN_BEARBEITUNG_FACHREFERATE.",
        "operationId": "patchInBearbeitungFachreferat",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/BaugenehmigungsverfahrenInBearbeitungFachreferatDto" },
                  { "$ref": "#/components/schemas/BauleitplanverfahrenInBearbeitungFachreferatDto" },
                  { "$ref": "#/components/schemas/WeiteresVerfahrenInBearbeitungFachreferatDto" }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "CONFLICT -> Abfrage konnte nicht aktualisiert werden, da der Name der Abfrage oder Abfragevariante bereits existiert oder die Abfrage nicht im korrekten Status ist.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "403": {
            "description": "FORBIDDEN -> Keine Berechtigung um die Abfrage zu bearbeiten.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": {
            "description": "OK -> Abfrage wurde erfolgreich aktualisiert.",
            "content": {
              "application/hal+json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/BaugenehmigungsverfahrenDto" },
                    { "$ref": "#/components/schemas/BauleitplanverfahrenDto" },
                    { "$ref": "#/components/schemas/WeiteresVerfahrenDto" }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST -> Abfrage konnte nicht aktualisiert werden, überprüfen sie die Eingabe oder die Abfrage befindet sich in einem unzulässigen Status",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/abfrage/bedarfsmeldung-erfolgt/{id}": {
      "patch": {
        "tags": ["Abfragen"],
        "summary": "Aktualisierung einer Abfrage im Status BEDARFSMELDUNG_ERFOLGT.",
        "operationId": "patchBedarfsmeldungErfolgt",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/BaugenehmigungsverfahrenBedarfsmeldungErfolgtDto" },
                  { "$ref": "#/components/schemas/BauleitplanverfahrenBedarfsmeldungErfolgtDto" },
                  { "$ref": "#/components/schemas/WeiteresVerfahrenBedarfsmeldungErfolgtDto" }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "CONFLICT -> Abfrage konnte nicht aktualisiert werden, da der Name der Abfrage oder Abfragevariante bereits existiert oder die Abfrage nicht im korrekten Status ist.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": {
            "description": "OK -> Abfrage wurde erfolgreich aktualisiert.",
            "content": {
              "application/hal+json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/BaugenehmigungsverfahrenDto" },
                    { "$ref": "#/components/schemas/BauleitplanverfahrenDto" },
                    { "$ref": "#/components/schemas/WeiteresVerfahrenDto" }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST -> Abfrage konnte nicht aktualisiert werden, überprüfen sie die Eingabe oder die Abfrage befindet sich in einem unzulässigen Status",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/abfrage/angelegt/{id}": {
      "patch": {
        "tags": ["Abfragen"],
        "summary": "Aktualisierung einer Abfrage im Status ANGELEGT.",
        "operationId": "patchAngelegt",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/BaugenehmigungsverfahrenAngelegtDto" },
                  { "$ref": "#/components/schemas/BauleitplanverfahrenAngelegtDto" },
                  { "$ref": "#/components/schemas/WeiteresVerfahrenAngelegtDto" }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "CONFLICT -> Abfrage konnte nicht aktualisiert werden, da der Name der Abfrage oder Abfragevariante bereits existiert oder die Abfrage nicht im korrekten Status ist.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID oder das referenzierte Bauvorhaben existiert nicht.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "403": {
            "description": "FORBIDDEN -> Keine Berechtigung um die Abfrage zu bearbeiten.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "412": {
            "description": "PRECONDITION_FAILED -> In der Anwendung ist bereits eine neuere Version der Entität gespeichert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": {
            "description": "OK -> Abfrage wurde erfolgreich aktualisiert.",
            "content": {
              "application/hal+json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/BaugenehmigungsverfahrenDto" },
                    { "$ref": "#/components/schemas/BauleitplanverfahrenDto" },
                    { "$ref": "#/components/schemas/WeiteresVerfahrenDto" }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST -> Abfrage konnte nicht aktualisiert werden, überprüfen sie die Eingabe oder die Abfrage befindet sich in einem unzulässigen Status",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "555": {
            "description": "CUSTOM INTERNAL SERVER ERROR -> Die Dateien konnten nicht gelöscht werden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/stammdaten/foerdermix/{id}": {
      "get": {
        "tags": ["FoerdermixStamm"],
        "summary": "Lesen eines FoerdermixStamm",
        "operationId": "getFoerdermixStammById",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "404": {
            "description": "NOT FOUND -> FoerdermixStamm mit dieser ID nicht vorhanden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/FoerdermixStammDto" } } }
          }
        }
      },
      "delete": {
        "tags": ["FoerdermixStamm"],
        "summary": "Löschen eines FoerdermixStamm",
        "operationId": "deleteFoerdermixStammById",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "404": {
            "description": "NOT FOUND -> FoerdermixStamm mit dieser ID nicht vorhanden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "204": { "description": "NO CONTENT" }
        }
      }
    },
    "/stammdaten/file-information": {
      "get": {
        "tags": ["FileInfoStamm"],
        "description": "Gibt die in der Anwendung erlaubten Dateiendungen, maximalen Dateigrößen, ... zurück (z.B. .pdf).",
        "operationId": "getFileInformation",
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/FileInformationDto" } } }
          }
        }
      }
    },
    "/lookup-lists": {
      "get": {
        "tags": ["Lookup"],
        "summary": "Gibt die Lookuplisten zurück.",
        "operationId": "getLookupLists",
        "responses": {
          "200": {
            "description": "OK -> Lookuplisten wurden erfolgreich zurückgegeben.",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/LookupListsDto" } } }
          }
        }
      }
    },
    "/kommentar/all/infrastruktureinrichtung/{infrastruktureinrichtungId}": {
      "get": {
        "tags": ["Kommentare"],
        "summary": "Holen der Kommentare einer Infrastruktureinrichtung",
        "operationId": "getKommentareForInfrastruktureinrichtung",
        "parameters": [
          {
            "name": "infrastruktureinrichtungId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/KommentarDto" } }
              }
            }
          }
        }
      }
    },
    "/kommentar/all/bauvorhaben/{bauvorhabenId}": {
      "get": {
        "tags": ["Kommentare"],
        "summary": "Holen der Kommentare eines Bauvorhabens",
        "operationId": "getKommentareForBauvorhaben",
        "parameters": [
          { "name": "bauvorhabenId", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/KommentarDto" } }
              }
            }
          }
        }
      }
    },
    "/infrastruktureinrichtung/{id}": {
      "get": {
        "tags": ["Infrastruktureinrichtung"],
        "summary": "Lesen einer Infrastruktureinrichtung",
        "operationId": "getInfrastruktureinrichtungById",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GrundschuleDto" },
                    { "$ref": "#/components/schemas/GsNachmittagBetreuungDto" },
                    { "$ref": "#/components/schemas/HausFuerKinderDto" },
                    { "$ref": "#/components/schemas/KindergartenDto" },
                    { "$ref": "#/components/schemas/KinderkrippeDto" },
                    { "$ref": "#/components/schemas/MittelschuleDto" }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND -> Grundschule mit dieser ID nicht vorhanden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      },
      "delete": {
        "tags": ["Infrastruktureinrichtung"],
        "summary": "Löschen einer Infrastruktureinrichtung",
        "operationId": "deleteInfrastruktureinrichtungById",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "404": {
            "description": "NOT FOUND -> Infrastruktureinrichtung mit dieser ID nicht vorhanden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "204": { "description": "NO CONTENT" },
          "409": {
            "description": "CONFLICT -> Die Infrastruktureinrichtung referenziert ein Bauvorhaben.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/dokumente": {
      "get": {
        "tags": ["Dokumente"],
        "summary": "Holen aller in der Anwendung vorhandenen Dokumente",
        "operationId": "getDokumente",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 100 }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/DokumenteDto" } } }
          }
        }
      }
    },
    "/bauvorhaben/{id}": {
      "get": {
        "tags": ["Bauvorhaben"],
        "summary": "Lesen eines Bauvorhabens",
        "operationId": "getBauvorhabenById",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/hal+json": { "schema": { "$ref": "#/components/schemas/BauvorhabenDto" } } }
          },
          "404": {
            "description": "NOT FOUND -> Bauvorhaben mit dieser ID nicht vorhanden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      },
      "delete": {
        "tags": ["Bauvorhaben"],
        "summary": "Löschen eines Bauvorhabens",
        "operationId": "deleteBauvorhaben",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "409": {
            "description": "CONFLICT -> Das Bauvorhaben wird durch Abfragen referenziert.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT FOUND -> Bauvorhaben mit dieser ID nicht vorhanden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "204": { "description": "NO CONTENT" }
        }
      }
    },
    "/bauvorhaben/referenced/infrastruktureinrichtung/{id}": {
      "get": {
        "tags": ["Bauvorhaben"],
        "summary": "Lade alle Infrastruktureinrichtungen die einem Bauvorhaben angehören",
        "description": "Das Ergebnis wird anhand des InfrastruktureinrichtungTyps und innerhalb des Types alphabetisch sortiert",
        "operationId": "getReferencedInfrastruktureinrichtung",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/InfrastruktureinrichtungSearchResultDto" }
                }
              }
            }
          }
        }
      }
    },
    "/bauvorhaben/referenced/abfragen/{id}": {
      "get": {
        "tags": ["Bauvorhaben"],
        "summary": "Lade alle Abfragen die einem Bauvorhaben angehören",
        "description": "Das Ergebnis wird anhand des Erstellungsdatums aufsteigend sortiert.",
        "operationId": "getReferencedAbfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/AbfrageSearchResultDto" } }
              }
            }
          }
        }
      }
    },
    "/baurate/determine": {
      "get": {
        "tags": ["Baurate"],
        "summary": "Ermittelt die Bauraten auf Basis der Stammdaten für idealtypische Bauraten",
        "operationId": "determineBauraten",
        "parameters": [
          {
            "name": "realisierungsbeginn",
            "in": "query",
            "required": true,
            "schema": { "minimum": 0, "type": "integer", "format": "int32" }
          },
          {
            "name": "wohneinheiten",
            "in": "query",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "format": "int64" }
          },
          {
            "name": "geschossflaecheWohnen",
            "in": "query",
            "required": false,
            "schema": { "minimum": 0, "type": "number" }
          }
        ],
        "responses": {
          "404": {
            "description": "NOT FOUND -> Es konnten keine Bauraten ermittelt werden, da keine idealtypischen Bauraten für die gegebenen Parameter existieren.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/BaurateDto" } }
              }
            }
          }
        }
      }
    },
    "/abfrage/{id}": {
      "get": {
        "tags": ["Abfragen"],
        "summary": "Lesen einer Abfrage.",
        "operationId": "getById",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/BaugenehmigungsverfahrenDto" },
                    { "$ref": "#/components/schemas/BauleitplanverfahrenDto" },
                    { "$ref": "#/components/schemas/WeiteresVerfahrenDto" }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN -> Keine Berechtigung um die Abfrage zu öffnen.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT FOUND -> Abfrage mit dieser ID nicht vorhanden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      },
      "delete": {
        "tags": ["Abfragen"],
        "summary": "Löschen einer Abfrage",
        "operationId": "deleteById",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "403": {
            "description": "CONFLICT -> Der Nutzer besitzt nicht die Berechtigung zum Löschen der Abfrage.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "409": {
            "description": "CONFLICT -> Die Abfrage referenziert ein Bauvorhaben oder die Abfrage nicht im korrekten Status ist.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "204": { "description": "NO CONTENT" },
          "404": {
            "description": "NOT FOUND -> Abfrage mit dieser ID nicht vorhanden.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          }
        }
      }
    },
    "/abfrage-status/{id}/transitions": {
      "get": {
        "tags": ["AbfrageStatus"],
        "summary": "Holt alle möglichen StatusAbfrage Transitions auf Basis der Authorities und des aktuellen Status",
        "operationId": "transitionsAbfrage",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "403": {
            "description": "FORBIDDEN -> Sie haben keine Berechtigung, den Statuswechsel durchzuführen.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "404": {
            "description": "NOT_FOUND -> Es gibt keine Abfrage mit der ID.",
            "content": {
              "application/hal+json": { "schema": { "$ref": "#/components/schemas/InformationResponseDto" } }
            }
          },
          "200": {
            "description": "OK -> Alle mögliche Transistions gefunden",
            "content": {
              "application/hal+json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/TransitionDto" } }
              }
            }
          }
        }
      }
    },
    "/kommentar/{id}": {
      "delete": {
        "tags": ["Kommentare"],
        "summary": "Löschen eines Kommentars",
        "operationId": "deleteKommentar",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": { "204": { "description": "NO CONTENT" } }
      }
    }
  },
  "components": {
    "schemas": {
      "AbstractJsonSchemaPropertyObject": {
        "type": "object",
        "properties": { "title": { "type": "string" }, "readOnly": { "type": "boolean" } }
      },
      "Item": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "properties": {
            "type": "object",
            "additionalProperties": { "$ref": "#/components/schemas/AbstractJsonSchemaPropertyObject" }
          },
          "requiredProperties": { "type": "array", "items": { "type": "string" } }
        }
      },
      "JsonSchema": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "description": { "type": "string" },
          "properties": {
            "type": "object",
            "additionalProperties": { "$ref": "#/components/schemas/AbstractJsonSchemaPropertyObject" }
          },
          "requiredProperties": { "type": "array", "items": { "type": "string" } },
          "definitions": { "type": "object", "additionalProperties": { "$ref": "#/components/schemas/Item" } },
          "type": { "type": "string" },
          "$schema": { "type": "string" }
        }
      },
      "Links": { "type": "object", "additionalProperties": { "$ref": "#/components/schemas/Link" } },
      "RepresentationModelObject": {
        "type": "object",
        "properties": { "_links": { "$ref": "#/components/schemas/Links" } }
      },
      "Foerderart": {
        "type": "object",
        "properties": { "bezeichnung": { "type": "string" }, "anteilProzent": { "type": "number" } }
      },
      "Foerdermix": {
        "type": "object",
        "properties": {
          "bezeichnungJahr": { "type": "string" },
          "bezeichnung": { "type": "string" },
          "foerderarten": { "type": "array", "items": { "$ref": "#/components/schemas/Foerderart" } }
        }
      },
      "EntityModelFoerdermixStamm": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "foerdermix": { "$ref": "#/components/schemas/Foerdermix" },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PageMetadata": {
        "type": "object",
        "properties": {
          "size": { "type": "integer", "format": "int64" },
          "totalElements": { "type": "integer", "format": "int64" },
          "totalPages": { "type": "integer", "format": "int64" },
          "number": { "type": "integer", "format": "int64" }
        }
      },
      "PagedModelEntityModelFoerdermixStamm": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "foerdermixStamms": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EntityModelFoerdermixStamm" }
              }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "EntityModelAbfragevarianteBaugenehmigungsverfahren": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "type": "string" },
          "realisierungVon": { "type": "integer", "format": "int32" },
          "gfWohnenGesamt": { "type": "number" },
          "gfWohnenBaurechtlichGenehmigt": { "type": "number" },
          "gfWohnenBaurechtlichFestgesetzt": { "type": "number" },
          "gfWohnenBestandswohnbaurecht": { "type": "number" },
          "gfWohnenSonderwohnformen": { "type": "boolean" },
          "gfWohnenStudentischesWohnen": { "type": "number" },
          "gfWohnenSeniorinnenWohnen": { "type": "number" },
          "gfWohnenGenossenschaftlichesWohnen": { "type": "number" },
          "gfWohnenWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "number" },
          "weGesamt": { "type": "integer", "format": "int32" },
          "weBaurechtlichGenehmigt": { "type": "integer", "format": "int32" },
          "weBaurechtlichFestgesetzt": { "type": "integer", "format": "int32" },
          "weSonderwohnformen": { "type": "boolean" },
          "weStudentischesWohnen": { "type": "integer", "format": "int32" },
          "weSeniorinnenWohnen": { "type": "integer", "format": "int32" },
          "weGenossenschaftlichesWohnen": { "type": "integer", "format": "int32" },
          "weWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "integer", "format": "int32" },
          "sobonOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022", "STANDORTABFRAGE"]
          },
          "stammdatenGueltigAb": { "type": "string", "format": "date" },
          "anmerkung": { "type": "string" },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauKita": { "type": "boolean" },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauSchule": { "type": "boolean" },
          "hinweisVersorgung": { "type": "string" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PagedModelEntityModelAbfragevarianteBaugenehmigungsverfahren": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "abfragevarianteBaugenehmigungsverfahrens": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBaugenehmigungsverfahren" }
              }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "Jahresrate": {
        "type": "object",
        "properties": { "jahr": { "type": "integer", "format": "int32" }, "rate": { "type": "number" } }
      },
      "EntityModelIdealtypischeBaurate": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "von": { "type": "number" },
          "bisExklusiv": { "type": "number" },
          "typ": { "type": "string", "enum": ["ANZAHL_WOHNEINHEITEN_GESAMT", "GESCHOSSFLAECHE_WOHNEN_GESAMT"] },
          "jahresraten": { "type": "array", "items": { "$ref": "#/components/schemas/Jahresrate" } },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PagedModelEntityModelIdealtypischeBaurate": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "idealtypischeBaurates": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EntityModelIdealtypischeBaurate" }
              }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "Adresse": {
        "type": "object",
        "properties": {
          "strasse": { "type": "string" },
          "hausnummer": { "type": "string" },
          "plz": { "type": "string" },
          "ort": { "type": "string" },
          "coordinate": { "$ref": "#/components/schemas/Wgs84" },
          "angabeLageErgaenzendeAdressinformation": { "type": "string" }
        }
      },
      "BearbeitendePerson": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "organisationseinheit": { "type": "string" }
        }
      },
      "Bezirksteil": {
        "type": "object",
        "properties": {
          "nummer": { "type": "string" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometry" }
        }
      },
      "Filepath": { "type": "object", "properties": { "pathToFile": { "type": "string" } } },
      "Flurstueck": {
        "type": "object",
        "properties": {
          "nummer": { "type": "string" },
          "flaecheQm": { "type": "number" },
          "zaehler": { "type": "integer", "format": "int64" },
          "nenner": { "type": "integer", "format": "int64" },
          "eigentumsart": { "type": "integer", "format": "int64" },
          "eigentumsartBedeutung": { "type": "string" },
          "gemarkungNummer": { "type": "number" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometry" }
        }
      },
      "Gemarkung": {
        "type": "object",
        "properties": {
          "nummer": { "type": "number" },
          "name": { "type": "string" },
          "flurstuecke": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Flurstueck" }
          },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometry" }
        }
      },
      "Grundschulsprengel": {
        "type": "object",
        "properties": {
          "nummer": { "type": "integer", "format": "int64" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometry" }
        }
      },
      "Kitaplanungsbereich": {
        "type": "object",
        "properties": {
          "kitaPlb": { "type": "integer", "format": "int64" },
          "kitaPlbT": { "type": "string" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometry" }
        }
      },
      "Mittelschulsprengel": {
        "type": "object",
        "properties": {
          "nummer": { "type": "integer", "format": "int64" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometry" }
        }
      },
      "MultiPolygonGeometry": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": { "type": "array", "items": { "type": "array", "items": { "type": "number" } } }
            }
          }
        }
      },
      "Stadtbezirk": {
        "type": "object",
        "properties": {
          "nummer": { "type": "string" },
          "name": { "type": "string" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometry" }
        }
      },
      "StatusAbfrage": {
        "type": "string",
        "enum": [
          "ANGELEGT",
          "OFFEN",
          "IN_BEARBEITUNG_SACHBEARBEITUNG",
          "IN_BEARBEITUNG_FACHREFERATE",
          "BEDARFSMELDUNG_ERFOLGT",
          "ERLEDIGT_MIT_FACHREFERAT",
          "ERLEDIGT_OHNE_FACHREFERAT",
          "ABBRUCH"
        ]
      },
      "UncertainBoolean": { "type": "string", "enum": ["UNSPECIFIED", "TRUE", "FALSE"] },
      "VerortungMultiPolygon": {
        "type": "object",
        "properties": {
          "stadtbezirke": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Stadtbezirk" }
          },
          "bezirksteile": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Bezirksteil" }
          },
          "viertel": { "uniqueItems": true, "type": "array", "items": { "$ref": "#/components/schemas/Viertel" } },
          "gemarkungen": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Gemarkung" }
          },
          "kitaplanungsbereiche": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Kitaplanungsbereich" }
          },
          "grundschulsprengel": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Grundschulsprengel" }
          },
          "mittelschulsprengel": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Mittelschulsprengel" }
          },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometry" }
        }
      },
      "Viertel": {
        "type": "object",
        "properties": {
          "nummer": { "type": "string" },
          "flaecheQm": { "type": "number" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometry" }
        }
      },
      "Wgs84": {
        "type": "object",
        "properties": {
          "latitude": { "type": "number", "format": "double" },
          "longitude": { "type": "number", "format": "double" }
        }
      },
      "EntityModelAbfrage": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "name": { "type": "string" },
          "statusAbfrage": { "$ref": "#/components/schemas/StatusAbfrage" },
          "anmerkung": { "type": "string" },
          "sub": { "type": "string" },
          "linkEakte": { "type": "string" },
          "artAbfrage": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PagedModelEntityModelAbfrage": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "abfrages": { "type": "array", "items": { "$ref": "#/components/schemas/EntityModelAbfrage" } }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "CollectionModelObject": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": { "objects": { "type": "array", "items": { "type": "object" } } }
          },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "EntityModelBauvorhaben": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "bearbeitendePerson": { "$ref": "#/components/schemas/BearbeitendePerson" },
          "nameVorhaben": { "type": "string" },
          "grundstuecksgroesse": { "type": "number" },
          "standVerfahren": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "VORBEREITUNG_ECKDATENBESCHLUSS",
              "VORBEREITUNG_WETTBEWERBAUSLOBUNG",
              "VORBEREITUNG_AUFSTELLUNGSBESCHLUSS",
              "VORBEREITUNG_BILLIGUNGSBESCHLUSS_STAEDTEBAULICHER_VERTRAG",
              "VORBEREITUNG_SATZUNGSBESCHLUSS",
              "VORLIEGENDER_SATZUNGSBESCHLUSS",
              "RECHTSVERBINDLICHKEIT_AMTSBLATT",
              "AUFTEILUNGSPLAN",
              "VORBEREITUNG_VORBESCHEID",
              "VORBEREITUNG_BAUGENEHMIGUNG",
              "VORABFRAGE_OHNE_KONKRETEN_STAND",
              "STRUKTURKONZEPT",
              "RAHMENPLANUNG",
              "POTENTIALUNTERSUCHUNG",
              "STAEDTEBAULICHE_SANIERUNGSMASSNAHME",
              "STAEDTEBAULICHE_ENTWICKLUNGSMASSNAHME",
              "INFO_FEHLT",
              "FREIE_EINGABE",
              "STANDORTABFRAGE"
            ]
          },
          "standVerfahrenFreieEingabe": { "type": "string" },
          "bauvorhabenNummer": { "type": "string" },
          "adresse": { "$ref": "#/components/schemas/Adresse" },
          "verortung": { "$ref": "#/components/schemas/VerortungMultiPolygon" },
          "bebauungsplannummer": { "type": "string" },
          "fisNummer": { "type": "string" },
          "anmerkung": { "type": "string" },
          "sobonRelevant": { "$ref": "#/components/schemas/UncertainBoolean" },
          "sobonJahr": {
            "type": "string",
            "enum": [
              "JAHR_1995",
              "JAHR_1997",
              "JAHR_2001",
              "JAHR_2006",
              "JAHR_2012",
              "JAHR_2017",
              "JAHR_2017_PLUS",
              "JAHR_2021"
            ]
          },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "type": "string" },
          "artFnp": {
            "type": "array",
            "items": { "type": "string", "enum": ["UNSPECIFIED", "WR", "WA", "MU", "MK", "MI", "GE", "INFO_FEHLT"] }
          },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "EntityModelDokument": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "filePath": { "$ref": "#/components/schemas/Filepath" },
          "artDokument": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "EMAIL",
              "BESCHLUSS",
              "ANLAGE",
              "ANTRAG",
              "KARTE",
              "STELLUNGNAHME",
              "DATEN_BAUVORHABEN",
              "GEBAEUDEPLAN",
              "BERECHNUNG",
              "INFOS_BAUGENEHMIGUNG",
              "PRESSEARTIKEL",
              "INFOS_ZU_SOZ_INFRASTRUKTUR",
              "PROTOKOLL",
              "SONSTIGES"
            ]
          },
          "sizeInBytes": { "type": "integer", "format": "int64" },
          "typDokument": { "type": "string" },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PagedModelEntityModelDokument": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "dokuments": { "type": "array", "items": { "$ref": "#/components/schemas/EntityModelDokument" } }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "EntityModelAbfragevariante": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PagedModelEntityModelAbfragevariante": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "abfragevariantes": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EntityModelAbfragevariante" }
              }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "EntityModelSobonOrientierungswertSozialeInfrastruktur": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "gueltigAb": { "type": "string", "format": "date" },
          "einrichtungstyp": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "KINDERKRIPPE",
              "KINDERGARTEN",
              "GS_NACHMITTAG_BETREUUNG",
              "HAUS_FUER_KINDER",
              "GRUNDSCHULE",
              "MITTELSCHULE"
            ]
          },
          "altersklasse": {
            "type": "string",
            "enum": [
              "NULL_ZWEI",
              "DREI_SECHSEINHALB",
              "SECHSEINHALB_NEUNEINHALB",
              "ZEHNEINHALB_FUENFZEHN",
              "SECHSZEHN_ACHTZEHN",
              "ALLE_EWO"
            ]
          },
          "foerderartBezeichnung": { "type": "string" },
          "einwohnerJahr1NachErsterstellung": { "type": "number" },
          "einwohnerJahr2NachErsterstellung": { "type": "number" },
          "einwohnerJahr3NachErsterstellung": { "type": "number" },
          "einwohnerJahr4NachErsterstellung": { "type": "number" },
          "einwohnerJahr5NachErsterstellung": { "type": "number" },
          "einwohnerJahr6NachErsterstellung": { "type": "number" },
          "einwohnerJahr7NachErsterstellung": { "type": "number" },
          "einwohnerJahr8NachErsterstellung": { "type": "number" },
          "einwohnerJahr9NachErsterstellung": { "type": "number" },
          "einwohnerJahr10NachErsterstellung": { "type": "number" },
          "stammwertArbeitsgruppe": { "type": "number" },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PagedModelEntityModelSobonOrientierungswertSozialeInfrastruktur": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "sobonOrientierungswertSozialeInfrastrukturs": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EntityModelSobonOrientierungswertSozialeInfrastruktur" }
              }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "EntityModelVersorgungsquoteGruppenstaerke": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "gueltigAb": { "type": "string", "format": "date" },
          "infrastruktureinrichtungTyp": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "KINDERKRIPPE",
              "KINDERGARTEN",
              "GS_NACHMITTAG_BETREUUNG",
              "HAUS_FUER_KINDER",
              "GRUNDSCHULE",
              "MITTELSCHULE"
            ]
          },
          "versorgungsquotePlanungsursaechlich": { "type": "number" },
          "versorgungsquoteSobonUrsaechlich": { "type": "number" },
          "gruppenstaerke": { "type": "integer", "format": "int32" },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PagedModelEntityModelVersorgungsquoteGruppenstaerke": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "versorgungsquoteGruppenstaerkes": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EntityModelVersorgungsquoteGruppenstaerke" }
              }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "EntityModelStaedtebaulicheOrientierungswert": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "gueltigAb": { "type": "string", "format": "date" },
          "foerderartBezeichnung": { "type": "string" },
          "durchschnittlicheGrundflaeche": { "type": "integer", "format": "int64" },
          "belegungsdichte": { "type": "number" },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PagedModelEntityModelStaedtebaulicheOrientierungswert": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "staedtebaulicheOrientierungswerts": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EntityModelStaedtebaulicheOrientierungswert" }
              }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "PagedModelEntityModelBauvorhaben": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "bauvorhabens": { "type": "array", "items": { "$ref": "#/components/schemas/EntityModelBauvorhaben" } }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "CollectionModelDokument": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "dokuments": { "type": "array", "items": { "$ref": "#/components/schemas/DokumentResponse" } }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PointGeometry": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "coordinates": { "type": "array", "items": { "type": "number" } }
        }
      },
      "VerortungPoint": {
        "type": "object",
        "properties": {
          "stadtbezirke": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Stadtbezirk" }
          },
          "bezirksteile": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Bezirksteil" }
          },
          "viertel": { "uniqueItems": true, "type": "array", "items": { "$ref": "#/components/schemas/Viertel" } },
          "gemarkungen": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Gemarkung" }
          },
          "kitaplanungsbereiche": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Kitaplanungsbereich" }
          },
          "grundschulsprengel": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Grundschulsprengel" }
          },
          "mittelschulsprengel": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Mittelschulsprengel" }
          },
          "point": { "$ref": "#/components/schemas/PointGeometry" }
        }
      },
      "EntityModelInfrastruktureinrichtung": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "bearbeitendePerson": { "$ref": "#/components/schemas/BearbeitendePerson" },
          "lfdNr": { "type": "integer", "format": "int64" },
          "adresse": { "$ref": "#/components/schemas/Adresse" },
          "verortung": { "$ref": "#/components/schemas/VerortungPoint" },
          "nameEinrichtung": { "type": "string" },
          "fertigstellungsjahr": { "type": "integer", "format": "int32" },
          "status": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "UNGESICHERTE_PLANUNG",
              "GESICHERTE_PLANUNG_NEUE_EINR",
              "GESICHERTE_PLANUNG_ERW_PLAETZE_BEST_EINR",
              "GESICHERTE_PLANUNG_TF_KITA_STANDORT",
              "GESICHERTE_PLANUNG_REDUZIERUNG_PLAETZE",
              "GESICHERTE_PLANUNG_INTERIMSSTANDORT",
              "UNGESICHERTE_PLANUNG_TF_KITA_STANDORT",
              "BESTAND"
            ]
          },
          "flaecheGesamtgrundstueck": { "type": "number" },
          "flaecheTeilgrundstueck": { "type": "number" },
          "infrastruktureinrichtungTyp": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "KINDERKRIPPE",
              "KINDERGARTEN",
              "GS_NACHMITTAG_BETREUUNG",
              "HAUS_FUER_KINDER",
              "GRUNDSCHULE",
              "MITTELSCHULE"
            ]
          },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PagedModelEntityModelInfrastruktureinrichtung": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "infrastruktureinrichtungs": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EntityModelInfrastruktureinrichtung" }
              }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "EntityModelKommentar": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "datum": { "type": "string" },
          "text": { "type": "string" },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PagedModelEntityModelKommentar": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "kommentars": { "type": "array", "items": { "$ref": "#/components/schemas/EntityModelKommentar" } }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "SobonBerechnung": {
        "type": "object",
        "properties": {
          "isASobonBerechnung": { "type": "boolean" },
          "sobonFoerdermix": { "$ref": "#/components/schemas/Foerdermix" }
        }
      },
      "EntityModelAbfragevarianteWeiteresVerfahren": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "satzungsbeschluss": { "type": "string", "format": "date" },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "type": "string" },
          "realisierungVon": { "type": "integer", "format": "int32" },
          "gfWohnenGesamt": { "type": "number" },
          "gfWohnenBaurechtlichGenehmigt": { "type": "number" },
          "gfWohnenBaurechtlichFestgesetzt": { "type": "number" },
          "gfWohnenSobonUrsaechlich": { "type": "number" },
          "gfWohnenBestandswohnbaurecht": { "type": "number" },
          "gfWohnenSonderwohnformen": { "type": "boolean" },
          "gfWohnenStudentischesWohnen": { "type": "number" },
          "gfWohnenSeniorinnenWohnen": { "type": "number" },
          "gfWohnenGenossenschaftlichesWohnen": { "type": "number" },
          "gfWohnenWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "number" },
          "weGesamt": { "type": "integer", "format": "int32" },
          "weBaurechtlichGenehmigt": { "type": "integer", "format": "int32" },
          "weBaurechtlichFestgesetzt": { "type": "integer", "format": "int32" },
          "weSonderwohnformen": { "type": "boolean" },
          "weStudentischesWohnen": { "type": "integer", "format": "int32" },
          "weSeniorinnenWohnen": { "type": "integer", "format": "int32" },
          "weGenossenschaftlichesWohnen": { "type": "integer", "format": "int32" },
          "weWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "integer", "format": "int32" },
          "sobonOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022", "STANDORTABFRAGE"]
          },
          "sobonBerechnung": { "$ref": "#/components/schemas/SobonBerechnung" },
          "stammdatenGueltigAb": { "type": "string", "format": "date" },
          "anmerkung": { "type": "string" },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauKita": { "type": "boolean" },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauSchule": { "type": "boolean" },
          "hinweisVersorgung": { "type": "string" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PagedModelEntityModelAbfragevarianteWeiteresVerfahren": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "abfragevarianteWeiteresVerfahrens": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EntityModelAbfragevarianteWeiteresVerfahren" }
              }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "EntityModelGlobalCounter": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "counterType": { "type": "string", "enum": ["NUMMER_BAUVORHABEN"] },
          "counter": { "type": "integer", "format": "int64" },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PagedModelEntityModelGlobalCounter": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "globalCounters": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EntityModelGlobalCounter" }
              }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "Umlegungsschluessel": {
        "type": "object",
        "properties": {
          "foerderarten": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Foerderart" }
          }
        }
      },
      "EntityModelUmlegungFoerderarten": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "bezeichnung": { "type": "string" },
          "gueltigAb": { "type": "string", "format": "date" },
          "umlegungsschluessel": { "$ref": "#/components/schemas/Umlegungsschluessel" },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PagedModelEntityModelUmlegungFoerderarten": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "umlegungFoerderartens": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EntityModelUmlegungFoerderarten" }
              }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "EntityModelAbfragevarianteBauleitplanverfahren": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "satzungsbeschluss": { "type": "string", "format": "date" },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "type": "string" },
          "realisierungVon": { "type": "integer", "format": "int32" },
          "gfWohnenGesamt": { "type": "number" },
          "gfWohnenSobonUrsaechlich": { "type": "number" },
          "gfWohnenBestandswohnbaurecht": { "type": "number" },
          "gfWohnenSonderwohnformen": { "type": "boolean" },
          "gfWohnenStudentischesWohnen": { "type": "number" },
          "gfWohnenSeniorinnenWohnen": { "type": "number" },
          "gfWohnenGenossenschaftlichesWohnen": { "type": "number" },
          "gfWohnenWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "number" },
          "weGesamt": { "type": "integer", "format": "int32" },
          "weSonderwohnformen": { "type": "boolean" },
          "weStudentischesWohnen": { "type": "integer", "format": "int32" },
          "weSeniorinnenWohnen": { "type": "integer", "format": "int32" },
          "weGenossenschaftlichesWohnen": { "type": "integer", "format": "int32" },
          "weWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "integer", "format": "int32" },
          "sobonOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022", "STANDORTABFRAGE"]
          },
          "sobonBerechnung": { "$ref": "#/components/schemas/SobonBerechnung" },
          "stammdatenGueltigAb": { "type": "string", "format": "date" },
          "anmerkung": { "type": "string" },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauKita": { "type": "boolean" },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauSchule": { "type": "boolean" },
          "hinweisVersorgung": { "type": "string" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "_links": { "$ref": "#/components/schemas/Links" }
        }
      },
      "PagedModelEntityModelAbfragevarianteBauleitplanverfahren": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "abfragevarianteBauleitplanverfahrens": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EntityModelAbfragevarianteBauleitplanverfahren" }
              }
            }
          },
          "_links": { "$ref": "#/components/schemas/Links" },
          "page": { "$ref": "#/components/schemas/PageMetadata" }
        }
      },
      "AbfrageRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "name": { "type": "string" },
          "statusAbfrage": { "$ref": "#/components/schemas/StatusAbfrage" },
          "anmerkung": { "type": "string" },
          "bauvorhaben": { "type": "string" },
          "sub": { "type": "string" },
          "linkEakte": { "type": "string" },
          "artAbfrage": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          }
        }
      },
      "AbfragevarianteRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          }
        }
      },
      "BauvorhabenRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "bearbeitendePerson": { "$ref": "#/components/schemas/BearbeitendePerson" },
          "nameVorhaben": { "type": "string" },
          "grundstuecksgroesse": { "type": "number" },
          "standVerfahren": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "VORBEREITUNG_ECKDATENBESCHLUSS",
              "VORBEREITUNG_WETTBEWERBAUSLOBUNG",
              "VORBEREITUNG_AUFSTELLUNGSBESCHLUSS",
              "VORBEREITUNG_BILLIGUNGSBESCHLUSS_STAEDTEBAULICHER_VERTRAG",
              "VORBEREITUNG_SATZUNGSBESCHLUSS",
              "VORLIEGENDER_SATZUNGSBESCHLUSS",
              "RECHTSVERBINDLICHKEIT_AMTSBLATT",
              "AUFTEILUNGSPLAN",
              "VORBEREITUNG_VORBESCHEID",
              "VORBEREITUNG_BAUGENEHMIGUNG",
              "VORABFRAGE_OHNE_KONKRETEN_STAND",
              "STRUKTURKONZEPT",
              "RAHMENPLANUNG",
              "POTENTIALUNTERSUCHUNG",
              "STAEDTEBAULICHE_SANIERUNGSMASSNAHME",
              "STAEDTEBAULICHE_ENTWICKLUNGSMASSNAHME",
              "INFO_FEHLT",
              "FREIE_EINGABE",
              "STANDORTABFRAGE"
            ]
          },
          "standVerfahrenFreieEingabe": { "type": "string" },
          "bauvorhabenNummer": { "type": "string" },
          "adresse": { "$ref": "#/components/schemas/Adresse" },
          "verortung": { "$ref": "#/components/schemas/VerortungMultiPolygon" },
          "bebauungsplannummer": { "type": "string" },
          "fisNummer": { "type": "string" },
          "anmerkung": { "type": "string" },
          "sobonRelevant": { "$ref": "#/components/schemas/UncertainBoolean" },
          "sobonJahr": {
            "type": "string",
            "enum": [
              "JAHR_1995",
              "JAHR_1997",
              "JAHR_2001",
              "JAHR_2006",
              "JAHR_2012",
              "JAHR_2017",
              "JAHR_2017_PLUS",
              "JAHR_2021"
            ]
          },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "type": "string" },
          "artFnp": {
            "type": "array",
            "items": { "type": "string", "enum": ["UNSPECIFIED", "WR", "WA", "MU", "MK", "MI", "GE", "INFO_FEHLT"] }
          },
          "dokumente": { "type": "array", "items": { "type": "string" } },
          "relevanteAbfragevariante": { "type": "string" }
        }
      },
      "DokumentRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "filePath": { "$ref": "#/components/schemas/Filepath" },
          "artDokument": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "EMAIL",
              "BESCHLUSS",
              "ANLAGE",
              "ANTRAG",
              "KARTE",
              "STELLUNGNAHME",
              "DATEN_BAUVORHABEN",
              "GEBAEUDEPLAN",
              "BERECHNUNG",
              "INFOS_BAUGENEHMIGUNG",
              "PRESSEARTIKEL",
              "INFOS_ZU_SOZ_INFRASTRUKTUR",
              "PROTOKOLL",
              "SONSTIGES"
            ]
          },
          "sizeInBytes": { "type": "integer", "format": "int64" },
          "typDokument": { "type": "string" }
        }
      },
      "AbfragevarianteBaugenehmigungsverfahrenRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "type": "string" },
          "realisierungVon": { "type": "integer", "format": "int32" },
          "gfWohnenGesamt": { "type": "number" },
          "gfWohnenBaurechtlichGenehmigt": { "type": "number" },
          "gfWohnenBaurechtlichFestgesetzt": { "type": "number" },
          "gfWohnenBestandswohnbaurecht": { "type": "number" },
          "gfWohnenSonderwohnformen": { "type": "boolean" },
          "gfWohnenStudentischesWohnen": { "type": "number" },
          "gfWohnenSeniorinnenWohnen": { "type": "number" },
          "gfWohnenGenossenschaftlichesWohnen": { "type": "number" },
          "gfWohnenWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "number" },
          "weGesamt": { "type": "integer", "format": "int32" },
          "weBaurechtlichGenehmigt": { "type": "integer", "format": "int32" },
          "weBaurechtlichFestgesetzt": { "type": "integer", "format": "int32" },
          "weSonderwohnformen": { "type": "boolean" },
          "weStudentischesWohnen": { "type": "integer", "format": "int32" },
          "weSeniorinnenWohnen": { "type": "integer", "format": "int32" },
          "weGenossenschaftlichesWohnen": { "type": "integer", "format": "int32" },
          "weWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "integer", "format": "int32" },
          "sobonOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022", "STANDORTABFRAGE"]
          },
          "stammdatenGueltigAb": { "type": "string", "format": "date" },
          "anmerkung": { "type": "string" },
          "bedarfsmeldungFachreferate": { "type": "array", "items": { "type": "string" } },
          "bedarfsmeldungAbfrageersteller": { "type": "array", "items": { "type": "string" } },
          "bauabschnitte": { "type": "array", "items": { "type": "string" } },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauKita": { "type": "boolean" },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauSchule": { "type": "boolean" },
          "hinweisVersorgung": { "type": "string" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          }
        }
      },
      "AbfragevarianteBauleitplanverfahrenRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "satzungsbeschluss": { "type": "string", "format": "date" },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "type": "string" },
          "realisierungVon": { "type": "integer", "format": "int32" },
          "gfWohnenGesamt": { "type": "number" },
          "gfWohnenSobonUrsaechlich": { "type": "number" },
          "gfWohnenBestandswohnbaurecht": { "type": "number" },
          "gfWohnenSonderwohnformen": { "type": "boolean" },
          "gfWohnenStudentischesWohnen": { "type": "number" },
          "gfWohnenSeniorinnenWohnen": { "type": "number" },
          "gfWohnenGenossenschaftlichesWohnen": { "type": "number" },
          "gfWohnenWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "number" },
          "weGesamt": { "type": "integer", "format": "int32" },
          "weSonderwohnformen": { "type": "boolean" },
          "weStudentischesWohnen": { "type": "integer", "format": "int32" },
          "weSeniorinnenWohnen": { "type": "integer", "format": "int32" },
          "weGenossenschaftlichesWohnen": { "type": "integer", "format": "int32" },
          "weWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "integer", "format": "int32" },
          "sobonOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022", "STANDORTABFRAGE"]
          },
          "sobonBerechnung": { "$ref": "#/components/schemas/SobonBerechnung" },
          "stammdatenGueltigAb": { "type": "string", "format": "date" },
          "anmerkung": { "type": "string" },
          "bedarfsmeldungFachreferate": { "type": "array", "items": { "type": "string" } },
          "bedarfsmeldungAbfrageersteller": { "type": "array", "items": { "type": "string" } },
          "bauabschnitte": { "type": "array", "items": { "type": "string" } },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauKita": { "type": "boolean" },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauSchule": { "type": "boolean" },
          "hinweisVersorgung": { "type": "string" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          }
        }
      },
      "AbfragevarianteWeiteresVerfahrenRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "satzungsbeschluss": { "type": "string", "format": "date" },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "type": "string" },
          "realisierungVon": { "type": "integer", "format": "int32" },
          "gfWohnenGesamt": { "type": "number" },
          "gfWohnenBaurechtlichGenehmigt": { "type": "number" },
          "gfWohnenBaurechtlichFestgesetzt": { "type": "number" },
          "gfWohnenSobonUrsaechlich": { "type": "number" },
          "gfWohnenBestandswohnbaurecht": { "type": "number" },
          "gfWohnenSonderwohnformen": { "type": "boolean" },
          "gfWohnenStudentischesWohnen": { "type": "number" },
          "gfWohnenSeniorinnenWohnen": { "type": "number" },
          "gfWohnenGenossenschaftlichesWohnen": { "type": "number" },
          "gfWohnenWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "number" },
          "weGesamt": { "type": "integer", "format": "int32" },
          "weBaurechtlichGenehmigt": { "type": "integer", "format": "int32" },
          "weBaurechtlichFestgesetzt": { "type": "integer", "format": "int32" },
          "weSonderwohnformen": { "type": "boolean" },
          "weStudentischesWohnen": { "type": "integer", "format": "int32" },
          "weSeniorinnenWohnen": { "type": "integer", "format": "int32" },
          "weGenossenschaftlichesWohnen": { "type": "integer", "format": "int32" },
          "weWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "integer", "format": "int32" },
          "sobonOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022", "STANDORTABFRAGE"]
          },
          "sobonBerechnung": { "$ref": "#/components/schemas/SobonBerechnung" },
          "stammdatenGueltigAb": { "type": "string", "format": "date" },
          "anmerkung": { "type": "string" },
          "bedarfsmeldungFachreferate": { "type": "array", "items": { "type": "string" } },
          "bedarfsmeldungAbfrageersteller": { "type": "array", "items": { "type": "string" } },
          "bauabschnitte": { "type": "array", "items": { "type": "string" } },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauKita": { "type": "boolean" },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauSchule": { "type": "boolean" },
          "hinweisVersorgung": { "type": "string" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          }
        }
      },
      "DokumentResponse": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "filePath": { "$ref": "#/components/schemas/Filepath" },
          "artDokument": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "EMAIL",
              "BESCHLUSS",
              "ANLAGE",
              "ANTRAG",
              "KARTE",
              "STELLUNGNAHME",
              "DATEN_BAUVORHABEN",
              "GEBAEUDEPLAN",
              "BERECHNUNG",
              "INFOS_BAUGENEHMIGUNG",
              "PRESSEARTIKEL",
              "INFOS_ZU_SOZ_INFRASTRUKTUR",
              "PROTOKOLL",
              "SONSTIGES"
            ]
          },
          "sizeInBytes": { "type": "integer", "format": "int64" },
          "typDokument": { "type": "string" }
        }
      },
      "FoerdermixStammRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "foerdermix": { "$ref": "#/components/schemas/Foerdermix" }
        }
      },
      "GlobalCounterRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "counterType": { "type": "string", "enum": ["NUMMER_BAUVORHABEN"] },
          "counter": { "type": "integer", "format": "int64" }
        }
      },
      "IdealtypischeBaurateRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "von": { "type": "number" },
          "bisExklusiv": { "type": "number" },
          "typ": { "type": "string", "enum": ["ANZAHL_WOHNEINHEITEN_GESAMT", "GESCHOSSFLAECHE_WOHNEN_GESAMT"] },
          "jahresraten": { "type": "array", "items": { "$ref": "#/components/schemas/Jahresrate" } }
        }
      },
      "InfrastruktureinrichtungRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "bearbeitendePerson": { "$ref": "#/components/schemas/BearbeitendePerson" },
          "lfdNr": { "type": "integer", "format": "int64" },
          "bauvorhaben": { "type": "string" },
          "adresse": { "$ref": "#/components/schemas/Adresse" },
          "verortung": { "$ref": "#/components/schemas/VerortungPoint" },
          "nameEinrichtung": { "type": "string" },
          "fertigstellungsjahr": { "type": "integer", "format": "int32" },
          "status": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "UNGESICHERTE_PLANUNG",
              "GESICHERTE_PLANUNG_NEUE_EINR",
              "GESICHERTE_PLANUNG_ERW_PLAETZE_BEST_EINR",
              "GESICHERTE_PLANUNG_TF_KITA_STANDORT",
              "GESICHERTE_PLANUNG_REDUZIERUNG_PLAETZE",
              "GESICHERTE_PLANUNG_INTERIMSSTANDORT",
              "UNGESICHERTE_PLANUNG_TF_KITA_STANDORT",
              "BESTAND"
            ]
          },
          "flaecheGesamtgrundstueck": { "type": "number" },
          "flaecheTeilgrundstueck": { "type": "number" },
          "infrastruktureinrichtungTyp": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "KINDERKRIPPE",
              "KINDERGARTEN",
              "GS_NACHMITTAG_BETREUUNG",
              "HAUS_FUER_KINDER",
              "GRUNDSCHULE",
              "MITTELSCHULE"
            ]
          }
        }
      },
      "KommentarRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "datum": { "type": "string" },
          "text": { "type": "string" },
          "bauvorhaben": { "type": "string" },
          "infrastruktureinrichtung": { "type": "string" },
          "dokumente": { "type": "array", "items": { "type": "string" } }
        }
      },
      "SobonOrientierungswertSozialeInfrastrukturRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "gueltigAb": { "type": "string", "format": "date" },
          "einrichtungstyp": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "KINDERKRIPPE",
              "KINDERGARTEN",
              "GS_NACHMITTAG_BETREUUNG",
              "HAUS_FUER_KINDER",
              "GRUNDSCHULE",
              "MITTELSCHULE"
            ]
          },
          "altersklasse": {
            "type": "string",
            "enum": [
              "NULL_ZWEI",
              "DREI_SECHSEINHALB",
              "SECHSEINHALB_NEUNEINHALB",
              "ZEHNEINHALB_FUENFZEHN",
              "SECHSZEHN_ACHTZEHN",
              "ALLE_EWO"
            ]
          },
          "foerderartBezeichnung": { "type": "string" },
          "einwohnerJahr1NachErsterstellung": { "type": "number" },
          "einwohnerJahr2NachErsterstellung": { "type": "number" },
          "einwohnerJahr3NachErsterstellung": { "type": "number" },
          "einwohnerJahr4NachErsterstellung": { "type": "number" },
          "einwohnerJahr5NachErsterstellung": { "type": "number" },
          "einwohnerJahr6NachErsterstellung": { "type": "number" },
          "einwohnerJahr7NachErsterstellung": { "type": "number" },
          "einwohnerJahr8NachErsterstellung": { "type": "number" },
          "einwohnerJahr9NachErsterstellung": { "type": "number" },
          "einwohnerJahr10NachErsterstellung": { "type": "number" },
          "stammwertArbeitsgruppe": { "type": "number" }
        }
      },
      "StaedtebaulicheOrientierungswertRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "gueltigAb": { "type": "string", "format": "date" },
          "foerderartBezeichnung": { "type": "string" },
          "durchschnittlicheGrundflaeche": { "type": "integer", "format": "int64" },
          "belegungsdichte": { "type": "number" }
        }
      },
      "UmlegungFoerderartenRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "bezeichnung": { "type": "string" },
          "gueltigAb": { "type": "string", "format": "date" },
          "umlegungsschluessel": { "$ref": "#/components/schemas/Umlegungsschluessel" }
        }
      },
      "VersorgungsquoteGruppenstaerkeRequestBody": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "gueltigAb": { "type": "string", "format": "date" },
          "infrastruktureinrichtungTyp": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "KINDERKRIPPE",
              "KINDERGARTEN",
              "GS_NACHMITTAG_BETREUUNG",
              "HAUS_FUER_KINDER",
              "GRUNDSCHULE",
              "MITTELSCHULE"
            ]
          },
          "versorgungsquotePlanungsursaechlich": { "type": "number" },
          "versorgungsquoteSobonUrsaechlich": { "type": "number" },
          "gruppenstaerke": { "type": "integer", "format": "int32" }
        }
      },
      "FoerderartDto": {
        "type": "object",
        "properties": { "bezeichnung": { "type": "string" }, "anteilProzent": { "type": "number" } }
      },
      "FoerdermixDto": {
        "type": "object",
        "properties": {
          "bezeichnungJahr": { "maxLength": 255, "minLength": 0, "type": "string" },
          "bezeichnung": { "maxLength": 80, "minLength": 0, "type": "string" },
          "foerderarten": { "type": "array", "items": { "$ref": "#/components/schemas/FoerderartDto" } }
        }
      },
      "FoerdermixStammDto": {
        "required": ["foerdermix"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "foerdermix": { "$ref": "#/components/schemas/FoerdermixDto" }
        }
      },
      "InformationResponseDto": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "enum": ["ERROR", "WARNING", "INFORMATION_SUCCESS", "INFORMATION_NEUTRAL"] },
          "timestamp": { "type": "string", "format": "date-time" },
          "traceId": { "type": "string" },
          "spanId": { "type": "string" },
          "httpStatus": { "type": "integer", "format": "int32" },
          "originalException": { "type": "string" },
          "messages": { "type": "array", "items": { "type": "string" } }
        }
      },
      "DokumentDto": {
        "required": ["artDokument", "filePath", "sizeInBytes", "typDokument"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "filePath": { "$ref": "#/components/schemas/FilepathDto" },
          "artDokument": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "EMAIL",
              "BESCHLUSS",
              "ANLAGE",
              "ANTRAG",
              "KARTE",
              "STELLUNGNAHME",
              "DATEN_BAUVORHABEN",
              "GEBAEUDEPLAN",
              "BERECHNUNG",
              "INFOS_BAUGENEHMIGUNG",
              "PRESSEARTIKEL",
              "INFOS_ZU_SOZ_INFRASTRUKTUR",
              "PROTOKOLL",
              "SONSTIGES"
            ]
          },
          "sizeInBytes": { "minimum": 0, "type": "integer", "format": "int64" },
          "typDokument": { "maxLength": 255, "minLength": 0, "type": "string" }
        }
      },
      "FilepathDto": {
        "required": ["pathToFile"],
        "type": "object",
        "properties": {
          "pathToFile": {
            "type": "string",
            "description": "Der Dateipfad muss absolut, ohne Angabe des Buckets und ohne führenden Pfadtrenner angegeben werden. Beispiel: outerFolder/innerFolder/thefile.pdf"
          }
        }
      },
      "KommentarDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "datum": { "maxLength": 32, "minLength": 0, "type": "string" },
          "text": { "type": "string" },
          "bauvorhaben": { "type": "string", "format": "uuid" },
          "infrastruktureinrichtung": { "type": "string", "format": "uuid" },
          "dokumente": { "type": "array", "items": { "$ref": "#/components/schemas/DokumentDto" } }
        }
      },
      "AdresseDto": {
        "type": "object",
        "properties": {
          "plz": { "maxLength": 255, "minLength": 0, "type": "string" },
          "ort": { "maxLength": 255, "minLength": 0, "type": "string" },
          "strasse": { "maxLength": 255, "minLength": 0, "type": "string" },
          "hausnummer": { "maxLength": 255, "minLength": 0, "type": "string" },
          "coordinate": { "$ref": "#/components/schemas/Wgs84Dto" },
          "angabeLageErgaenzendeAdressinformation": { "maxLength": 255, "minLength": 0, "type": "string" }
        }
      },
      "BearbeitendePersonDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "organisationseinheit": { "type": "string" }
        }
      },
      "BezirksteilDto": {
        "required": ["multiPolygon"],
        "type": "object",
        "properties": {
          "nummer": { "type": "string" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryDto" }
        }
      },
      "FlurstueckDto": {
        "required": ["multiPolygon"],
        "type": "object",
        "properties": {
          "nummer": { "type": "string" },
          "flaecheQm": { "type": "number" },
          "zaehler": { "type": "integer", "format": "int64" },
          "nenner": { "type": "integer", "format": "int64" },
          "eigentumsart": { "type": "integer", "format": "int64" },
          "eigentumsartBedeutung": { "type": "string" },
          "gemarkungNummer": { "type": "number" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryDto" }
        }
      },
      "GemarkungDto": {
        "required": ["flurstuecke", "multiPolygon"],
        "type": "object",
        "properties": {
          "nummer": { "type": "number" },
          "name": { "type": "string" },
          "flurstuecke": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/FlurstueckDto" }
          },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryDto" }
        }
      },
      "GrundschuleDto": {
        "required": ["nameEinrichtung", "schule", "status"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/InfrastruktureinrichtungDto" },
          { "type": "object", "properties": { "schule": { "$ref": "#/components/schemas/SchuleDto" } } }
        ]
      },
      "GrundschulsprengelDto": {
        "required": ["multiPolygon"],
        "type": "object",
        "properties": {
          "nummer": { "type": "integer", "format": "int64" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryDto" }
        }
      },
      "GsNachmittagBetreuungDto": {
        "required": ["anzahlHortGruppen", "anzahlHortPlaetze", "nameEinrichtung", "status"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/InfrastruktureinrichtungDto" },
          {
            "type": "object",
            "properties": {
              "artGsNachmittagBetreuung": {
                "type": "string",
                "enum": [
                  "HORT",
                  "KOOPERATIVER_GANZTAG_FLEXIBLE_VARIANTE",
                  "KOOPERATIVER_GANZTAG_RHYTHMISIERTE_VARIANTE",
                  "TAGESHEIM",
                  "MITTAGSBETREUUNG"
                ]
              },
              "anzahlHortPlaetze": { "minimum": 0, "type": "integer", "format": "int32" },
              "anzahlHortGruppen": { "minimum": 0, "type": "integer", "format": "int32" },
              "wohnungsnaheHortPlaetze": { "minimum": 0, "type": "integer", "format": "int32" },
              "einrichtungstraeger": {
                "type": "string",
                "enum": [
                  "UNSPECIFIED",
                  "STAEDTISCHE_EINRICHTUNG",
                  "EINRICHTUNG_BETRIEBSTRAEGERSCHAFT",
                  "FREIE_GEMEINNUETZIGE_SONSTIGE",
                  "EINRICHTUNG_GESAMTSTAEDTISCH",
                  "ELTERN_KIND_INITIATIVE",
                  "STAATLICHE_EINRICHTUNG",
                  "PRIVATE_TRAEGERSCHAFT",
                  "KIRCHLICHE_TRAEGERSCHAFT"
                ]
              }
            }
          }
        ]
      },
      "HausFuerKinderDto": {
        "required": ["nameEinrichtung", "status"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/InfrastruktureinrichtungDto" },
          {
            "type": "object",
            "properties": {
              "anzahlKinderkrippePlaetze": { "type": "integer", "format": "int32" },
              "anzahlKindergartenPlaetze": { "type": "integer", "format": "int32" },
              "anzahlHortPlaetze": { "type": "integer", "format": "int32" },
              "anzahlKinderkrippeGruppen": { "type": "integer", "format": "int32" },
              "anzahlKindergartenGruppen": { "type": "integer", "format": "int32" },
              "anzahlHortGruppen": { "type": "integer", "format": "int32" },
              "wohnungsnaheKinderkrippePlaetze": { "type": "integer", "format": "int32" },
              "wohnungsnaheKindergartenPlaetze": { "type": "integer", "format": "int32" },
              "wohnungsnaheHortPlaetze": { "type": "integer", "format": "int32" },
              "einrichtungstraeger": {
                "type": "string",
                "enum": [
                  "UNSPECIFIED",
                  "STAEDTISCHE_EINRICHTUNG",
                  "EINRICHTUNG_BETRIEBSTRAEGERSCHAFT",
                  "FREIE_GEMEINNUETZIGE_SONSTIGE",
                  "EINRICHTUNG_GESAMTSTAEDTISCH",
                  "ELTERN_KIND_INITIATIVE",
                  "STAATLICHE_EINRICHTUNG",
                  "PRIVATE_TRAEGERSCHAFT",
                  "KIRCHLICHE_TRAEGERSCHAFT"
                ]
              }
            }
          }
        ]
      },
      "InfrastruktureinrichtungDto": {
        "required": ["nameEinrichtung", "status"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "bearbeitendePerson": { "$ref": "#/components/schemas/BearbeitendePersonDto" },
          "infrastruktureinrichtungTyp": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "KINDERKRIPPE",
              "KINDERGARTEN",
              "GS_NACHMITTAG_BETREUUNG",
              "HAUS_FUER_KINDER",
              "GRUNDSCHULE",
              "MITTELSCHULE"
            ]
          },
          "lfdNr": { "type": "integer", "format": "int64" },
          "bauvorhaben": { "type": "string", "format": "uuid" },
          "adresse": { "$ref": "#/components/schemas/AdresseDto" },
          "verortung": { "$ref": "#/components/schemas/VerortungPointDto" },
          "nameEinrichtung": { "maxLength": 255, "minLength": 0, "type": "string" },
          "fertigstellungsjahr": { "maximum": 2100, "minimum": 1900, "type": "integer", "format": "int32" },
          "status": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "UNGESICHERTE_PLANUNG",
              "GESICHERTE_PLANUNG_NEUE_EINR",
              "GESICHERTE_PLANUNG_ERW_PLAETZE_BEST_EINR",
              "GESICHERTE_PLANUNG_TF_KITA_STANDORT",
              "GESICHERTE_PLANUNG_REDUZIERUNG_PLAETZE",
              "GESICHERTE_PLANUNG_INTERIMSSTANDORT",
              "UNGESICHERTE_PLANUNG_TF_KITA_STANDORT",
              "BESTAND"
            ]
          },
          "flaecheGesamtgrundstueck": { "type": "number" },
          "flaecheTeilgrundstueck": { "type": "number" }
        },
        "description": "InfrastruktureinrichtungDto",
        "discriminator": {
          "propertyName": "infrastruktureinrichtungTyp",
          "mapping": {
            "GRUNDSCHULE": "#/components/schemas/GrundschuleDto",
            "GS_NACHMITTAG_BETREUUNG": "#/components/schemas/GsNachmittagBetreuungDto",
            "HAUS_FUER_KINDER": "#/components/schemas/HausFuerKinderDto",
            "KINDERGARTEN": "#/components/schemas/KindergartenDto",
            "KINDERKRIPPE": "#/components/schemas/KinderkrippeDto",
            "MITTELSCHULE": "#/components/schemas/MittelschuleDto"
          }
        }
      },
      "KindergartenDto": {
        "required": ["anzahlKindergartenGruppen", "anzahlKindergartenPlaetze", "nameEinrichtung", "status"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/InfrastruktureinrichtungDto" },
          {
            "type": "object",
            "properties": {
              "anzahlKindergartenPlaetze": { "type": "integer", "format": "int32" },
              "anzahlKindergartenGruppen": { "type": "integer", "format": "int32" },
              "wohnungsnaheKindergartenPlaetze": { "type": "integer", "format": "int32" },
              "einrichtungstraeger": {
                "type": "string",
                "enum": [
                  "UNSPECIFIED",
                  "STAEDTISCHE_EINRICHTUNG",
                  "EINRICHTUNG_BETRIEBSTRAEGERSCHAFT",
                  "FREIE_GEMEINNUETZIGE_SONSTIGE",
                  "EINRICHTUNG_GESAMTSTAEDTISCH",
                  "ELTERN_KIND_INITIATIVE",
                  "STAATLICHE_EINRICHTUNG",
                  "PRIVATE_TRAEGERSCHAFT",
                  "KIRCHLICHE_TRAEGERSCHAFT"
                ]
              }
            }
          }
        ]
      },
      "KinderkrippeDto": {
        "required": ["anzahlKinderkrippeGruppen", "anzahlKinderkrippePlaetze", "nameEinrichtung", "status"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/InfrastruktureinrichtungDto" },
          {
            "type": "object",
            "properties": {
              "anzahlKinderkrippePlaetze": { "type": "integer", "format": "int32" },
              "anzahlKinderkrippeGruppen": { "type": "integer", "format": "int32" },
              "wohnungsnaheKinderkrippePlaetze": { "type": "integer", "format": "int32" },
              "einrichtungstraeger": {
                "type": "string",
                "enum": [
                  "UNSPECIFIED",
                  "STAEDTISCHE_EINRICHTUNG",
                  "EINRICHTUNG_BETRIEBSTRAEGERSCHAFT",
                  "FREIE_GEMEINNUETZIGE_SONSTIGE",
                  "EINRICHTUNG_GESAMTSTAEDTISCH",
                  "ELTERN_KIND_INITIATIVE",
                  "STAATLICHE_EINRICHTUNG",
                  "PRIVATE_TRAEGERSCHAFT",
                  "KIRCHLICHE_TRAEGERSCHAFT"
                ]
              }
            }
          }
        ]
      },
      "KitaplanungsbereichDto": {
        "required": ["multiPolygon"],
        "type": "object",
        "properties": {
          "kitaPlb": { "type": "integer", "format": "int64" },
          "kitaPlbT": { "type": "string" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryDto" }
        }
      },
      "MittelschuleDto": {
        "required": ["nameEinrichtung", "schule", "status"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/InfrastruktureinrichtungDto" },
          { "type": "object", "properties": { "schule": { "$ref": "#/components/schemas/SchuleDto" } } }
        ]
      },
      "MittelschulsprengelDto": {
        "required": ["multiPolygon"],
        "type": "object",
        "properties": {
          "nummer": { "type": "integer", "format": "int64" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryModel" }
        }
      },
      "MultiPolygonGeometryDto": {
        "required": ["coordinates", "type"],
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": { "type": "array", "items": { "type": "array", "items": { "type": "number" } } }
            }
          }
        }
      },
      "MultiPolygonGeometryModel": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": { "type": "array", "items": { "type": "array", "items": { "type": "number" } } }
            }
          }
        }
      },
      "PointGeometryDto": {
        "required": ["coordinates", "type"],
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "coordinates": {
            "maxItems": 2,
            "minItems": 2,
            "type": "array",
            "description": "Die Punktkoordinate ([x,y] bzw. [longitude, latitude]) im Standard EPSG:4326 (WGS84).",
            "items": {
              "type": "number",
              "description": "Die Punktkoordinate ([x,y] bzw. [longitude, latitude]) im Standard EPSG:4326 (WGS84)."
            }
          }
        }
      },
      "SchuleDto": {
        "required": ["anzahlKlassen", "anzahlPlaetze"],
        "type": "object",
        "properties": {
          "anzahlKlassen": { "type": "integer", "format": "int32" },
          "anzahlPlaetze": { "type": "integer", "format": "int32" },
          "einrichtungstraeger": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "STAEDTISCHE_EINRICHTUNG",
              "EINRICHTUNG_BETRIEBSTRAEGERSCHAFT",
              "FREIE_GEMEINNUETZIGE_SONSTIGE",
              "EINRICHTUNG_GESAMTSTAEDTISCH",
              "ELTERN_KIND_INITIATIVE",
              "STAATLICHE_EINRICHTUNG",
              "PRIVATE_TRAEGERSCHAFT",
              "KIRCHLICHE_TRAEGERSCHAFT"
            ]
          }
        }
      },
      "StadtbezirkDto": {
        "required": ["multiPolygon"],
        "type": "object",
        "properties": {
          "nummer": { "type": "string" },
          "name": { "type": "string" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryDto" }
        }
      },
      "VerortungPointDto": {
        "required": ["point"],
        "type": "object",
        "properties": {
          "stadtbezirke": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/StadtbezirkDto" }
          },
          "bezirksteile": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/BezirksteilDto" }
          },
          "viertel": { "uniqueItems": true, "type": "array", "items": { "$ref": "#/components/schemas/ViertelDto" } },
          "gemarkungen": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/GemarkungDto" }
          },
          "kitaplanungsbereiche": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/KitaplanungsbereichDto" }
          },
          "grundschulsprengel": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/GrundschulsprengelDto" }
          },
          "mittelschulsprengel": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/MittelschulsprengelDto" }
          },
          "point": { "$ref": "#/components/schemas/PointGeometryDto" }
        }
      },
      "ViertelDto": {
        "required": ["multiPolygon"],
        "type": "object",
        "properties": {
          "nummer": { "type": "string" },
          "flaecheQm": { "type": "number" },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryDto" }
        }
      },
      "Wgs84Dto": {
        "required": ["latitude", "longitude"],
        "type": "object",
        "properties": {
          "latitude": { "type": "number", "format": "double" },
          "longitude": { "type": "number", "format": "double" }
        }
      },
      "BauvorhabenDto": {
        "required": ["artFnp", "nameVorhaben", "sobonRelevant", "standVerfahren", "wesentlicheRechtsgrundlage"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "bearbeitendePerson": { "$ref": "#/components/schemas/BearbeitendePersonDto" },
          "nameVorhaben": { "maxLength": 255, "minLength": 0, "type": "string" },
          "grundstuecksgroesse": { "type": "number" },
          "standVerfahren": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "VORBEREITUNG_ECKDATENBESCHLUSS",
              "VORBEREITUNG_WETTBEWERBAUSLOBUNG",
              "VORBEREITUNG_AUFSTELLUNGSBESCHLUSS",
              "VORBEREITUNG_BILLIGUNGSBESCHLUSS_STAEDTEBAULICHER_VERTRAG",
              "VORBEREITUNG_SATZUNGSBESCHLUSS",
              "VORLIEGENDER_SATZUNGSBESCHLUSS",
              "RECHTSVERBINDLICHKEIT_AMTSBLATT",
              "AUFTEILUNGSPLAN",
              "VORBEREITUNG_VORBESCHEID",
              "VORBEREITUNG_BAUGENEHMIGUNG",
              "VORABFRAGE_OHNE_KONKRETEN_STAND",
              "STRUKTURKONZEPT",
              "RAHMENPLANUNG",
              "POTENTIALUNTERSUCHUNG",
              "STAEDTEBAULICHE_SANIERUNGSMASSNAHME",
              "STAEDTEBAULICHE_ENTWICKLUNGSMASSNAHME",
              "INFO_FEHLT",
              "FREIE_EINGABE",
              "STANDORTABFRAGE"
            ]
          },
          "standVerfahrenFreieEingabe": { "maxLength": 1000, "minLength": 0, "type": "string" },
          "bauvorhabenNummer": { "type": "string" },
          "adresse": { "$ref": "#/components/schemas/AdresseDto" },
          "verortung": { "$ref": "#/components/schemas/VerortungMultiPolygonDto" },
          "bebauungsplannummer": { "maxLength": 255, "minLength": 0, "type": "string" },
          "fisNummer": { "maxLength": 255, "minLength": 0, "type": "string" },
          "anmerkung": { "maxLength": 1000, "minLength": 0, "type": "string" },
          "sobonRelevant": { "$ref": "#/components/schemas/UncertainBoolean" },
          "sobonJahr": {
            "type": "string",
            "enum": [
              "JAHR_1995",
              "JAHR_1997",
              "JAHR_2001",
              "JAHR_2006",
              "JAHR_2012",
              "JAHR_2017",
              "JAHR_2017_PLUS",
              "JAHR_2021"
            ]
          },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "maxLength": 1000, "minLength": 0, "type": "string" },
          "artFnp": {
            "type": "array",
            "items": { "type": "string", "enum": ["UNSPECIFIED", "WR", "WA", "MU", "MK", "MI", "GE", "INFO_FEHLT"] }
          },
          "dokumente": { "type": "array", "items": { "$ref": "#/components/schemas/DokumentDto" } },
          "relevanteAbfragevariante": { "type": "string", "format": "uuid" }
        }
      },
      "VerortungMultiPolygonDto": {
        "required": ["multiPolygon"],
        "type": "object",
        "properties": {
          "stadtbezirke": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/StadtbezirkDto" }
          },
          "bezirksteile": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/BezirksteilDto" }
          },
          "viertel": { "uniqueItems": true, "type": "array", "items": { "$ref": "#/components/schemas/ViertelDto" } },
          "gemarkungen": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/GemarkungDto" }
          },
          "kitaplanungsbereiche": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/KitaplanungsbereichDto" }
          },
          "grundschulsprengel": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/GrundschulsprengelDto" }
          },
          "mittelschulsprengel": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/MittelschulsprengelDto" }
          },
          "multiPolygon": { "$ref": "#/components/schemas/MultiPolygonGeometryDto" }
        }
      },
      "UtmDto": {
        "required": ["east", "north"],
        "type": "object",
        "properties": {
          "zone": { "maxLength": 255, "minLength": 0, "type": "string" },
          "north": { "type": "number", "format": "double" },
          "east": { "type": "number", "format": "double" }
        }
      },
      "SearchQueryDto": {
        "required": [
          "searchQuery",
          "selectBaugenehmigungsverfahren",
          "selectBauleitplanverfahren",
          "selectBauvorhaben",
          "selectGrundschule",
          "selectGsNachmittagBetreuung",
          "selectHausFuerKinder",
          "selectKindergarten",
          "selectKinderkrippe",
          "selectMittelschule",
          "selectWeiteresVerfahren"
        ],
        "type": "object",
        "properties": {
          "searchQuery": { "type": "string" },
          "selectBauleitplanverfahren": { "type": "boolean" },
          "selectBaugenehmigungsverfahren": { "type": "boolean" },
          "selectWeiteresVerfahren": { "type": "boolean" },
          "selectBauvorhaben": { "type": "boolean" },
          "selectGrundschule": { "type": "boolean" },
          "selectGsNachmittagBetreuung": { "type": "boolean" },
          "selectHausFuerKinder": { "type": "boolean" },
          "selectKindergarten": { "type": "boolean" },
          "selectKinderkrippe": { "type": "boolean" },
          "selectMittelschule": { "type": "boolean" },
          "page": { "type": "integer", "format": "int32" },
          "pageSize": { "type": "integer", "format": "int32" }
        }
      },
      "SuchwortSuggestionsDto": {
        "type": "object",
        "properties": { "suchwortSuggestions": { "type": "array", "items": { "type": "string" } } }
      },
      "SearchQueryAndSortingDto": {
        "required": [
          "searchQuery",
          "selectBaugenehmigungsverfahren",
          "selectBauleitplanverfahren",
          "selectBauvorhaben",
          "selectGrundschule",
          "selectGsNachmittagBetreuung",
          "selectHausFuerKinder",
          "selectKindergarten",
          "selectKinderkrippe",
          "selectMittelschule",
          "selectWeiteresVerfahren",
          "sortBy",
          "sortOrder"
        ],
        "type": "object",
        "properties": {
          "searchQuery": { "type": "string" },
          "selectBauleitplanverfahren": { "type": "boolean" },
          "selectBaugenehmigungsverfahren": { "type": "boolean" },
          "selectWeiteresVerfahren": { "type": "boolean" },
          "selectBauvorhaben": { "type": "boolean" },
          "selectGrundschule": { "type": "boolean" },
          "selectGsNachmittagBetreuung": { "type": "boolean" },
          "selectHausFuerKinder": { "type": "boolean" },
          "selectKindergarten": { "type": "boolean" },
          "selectKinderkrippe": { "type": "boolean" },
          "selectMittelschule": { "type": "boolean" },
          "page": { "type": "integer", "format": "int32" },
          "pageSize": { "type": "integer", "format": "int32" },
          "sortBy": { "type": "string", "enum": ["NAME", "CREATED_DATE_TIME", "LAST_MODIFIED_DATE_TIME"] },
          "sortOrder": { "type": "string", "enum": ["ASC", "DESC"] }
        }
      },
      "AbfrageSearchResultDto": {
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/SearchResultDto" },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "uuid" },
              "artAbfrage": {
                "type": "string",
                "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
              },
              "name": { "type": "string" },
              "stadtbezirke": {
                "uniqueItems": true,
                "type": "array",
                "items": { "$ref": "#/components/schemas/StadtbezirkDto" }
              },
              "statusAbfrage": { "$ref": "#/components/schemas/StatusAbfrage" },
              "fristBearbeitung": { "type": "string", "format": "date" },
              "standVerfahren": {
                "type": "string",
                "enum": [
                  "UNSPECIFIED",
                  "VORBEREITUNG_ECKDATENBESCHLUSS",
                  "VORBEREITUNG_WETTBEWERBAUSLOBUNG",
                  "VORBEREITUNG_AUFSTELLUNGSBESCHLUSS",
                  "VORBEREITUNG_BILLIGUNGSBESCHLUSS_STAEDTEBAULICHER_VERTRAG",
                  "VORBEREITUNG_SATZUNGSBESCHLUSS",
                  "VORLIEGENDER_SATZUNGSBESCHLUSS",
                  "RECHTSVERBINDLICHKEIT_AMTSBLATT",
                  "AUFTEILUNGSPLAN",
                  "VORBEREITUNG_VORBESCHEID",
                  "VORBEREITUNG_BAUGENEHMIGUNG",
                  "VORABFRAGE_OHNE_KONKRETEN_STAND",
                  "STRUKTURKONZEPT",
                  "RAHMENPLANUNG",
                  "POTENTIALUNTERSUCHUNG",
                  "STAEDTEBAULICHE_SANIERUNGSMASSNAHME",
                  "STAEDTEBAULICHE_ENTWICKLUNGSMASSNAHME",
                  "INFO_FEHLT",
                  "FREIE_EINGABE",
                  "STANDORTABFRAGE"
                ]
              },
              "createdDateTime": { "type": "string", "format": "date-time" },
              "bauvorhaben": { "type": "string", "format": "uuid" }
            }
          }
        ]
      },
      "BauvorhabenSearchResultDto": {
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/SearchResultDto" },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "uuid" },
              "nameVorhaben": { "type": "string" },
              "stadtbezirke": {
                "uniqueItems": true,
                "type": "array",
                "items": { "$ref": "#/components/schemas/StadtbezirkDto" }
              },
              "grundstuecksgroesse": { "type": "number" },
              "standVerfahren": {
                "type": "string",
                "enum": [
                  "UNSPECIFIED",
                  "VORBEREITUNG_ECKDATENBESCHLUSS",
                  "VORBEREITUNG_WETTBEWERBAUSLOBUNG",
                  "VORBEREITUNG_AUFSTELLUNGSBESCHLUSS",
                  "VORBEREITUNG_BILLIGUNGSBESCHLUSS_STAEDTEBAULICHER_VERTRAG",
                  "VORBEREITUNG_SATZUNGSBESCHLUSS",
                  "VORLIEGENDER_SATZUNGSBESCHLUSS",
                  "RECHTSVERBINDLICHKEIT_AMTSBLATT",
                  "AUFTEILUNGSPLAN",
                  "VORBEREITUNG_VORBESCHEID",
                  "VORBEREITUNG_BAUGENEHMIGUNG",
                  "VORABFRAGE_OHNE_KONKRETEN_STAND",
                  "STRUKTURKONZEPT",
                  "RAHMENPLANUNG",
                  "POTENTIALUNTERSUCHUNG",
                  "STAEDTEBAULICHE_SANIERUNGSMASSNAHME",
                  "STAEDTEBAULICHE_ENTWICKLUNGSMASSNAHME",
                  "INFO_FEHLT",
                  "FREIE_EINGABE",
                  "STANDORTABFRAGE"
                ]
              },
              "umgriff": { "$ref": "#/components/schemas/MultiPolygonGeometryDto" }
            }
          }
        ]
      },
      "InfrastruktureinrichtungSearchResultDto": {
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/SearchResultDto" },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "uuid" },
              "nameEinrichtung": { "type": "string" },
              "infrastruktureinrichtungTyp": {
                "type": "string",
                "enum": [
                  "UNSPECIFIED",
                  "KINDERKRIPPE",
                  "KINDERGARTEN",
                  "GS_NACHMITTAG_BETREUUNG",
                  "HAUS_FUER_KINDER",
                  "GRUNDSCHULE",
                  "MITTELSCHULE"
                ]
              }
            }
          }
        ]
      },
      "SearchResultDto": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "enum": ["ABFRAGE", "BAUVORHABEN", "INFRASTRUKTUREINRICHTUNG"] },
          "coordinate": { "$ref": "#/components/schemas/Wgs84Dto" }
        },
        "description": "SearchResultDto",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "ABFRAGE": "#/components/schemas/AbfrageSearchResultDto",
            "BAUVORHABEN": "#/components/schemas/BauvorhabenSearchResultDto",
            "INFRASTRUKTUREINRICHTUNG": "#/components/schemas/InfrastruktureinrichtungSearchResultDto"
          }
        }
      },
      "SearchResultsDto": {
        "type": "object",
        "properties": {
          "searchResults": {
            "type": "array",
            "items": {
              "oneOf": [
                { "$ref": "#/components/schemas/AbfrageSearchResultDto" },
                { "$ref": "#/components/schemas/BauvorhabenSearchResultDto" },
                { "$ref": "#/components/schemas/InfrastruktureinrichtungSearchResultDto" }
              ]
            }
          },
          "numberOfPages": { "type": "integer", "format": "int64" },
          "page": { "type": "integer", "format": "int64" }
        }
      },
      "PresignedUrlDto": {
        "type": "object",
        "properties": {
          "httpMethodToUse": { "type": "string", "description": "Die HTTP-Methode für den Request der Presigned-Url" },
          "url": { "type": "string", "description": "Die Presigned-Url" }
        }
      },
      "MimeTypeInformationDto": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "description": { "type": "string" },
          "acronym": { "type": "string" }
        }
      },
      "AbfrageAngelegtDto": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "artAbfrage": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "name": { "maxLength": 70, "minLength": 0, "type": "string" },
          "anmerkung": { "maxLength": 1000, "minLength": 0, "type": "string" },
          "bauvorhaben": { "type": "string", "format": "uuid" },
          "linkEakte": { "maxLength": 8000, "minLength": 0, "type": "string" }
        },
        "description": "AbfrageAngelegtDto",
        "discriminator": {
          "propertyName": "artAbfrage",
          "mapping": {
            "BAULEITPLANVERFAHREN": "#/components/schemas/BauleitplanverfahrenAngelegtDto",
            "BAUGENEHMIGUNGSVERFAHREN": "#/components/schemas/BaugenehmigungsverfahrenAngelegtDto",
            "WEITERES_VERFAHREN": "#/components/schemas/WeiteresVerfahrenAngelegtDto"
          }
        }
      },
      "AbfragevarianteBaugenehmigungsverfahrenAngelegtDto": {
        "required": [
          "abfragevariantenNr",
          "gfWohnenSonderwohnformen",
          "name",
          "realisierungVon",
          "weSonderwohnformen",
          "wesentlicheRechtsgrundlage"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "name": { "maxLength": 30, "minLength": 0, "type": "string" },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "maxLength": 1000, "minLength": 0, "type": "string" },
          "realisierungVon": { "maximum": 2100, "minimum": 1900, "type": "integer", "format": "int32" },
          "gfWohnenGesamt": { "type": "number" },
          "gfWohnenBaurechtlichGenehmigt": { "type": "number" },
          "gfWohnenBaurechtlichFestgesetzt": { "type": "number" },
          "gfWohnenBestandswohnbaurecht": { "type": "number" },
          "gfWohnenSonderwohnformen": { "type": "boolean" },
          "gfWohnenStudentischesWohnen": { "type": "number" },
          "gfWohnenSeniorinnenWohnen": { "type": "number" },
          "gfWohnenGenossenschaftlichesWohnen": { "type": "number" },
          "gfWohnenWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "number" },
          "weGesamt": { "type": "integer", "format": "int32" },
          "weBaurechtlichGenehmigt": { "type": "integer", "format": "int32" },
          "weBaurechtlichFestgesetzt": { "type": "integer", "format": "int32" },
          "weSonderwohnformen": { "type": "boolean" },
          "weStudentischesWohnen": { "type": "integer", "format": "int32" },
          "weSeniorinnenWohnen": { "type": "integer", "format": "int32" },
          "weGenossenschaftlichesWohnen": { "type": "integer", "format": "int32" },
          "weWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "integer", "format": "int32" },
          "bauabschnitte": { "type": "array", "items": { "$ref": "#/components/schemas/BauabschnittDto" } }
        }
      },
      "AbfragevarianteBauleitplanverfahrenAngelegtDto": {
        "required": [
          "abfragevariantenNr",
          "gfWohnenSonderwohnformen",
          "name",
          "realisierungVon",
          "weSonderwohnformen",
          "wesentlicheRechtsgrundlage"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "name": { "maxLength": 30, "minLength": 0, "type": "string" },
          "satzungsbeschluss": { "type": "string", "format": "date" },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "maxLength": 1000, "minLength": 0, "type": "string" },
          "realisierungVon": { "maximum": 2100, "minimum": 1900, "type": "integer", "format": "int32" },
          "gfWohnenGesamt": { "type": "number" },
          "gfWohnenSobonUrsaechlich": { "type": "number" },
          "gfWohnenBestandswohnbaurecht": { "type": "number" },
          "gfWohnenSonderwohnformen": { "type": "boolean" },
          "gfWohnenStudentischesWohnen": { "type": "number" },
          "gfWohnenSeniorinnenWohnen": { "type": "number" },
          "gfWohnenGenossenschaftlichesWohnen": { "type": "number" },
          "gfWohnenWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "number" },
          "weGesamt": { "type": "integer", "format": "int32" },
          "weSonderwohnformen": { "type": "boolean" },
          "weStudentischesWohnen": { "type": "integer", "format": "int32" },
          "weSeniorinnenWohnen": { "type": "integer", "format": "int32" },
          "weGenossenschaftlichesWohnen": { "type": "integer", "format": "int32" },
          "weWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "integer", "format": "int32" },
          "bauabschnitte": { "type": "array", "items": { "$ref": "#/components/schemas/BauabschnittDto" } }
        }
      },
      "AbfragevarianteWeiteresVerfahrenAngelegtDto": {
        "required": [
          "abfragevariantenNr",
          "gfWohnenSonderwohnformen",
          "name",
          "realisierungVon",
          "weSonderwohnformen",
          "wesentlicheRechtsgrundlage"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "name": { "maxLength": 30, "minLength": 0, "type": "string" },
          "satzungsbeschluss": { "type": "string", "format": "date" },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "maxLength": 1000, "minLength": 0, "type": "string" },
          "realisierungVon": { "maximum": 2100, "minimum": 1900, "type": "integer", "format": "int32" },
          "gfWohnenGesamt": { "type": "number" },
          "gfWohnenBaurechtlichGenehmigt": { "type": "number" },
          "gfWohnenBaurechtlichFestgesetzt": { "type": "number" },
          "gfWohnenSobonUrsaechlich": { "type": "number" },
          "gfWohnenBestandswohnbaurecht": { "type": "number" },
          "gfWohnenSonderwohnformen": { "type": "boolean" },
          "gfWohnenStudentischesWohnen": { "type": "number" },
          "gfWohnenSeniorinnenWohnen": { "type": "number" },
          "gfWohnenGenossenschaftlichesWohnen": { "type": "number" },
          "gfWohnenWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "number" },
          "weGesamt": { "type": "integer", "format": "int32" },
          "weBaurechtlichGenehmigt": { "type": "integer", "format": "int32" },
          "weBaurechtlichFestgesetzt": { "type": "integer", "format": "int32" },
          "weSonderwohnformen": { "type": "boolean" },
          "weStudentischesWohnen": { "type": "integer", "format": "int32" },
          "weSeniorinnenWohnen": { "type": "integer", "format": "int32" },
          "weGenossenschaftlichesWohnen": { "type": "integer", "format": "int32" },
          "weWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "integer", "format": "int32" },
          "bauabschnitte": { "type": "array", "items": { "$ref": "#/components/schemas/BauabschnittDto" } }
        }
      },
      "BauabschnittDto": {
        "required": ["baugebiete", "bezeichnung", "technical"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "bezeichnung": { "maxLength": 255, "minLength": 0, "type": "string" },
          "baugebiete": { "type": "array", "items": { "$ref": "#/components/schemas/BaugebietDto" } },
          "technical": { "type": "boolean" }
        }
      },
      "BaugebietDto": {
        "required": ["artBaulicheNutzung", "bauraten", "bezeichnung", "realisierungVon", "technical"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "bezeichnung": { "maxLength": 255, "minLength": 0, "type": "string" },
          "artBaulicheNutzung": {
            "type": "string",
            "enum": ["UNSPECIFIED", "WR", "WA", "MU", "MK", "MI", "GE", "INFO_FEHLT"]
          },
          "realisierungVon": { "maximum": 2100, "minimum": 1900, "type": "integer", "format": "int32" },
          "gfWohnenGeplant": { "type": "number" },
          "gfWohnenBaurechtlichGenehmigt": { "type": "number" },
          "gfWohnenBaurechtlichFestgesetzt": { "type": "number" },
          "weGeplant": { "type": "integer", "format": "int32" },
          "weBaurechtlichGenehmigt": { "type": "integer", "format": "int32" },
          "weBaurechtlichFestgesetzt": { "type": "integer", "format": "int32" },
          "bauraten": { "type": "array", "items": { "$ref": "#/components/schemas/BaurateDto" } },
          "technical": { "type": "boolean" }
        }
      },
      "BaugenehmigungsverfahrenAngelegtDto": {
        "required": ["abfragevariantenBaugenehmigungsverfahren", "fristBearbeitung", "name", "standVerfahren"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/AbfrageAngelegtDto" },
          {
            "type": "object",
            "properties": {
              "aktenzeichenProLbk": { "maxLength": 255, "minLength": 0, "type": "string" },
              "bebauungsplannummer": { "maxLength": 255, "minLength": 0, "type": "string" },
              "standVerfahren": {
                "type": "string",
                "enum": [
                  "UNSPECIFIED",
                  "VORBEREITUNG_ECKDATENBESCHLUSS",
                  "VORBEREITUNG_WETTBEWERBAUSLOBUNG",
                  "VORBEREITUNG_AUFSTELLUNGSBESCHLUSS",
                  "VORBEREITUNG_BILLIGUNGSBESCHLUSS_STAEDTEBAULICHER_VERTRAG",
                  "VORBEREITUNG_SATZUNGSBESCHLUSS",
                  "VORLIEGENDER_SATZUNGSBESCHLUSS",
                  "RECHTSVERBINDLICHKEIT_AMTSBLATT",
                  "AUFTEILUNGSPLAN",
                  "VORBEREITUNG_VORBESCHEID",
                  "VORBEREITUNG_BAUGENEHMIGUNG",
                  "VORABFRAGE_OHNE_KONKRETEN_STAND",
                  "STRUKTURKONZEPT",
                  "RAHMENPLANUNG",
                  "POTENTIALUNTERSUCHUNG",
                  "STAEDTEBAULICHE_SANIERUNGSMASSNAHME",
                  "STAEDTEBAULICHE_ENTWICKLUNGSMASSNAHME",
                  "INFO_FEHLT",
                  "FREIE_EINGABE",
                  "STANDORTABFRAGE"
                ]
              },
              "standVerfahrenFreieEingabe": { "maxLength": 1000, "minLength": 0, "type": "string" },
              "adresse": { "$ref": "#/components/schemas/AdresseDto" },
              "verortung": { "$ref": "#/components/schemas/VerortungMultiPolygonDto" },
              "dokumente": { "type": "array", "items": { "$ref": "#/components/schemas/DokumentDto" } },
              "fristBearbeitung": { "type": "string", "format": "date" },
              "abfragevariantenBaugenehmigungsverfahren": {
                "maxItems": 5,
                "minItems": 1,
                "type": "array",
                "items": { "$ref": "#/components/schemas/AbfragevarianteBaugenehmigungsverfahrenAngelegtDto" }
              }
            }
          }
        ]
      },
      "BauleitplanverfahrenAngelegtDto": {
        "required": [
          "abfragevariantenBauleitplanverfahren",
          "fristBearbeitung",
          "name",
          "offizielleMitzeichnung",
          "sobonRelevant",
          "standVerfahren"
        ],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/AbfrageAngelegtDto" },
          {
            "type": "object",
            "properties": {
              "bebauungsplannummer": { "maxLength": 255, "minLength": 0, "type": "string" },
              "sobonRelevant": { "$ref": "#/components/schemas/UncertainBoolean" },
              "sobonJahr": {
                "type": "string",
                "enum": [
                  "JAHR_1995",
                  "JAHR_1997",
                  "JAHR_2001",
                  "JAHR_2006",
                  "JAHR_2012",
                  "JAHR_2017",
                  "JAHR_2017_PLUS",
                  "JAHR_2021"
                ]
              },
              "standVerfahren": {
                "type": "string",
                "enum": [
                  "UNSPECIFIED",
                  "VORBEREITUNG_ECKDATENBESCHLUSS",
                  "VORBEREITUNG_WETTBEWERBAUSLOBUNG",
                  "VORBEREITUNG_AUFSTELLUNGSBESCHLUSS",
                  "VORBEREITUNG_BILLIGUNGSBESCHLUSS_STAEDTEBAULICHER_VERTRAG",
                  "VORBEREITUNG_SATZUNGSBESCHLUSS",
                  "VORLIEGENDER_SATZUNGSBESCHLUSS",
                  "RECHTSVERBINDLICHKEIT_AMTSBLATT",
                  "AUFTEILUNGSPLAN",
                  "VORBEREITUNG_VORBESCHEID",
                  "VORBEREITUNG_BAUGENEHMIGUNG",
                  "VORABFRAGE_OHNE_KONKRETEN_STAND",
                  "STRUKTURKONZEPT",
                  "RAHMENPLANUNG",
                  "POTENTIALUNTERSUCHUNG",
                  "STAEDTEBAULICHE_SANIERUNGSMASSNAHME",
                  "STAEDTEBAULICHE_ENTWICKLUNGSMASSNAHME",
                  "INFO_FEHLT",
                  "FREIE_EINGABE",
                  "STANDORTABFRAGE"
                ]
              },
              "standVerfahrenFreieEingabe": { "maxLength": 1000, "minLength": 0, "type": "string" },
              "adresse": { "$ref": "#/components/schemas/AdresseDto" },
              "verortung": { "$ref": "#/components/schemas/VerortungMultiPolygonDto" },
              "dokumente": { "type": "array", "items": { "$ref": "#/components/schemas/DokumentDto" } },
              "fristBearbeitung": { "type": "string", "format": "date" },
              "offizielleMitzeichnung": { "$ref": "#/components/schemas/UncertainBoolean" },
              "abfragevariantenBauleitplanverfahren": {
                "maxItems": 5,
                "minItems": 1,
                "type": "array",
                "items": { "$ref": "#/components/schemas/AbfragevarianteBauleitplanverfahrenAngelegtDto" }
              }
            }
          }
        ]
      },
      "BaurateDto": {
        "required": ["foerdermix", "jahr"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "jahr": { "maximum": 2100, "minimum": 1900, "type": "integer", "format": "int32" },
          "weGeplant": { "type": "integer", "format": "int32" },
          "gfWohnenGeplant": { "type": "number" },
          "foerdermix": { "$ref": "#/components/schemas/FoerdermixDto" }
        }
      },
      "WeiteresVerfahrenAngelegtDto": {
        "required": [
          "abfragevariantenWeiteresVerfahren",
          "fristBearbeitung",
          "name",
          "offizielleMitzeichnung",
          "sobonRelevant",
          "standVerfahren"
        ],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/AbfrageAngelegtDto" },
          {
            "type": "object",
            "properties": {
              "aktenzeichenProLbk": { "maxLength": 255, "minLength": 0, "type": "string" },
              "bebauungsplannummer": { "maxLength": 255, "minLength": 0, "type": "string" },
              "sobonRelevant": { "$ref": "#/components/schemas/UncertainBoolean" },
              "sobonJahr": {
                "type": "string",
                "enum": [
                  "JAHR_1995",
                  "JAHR_1997",
                  "JAHR_2001",
                  "JAHR_2006",
                  "JAHR_2012",
                  "JAHR_2017",
                  "JAHR_2017_PLUS",
                  "JAHR_2021"
                ]
              },
              "standVerfahren": {
                "type": "string",
                "enum": [
                  "UNSPECIFIED",
                  "VORBEREITUNG_ECKDATENBESCHLUSS",
                  "VORBEREITUNG_WETTBEWERBAUSLOBUNG",
                  "VORBEREITUNG_AUFSTELLUNGSBESCHLUSS",
                  "VORBEREITUNG_BILLIGUNGSBESCHLUSS_STAEDTEBAULICHER_VERTRAG",
                  "VORBEREITUNG_SATZUNGSBESCHLUSS",
                  "VORLIEGENDER_SATZUNGSBESCHLUSS",
                  "RECHTSVERBINDLICHKEIT_AMTSBLATT",
                  "AUFTEILUNGSPLAN",
                  "VORBEREITUNG_VORBESCHEID",
                  "VORBEREITUNG_BAUGENEHMIGUNG",
                  "VORABFRAGE_OHNE_KONKRETEN_STAND",
                  "STRUKTURKONZEPT",
                  "RAHMENPLANUNG",
                  "POTENTIALUNTERSUCHUNG",
                  "STAEDTEBAULICHE_SANIERUNGSMASSNAHME",
                  "STAEDTEBAULICHE_ENTWICKLUNGSMASSNAHME",
                  "INFO_FEHLT",
                  "FREIE_EINGABE",
                  "STANDORTABFRAGE"
                ]
              },
              "standVerfahrenFreieEingabe": { "maxLength": 1000, "minLength": 0, "type": "string" },
              "adresse": { "$ref": "#/components/schemas/AdresseDto" },
              "verortung": { "$ref": "#/components/schemas/VerortungMultiPolygonDto" },
              "dokumente": { "type": "array", "items": { "$ref": "#/components/schemas/DokumentDto" } },
              "fristBearbeitung": { "type": "string", "format": "date" },
              "offizielleMitzeichnung": { "$ref": "#/components/schemas/UncertainBoolean" },
              "abfragevariantenWeiteresVerfahren": {
                "maxItems": 5,
                "minItems": 1,
                "type": "array",
                "items": { "$ref": "#/components/schemas/AbfragevarianteWeiteresVerfahrenAngelegtDto" }
              }
            }
          }
        ]
      },
      "AbfrageDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "artAbfrage": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "name": { "type": "string" },
          "statusAbfrage": { "$ref": "#/components/schemas/StatusAbfrage" },
          "anmerkung": { "type": "string" },
          "bauvorhaben": { "type": "string", "format": "uuid" },
          "sub": { "type": "string" },
          "displayName": { "type": "string" },
          "linkEakte": { "type": "string" }
        },
        "description": "AbfrageDto",
        "discriminator": {
          "propertyName": "artAbfrage",
          "mapping": {
            "BAULEITPLANVERFAHREN": "#/components/schemas/BauleitplanverfahrenDto",
            "BAUGENEHMIGUNGSVERFAHREN": "#/components/schemas/BaugenehmigungsverfahrenDto",
            "WEITERES_VERFAHREN": "#/components/schemas/WeiteresVerfahrenDto"
          }
        }
      },
      "AbfragevarianteBaugenehmigungsverfahrenDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "name": { "type": "string" },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "type": "string" },
          "realisierungVon": { "type": "integer", "format": "int32" },
          "gfWohnenGesamt": { "type": "number" },
          "gfWohnenBaurechtlichGenehmigt": { "type": "number" },
          "gfWohnenBaurechtlichFestgesetzt": { "type": "number" },
          "gfWohnenBestandswohnbaurecht": { "type": "number" },
          "gfWohnenSonderwohnformen": { "type": "boolean" },
          "gfWohnenStudentischesWohnen": { "type": "number" },
          "gfWohnenSeniorinnenWohnen": { "type": "number" },
          "gfWohnenGenossenschaftlichesWohnen": { "type": "number" },
          "gfWohnenWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "number" },
          "weGesamt": { "type": "integer", "format": "int32" },
          "weBaurechtlichGenehmigt": { "type": "integer", "format": "int32" },
          "weBaurechtlichFestgesetzt": { "type": "integer", "format": "int32" },
          "weSonderwohnformen": { "type": "boolean" },
          "weStudentischesWohnen": { "type": "integer", "format": "int32" },
          "weSeniorinnenWohnen": { "type": "integer", "format": "int32" },
          "weGenossenschaftlichesWohnen": { "type": "integer", "format": "int32" },
          "weWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "integer", "format": "int32" },
          "sobonOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022", "STANDORTABFRAGE"]
          },
          "stammdatenGueltigAb": { "type": "string", "format": "date" },
          "anmerkung": { "type": "string" },
          "bedarfsmeldungFachreferate": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BedarfsmeldungDto" }
          },
          "bedarfsmeldungAbfrageersteller": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BedarfsmeldungDto" }
          },
          "bauabschnitte": { "type": "array", "items": { "$ref": "#/components/schemas/BauabschnittDto" } },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauKita": { "type": "boolean" },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauSchule": { "type": "boolean" },
          "hinweisVersorgung": { "type": "string" }
        }
      },
      "AbfragevarianteBauleitplanverfahrenDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "name": { "type": "string" },
          "satzungsbeschluss": { "type": "string", "format": "date" },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "type": "string" },
          "realisierungVon": { "type": "integer", "format": "int32" },
          "gfWohnenGesamt": { "type": "number" },
          "gfWohnenSobonUrsaechlich": { "type": "number" },
          "gfWohnenBestandswohnbaurecht": { "type": "number" },
          "gfWohnenSonderwohnformen": { "type": "boolean" },
          "gfWohnenStudentischesWohnen": { "type": "number" },
          "gfWohnenSeniorinnenWohnen": { "type": "number" },
          "gfWohnenGenossenschaftlichesWohnen": { "type": "number" },
          "gfWohnenWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "number" },
          "weGesamt": { "type": "integer", "format": "int32" },
          "weSonderwohnformen": { "type": "boolean" },
          "weStudentischesWohnen": { "type": "integer", "format": "int32" },
          "weSeniorinnenWohnen": { "type": "integer", "format": "int32" },
          "weGenossenschaftlichesWohnen": { "type": "integer", "format": "int32" },
          "weWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "integer", "format": "int32" },
          "sobonOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022", "STANDORTABFRAGE"]
          },
          "sobonBerechnung": { "$ref": "#/components/schemas/SobonBerechnungDto" },
          "stammdatenGueltigAb": { "type": "string", "format": "date" },
          "anmerkung": { "type": "string" },
          "bedarfsmeldungFachreferate": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BedarfsmeldungDto" }
          },
          "bedarfsmeldungAbfrageersteller": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BedarfsmeldungDto" }
          },
          "bauabschnitte": { "type": "array", "items": { "$ref": "#/components/schemas/BauabschnittDto" } },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauKita": { "type": "boolean" },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauSchule": { "type": "boolean" },
          "hinweisVersorgung": { "type": "string" }
        }
      },
      "AbfragevarianteWeiteresVerfahrenDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "name": { "type": "string" },
          "satzungsbeschluss": { "type": "string", "format": "date" },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "type": "string" },
          "realisierungVon": { "type": "integer", "format": "int32" },
          "gfWohnenGesamt": { "type": "number" },
          "gfWohnenBaurechtlichGenehmigt": { "type": "number" },
          "gfWohnenBaurechtlichFestgesetzt": { "type": "number" },
          "gfWohnenSobonUrsaechlich": { "type": "number" },
          "gfWohnenBestandswohnbaurecht": { "type": "number" },
          "gfWohnenSonderwohnformen": { "type": "boolean" },
          "gfWohnenStudentischesWohnen": { "type": "number" },
          "gfWohnenSeniorinnenWohnen": { "type": "number" },
          "gfWohnenGenossenschaftlichesWohnen": { "type": "number" },
          "gfWohnenWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "number" },
          "weGesamt": { "type": "integer", "format": "int32" },
          "weBaurechtlichGenehmigt": { "type": "integer", "format": "int32" },
          "weBaurechtlichFestgesetzt": { "type": "integer", "format": "int32" },
          "weSonderwohnformen": { "type": "boolean" },
          "weStudentischesWohnen": { "type": "integer", "format": "int32" },
          "weSeniorinnenWohnen": { "type": "integer", "format": "int32" },
          "weGenossenschaftlichesWohnen": { "type": "integer", "format": "int32" },
          "weWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "integer", "format": "int32" },
          "sobonOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022", "STANDORTABFRAGE"]
          },
          "sobonBerechnung": { "$ref": "#/components/schemas/SobonBerechnungDto" },
          "stammdatenGueltigAb": { "type": "string", "format": "date" },
          "anmerkung": { "type": "string" },
          "bedarfsmeldungFachreferate": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BedarfsmeldungDto" }
          },
          "bedarfsmeldungAbfrageersteller": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BedarfsmeldungDto" }
          },
          "bauabschnitte": { "type": "array", "items": { "$ref": "#/components/schemas/BauabschnittDto" } },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauKita": { "type": "boolean" },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauSchule": { "type": "boolean" },
          "hinweisVersorgung": { "type": "string" }
        }
      },
      "BaugenehmigungsverfahrenDto": {
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/AbfrageDto" },
          {
            "type": "object",
            "properties": {
              "aktenzeichenProLbk": { "type": "string" },
              "bebauungsplannummer": { "type": "string" },
              "standVerfahren": {
                "type": "string",
                "enum": [
                  "UNSPECIFIED",
                  "VORBEREITUNG_ECKDATENBESCHLUSS",
                  "VORBEREITUNG_WETTBEWERBAUSLOBUNG",
                  "VORBEREITUNG_AUFSTELLUNGSBESCHLUSS",
                  "VORBEREITUNG_BILLIGUNGSBESCHLUSS_STAEDTEBAULICHER_VERTRAG",
                  "VORBEREITUNG_SATZUNGSBESCHLUSS",
                  "VORLIEGENDER_SATZUNGSBESCHLUSS",
                  "RECHTSVERBINDLICHKEIT_AMTSBLATT",
                  "AUFTEILUNGSPLAN",
                  "VORBEREITUNG_VORBESCHEID",
                  "VORBEREITUNG_BAUGENEHMIGUNG",
                  "VORABFRAGE_OHNE_KONKRETEN_STAND",
                  "STRUKTURKONZEPT",
                  "RAHMENPLANUNG",
                  "POTENTIALUNTERSUCHUNG",
                  "STAEDTEBAULICHE_SANIERUNGSMASSNAHME",
                  "STAEDTEBAULICHE_ENTWICKLUNGSMASSNAHME",
                  "INFO_FEHLT",
                  "FREIE_EINGABE",
                  "STANDORTABFRAGE"
                ]
              },
              "standVerfahrenFreieEingabe": { "type": "string" },
              "adresse": { "$ref": "#/components/schemas/AdresseDto" },
              "verortung": { "$ref": "#/components/schemas/VerortungMultiPolygonDto" },
              "dokumente": { "type": "array", "items": { "$ref": "#/components/schemas/DokumentDto" } },
              "fristBearbeitung": { "type": "string", "format": "date" },
              "abfragevariantenBaugenehmigungsverfahren": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/AbfragevarianteBaugenehmigungsverfahrenDto" }
              },
              "abfragevariantenSachbearbeitungBaugenehmigungsverfahren": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/AbfragevarianteBaugenehmigungsverfahrenDto" }
              }
            }
          }
        ]
      },
      "BauleitplanverfahrenDto": {
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/AbfrageDto" },
          {
            "type": "object",
            "properties": {
              "bebauungsplannummer": { "type": "string" },
              "sobonRelevant": { "$ref": "#/components/schemas/UncertainBoolean" },
              "sobonJahr": {
                "type": "string",
                "enum": [
                  "JAHR_1995",
                  "JAHR_1997",
                  "JAHR_2001",
                  "JAHR_2006",
                  "JAHR_2012",
                  "JAHR_2017",
                  "JAHR_2017_PLUS",
                  "JAHR_2021"
                ]
              },
              "standVerfahren": {
                "type": "string",
                "enum": [
                  "UNSPECIFIED",
                  "VORBEREITUNG_ECKDATENBESCHLUSS",
                  "VORBEREITUNG_WETTBEWERBAUSLOBUNG",
                  "VORBEREITUNG_AUFSTELLUNGSBESCHLUSS",
                  "VORBEREITUNG_BILLIGUNGSBESCHLUSS_STAEDTEBAULICHER_VERTRAG",
                  "VORBEREITUNG_SATZUNGSBESCHLUSS",
                  "VORLIEGENDER_SATZUNGSBESCHLUSS",
                  "RECHTSVERBINDLICHKEIT_AMTSBLATT",
                  "AUFTEILUNGSPLAN",
                  "VORBEREITUNG_VORBESCHEID",
                  "VORBEREITUNG_BAUGENEHMIGUNG",
                  "VORABFRAGE_OHNE_KONKRETEN_STAND",
                  "STRUKTURKONZEPT",
                  "RAHMENPLANUNG",
                  "POTENTIALUNTERSUCHUNG",
                  "STAEDTEBAULICHE_SANIERUNGSMASSNAHME",
                  "STAEDTEBAULICHE_ENTWICKLUNGSMASSNAHME",
                  "INFO_FEHLT",
                  "FREIE_EINGABE",
                  "STANDORTABFRAGE"
                ]
              },
              "standVerfahrenFreieEingabe": { "type": "string" },
              "adresse": { "$ref": "#/components/schemas/AdresseDto" },
              "verortung": { "$ref": "#/components/schemas/VerortungMultiPolygonDto" },
              "dokumente": { "type": "array", "items": { "$ref": "#/components/schemas/DokumentDto" } },
              "fristBearbeitung": { "type": "string", "format": "date" },
              "offizielleMitzeichnung": { "$ref": "#/components/schemas/UncertainBoolean" },
              "abfragevariantenBauleitplanverfahren": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/AbfragevarianteBauleitplanverfahrenDto" }
              },
              "abfragevariantenSachbearbeitungBauleitplanverfahren": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/AbfragevarianteBauleitplanverfahrenDto" }
              }
            }
          }
        ]
      },
      "BedarfsmeldungDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "createdDateTime": { "type": "string", "format": "date-time" },
          "lastModifiedDateTime": { "type": "string", "format": "date-time" },
          "anzahlEinrichtungen": { "type": "integer", "format": "int32" },
          "infrastruktureinrichtungTyp": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "KINDERKRIPPE",
              "KINDERGARTEN",
              "GS_NACHMITTAG_BETREUUNG",
              "HAUS_FUER_KINDER",
              "GRUNDSCHULE",
              "MITTELSCHULE"
            ]
          },
          "anzahlKinderkrippengruppen": { "type": "integer", "format": "int32" },
          "anzahlKindergartengruppen": { "type": "integer", "format": "int32" },
          "anzahlHortgruppen": { "type": "integer", "format": "int32" },
          "anzahlGrundschulzuege": { "type": "integer", "format": "int32" }
        }
      },
      "SobonBerechnungDto": {
        "type": "object",
        "properties": {
          "isASobonBerechnung": { "type": "boolean" },
          "sobonFoerdermix": { "$ref": "#/components/schemas/FoerdermixDto" }
        }
      },
      "WeiteresVerfahrenDto": {
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/AbfrageDto" },
          {
            "type": "object",
            "properties": {
              "aktenzeichenProLbk": { "type": "string" },
              "bebauungsplannummer": { "type": "string" },
              "sobonRelevant": { "$ref": "#/components/schemas/UncertainBoolean" },
              "sobonJahr": {
                "type": "string",
                "enum": [
                  "JAHR_1995",
                  "JAHR_1997",
                  "JAHR_2001",
                  "JAHR_2006",
                  "JAHR_2012",
                  "JAHR_2017",
                  "JAHR_2017_PLUS",
                  "JAHR_2021"
                ]
              },
              "standVerfahren": {
                "type": "string",
                "enum": [
                  "UNSPECIFIED",
                  "VORBEREITUNG_ECKDATENBESCHLUSS",
                  "VORBEREITUNG_WETTBEWERBAUSLOBUNG",
                  "VORBEREITUNG_AUFSTELLUNGSBESCHLUSS",
                  "VORBEREITUNG_BILLIGUNGSBESCHLUSS_STAEDTEBAULICHER_VERTRAG",
                  "VORBEREITUNG_SATZUNGSBESCHLUSS",
                  "VORLIEGENDER_SATZUNGSBESCHLUSS",
                  "RECHTSVERBINDLICHKEIT_AMTSBLATT",
                  "AUFTEILUNGSPLAN",
                  "VORBEREITUNG_VORBESCHEID",
                  "VORBEREITUNG_BAUGENEHMIGUNG",
                  "VORABFRAGE_OHNE_KONKRETEN_STAND",
                  "STRUKTURKONZEPT",
                  "RAHMENPLANUNG",
                  "POTENTIALUNTERSUCHUNG",
                  "STAEDTEBAULICHE_SANIERUNGSMASSNAHME",
                  "STAEDTEBAULICHE_ENTWICKLUNGSMASSNAHME",
                  "INFO_FEHLT",
                  "FREIE_EINGABE",
                  "STANDORTABFRAGE"
                ]
              },
              "standVerfahrenFreieEingabe": { "type": "string" },
              "adresse": { "$ref": "#/components/schemas/AdresseDto" },
              "verortung": { "$ref": "#/components/schemas/VerortungMultiPolygonDto" },
              "dokumente": { "type": "array", "items": { "$ref": "#/components/schemas/DokumentDto" } },
              "fristBearbeitung": { "type": "string", "format": "date" },
              "offizielleMitzeichnung": { "$ref": "#/components/schemas/UncertainBoolean" },
              "abfragevariantenWeiteresVerfahren": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/AbfragevarianteWeiteresVerfahrenDto" }
              },
              "abfragevariantenSachbearbeitungWeiteresVerfahren": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/AbfragevarianteWeiteresVerfahrenDto" }
              }
            }
          }
        ]
      },
      "AbfrageInBearbeitungSachbearbeitungDto": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "artAbfrage": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "bauvorhaben": { "type": "string", "format": "uuid" },
          "linkEakte": { "maxLength": 8000, "minLength": 0, "type": "string" }
        },
        "description": "AbfrageInBearbeitungSachbearbeitungDto",
        "discriminator": {
          "propertyName": "artAbfrage",
          "mapping": {
            "BAULEITPLANVERFAHREN": "#/components/schemas/BauleitplanverfahrenInBearbeitungSachbearbeitungDto",
            "BAUGENEHMIGUNGSVERFAHREN": "#/components/schemas/BaugenehmigungsverfahrenInBearbeitungSachbearbeitungDto",
            "WEITERES_VERFAHREN": "#/components/schemas/WeiteresVerfahrenInBearbeitungSachbearbeitungDto"
          }
        }
      },
      "AbfragevarianteBaugenehmigungsverfahrenInBearbeitungSachbearbeitungDto": {
        "required": [
          "abfragevariantenNr",
          "gfWohnenSonderwohnformen",
          "name",
          "realisierungVon",
          "sobonOrientierungswertJahr",
          "stammdatenGueltigAb",
          "weSonderwohnformen",
          "wesentlicheRechtsgrundlage"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "name": { "maxLength": 30, "minLength": 0, "type": "string" },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "maxLength": 1000, "minLength": 0, "type": "string" },
          "realisierungVon": { "maximum": 2100, "minimum": 1900, "type": "integer", "format": "int32" },
          "gfWohnenGesamt": { "type": "number" },
          "gfWohnenBaurechtlichGenehmigt": { "type": "number" },
          "gfWohnenBaurechtlichFestgesetzt": { "type": "number" },
          "gfWohnenBestandswohnbaurecht": { "type": "number" },
          "gfWohnenSonderwohnformen": { "type": "boolean" },
          "gfWohnenStudentischesWohnen": { "type": "number" },
          "gfWohnenSeniorinnenWohnen": { "type": "number" },
          "gfWohnenGenossenschaftlichesWohnen": { "type": "number" },
          "gfWohnenWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "number" },
          "weGesamt": { "type": "integer", "format": "int32" },
          "weBaurechtlichGenehmigt": { "type": "integer", "format": "int32" },
          "weBaurechtlichFestgesetzt": { "type": "integer", "format": "int32" },
          "weSonderwohnformen": { "type": "boolean" },
          "weStudentischesWohnen": { "type": "integer", "format": "int32" },
          "weSeniorinnenWohnen": { "type": "integer", "format": "int32" },
          "weGenossenschaftlichesWohnen": { "type": "integer", "format": "int32" },
          "weWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "integer", "format": "int32" },
          "bauabschnitte": { "type": "array", "items": { "$ref": "#/components/schemas/BauabschnittDto" } },
          "sobonOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022", "STANDORTABFRAGE"]
          },
          "stammdatenGueltigAb": { "type": "string", "format": "date" },
          "anmerkung": { "maxLength": 1000, "minLength": 0, "type": "string" }
        }
      },
      "AbfragevarianteBaugenehmigungsverfahrenSachbearbeitungInBearbeitungSachbearbeitungDto": {
        "required": ["sobonOrientierungswertJahr", "stammdatenGueltigAb"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "sobonOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022", "STANDORTABFRAGE"]
          },
          "stammdatenGueltigAb": { "type": "string", "format": "date" },
          "anmerkung": { "maxLength": 1000, "minLength": 0, "type": "string" }
        }
      },
      "AbfragevarianteBauleitplanverfahrenInBearbeitungSachbearbeitungDto": {
        "required": [
          "abfragevariantenNr",
          "gfWohnenSonderwohnformen",
          "name",
          "realisierungVon",
          "sobonOrientierungswertJahr",
          "stammdatenGueltigAb",
          "weSonderwohnformen",
          "wesentlicheRechtsgrundlage"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "name": { "maxLength": 30, "minLength": 0, "type": "string" },
          "satzungsbeschluss": { "type": "string", "format": "date" },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "maxLength": 1000, "minLength": 0, "type": "string" },
          "realisierungVon": { "maximum": 2100, "minimum": 1900, "type": "integer", "format": "int32" },
          "gfWohnenGesamt": { "type": "number" },
          "gfWohnenSobonUrsaechlich": { "type": "number" },
          "gfWohnenBestandswohnbaurecht": { "type": "number" },
          "gfWohnenSonderwohnformen": { "type": "boolean" },
          "gfWohnenStudentischesWohnen": { "type": "number" },
          "gfWohnenSeniorinnenWohnen": { "type": "number" },
          "gfWohnenGenossenschaftlichesWohnen": { "type": "number" },
          "gfWohnenWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "number" },
          "weGesamt": { "type": "integer", "format": "int32" },
          "weSonderwohnformen": { "type": "boolean" },
          "weStudentischesWohnen": { "type": "integer", "format": "int32" },
          "weSeniorinnenWohnen": { "type": "integer", "format": "int32" },
          "weGenossenschaftlichesWohnen": { "type": "integer", "format": "int32" },
          "weWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "integer", "format": "int32" },
          "bauabschnitte": { "type": "array", "items": { "$ref": "#/components/schemas/BauabschnittDto" } },
          "sobonOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022", "STANDORTABFRAGE"]
          },
          "sobonBerechnung": { "$ref": "#/components/schemas/SobonBerechnungDto" },
          "stammdatenGueltigAb": { "type": "string", "format": "date" },
          "anmerkung": { "maxLength": 1000, "minLength": 0, "type": "string" }
        }
      },
      "AbfragevarianteBauleitplanverfahrenSachbearbeitungInBearbeitungSachbearbeitungDto": {
        "required": ["sobonOrientierungswertJahr", "stammdatenGueltigAb"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "sobonOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022", "STANDORTABFRAGE"]
          },
          "sobonBerechnung": { "$ref": "#/components/schemas/SobonBerechnungDto" },
          "stammdatenGueltigAb": { "type": "string", "format": "date" },
          "anmerkung": { "maxLength": 1000, "minLength": 0, "type": "string" }
        }
      },
      "AbfragevarianteWeiteresVerfahrenInBearbeitungSachbearbeitungDto": {
        "required": [
          "abfragevariantenNr",
          "gfWohnenSonderwohnformen",
          "name",
          "realisierungVon",
          "sobonOrientierungswertJahr",
          "stammdatenGueltigAb",
          "weSonderwohnformen",
          "wesentlicheRechtsgrundlage"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "abfragevariantenNr": { "type": "integer", "format": "int32" },
          "name": { "maxLength": 30, "minLength": 0, "type": "string" },
          "satzungsbeschluss": { "type": "string", "format": "date" },
          "wesentlicheRechtsgrundlage": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "QUALIFIZIERTER_BEBAUUNGSPLAN",
                "VORHABENSBEZOGENER_BEBAUUNGSPLAN",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30",
                "EINFACHER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_9",
                "SEKTORALER_BEBAUUNGSPLAN_PARAGRAPH_30_IVM_34_35",
                "INNENBEREICH",
                "AUSSENBEREICH",
                "BEFREIUNG",
                "INFO_FEHLT",
                "FREIE_EINGABE"
              ]
            }
          },
          "wesentlicheRechtsgrundlageFreieEingabe": { "maxLength": 1000, "minLength": 0, "type": "string" },
          "realisierungVon": { "maximum": 2100, "minimum": 1900, "type": "integer", "format": "int32" },
          "gfWohnenGesamt": { "type": "number" },
          "gfWohnenBaurechtlichGenehmigt": { "type": "number" },
          "gfWohnenBaurechtlichFestgesetzt": { "type": "number" },
          "gfWohnenSobonUrsaechlich": { "type": "number" },
          "gfWohnenBestandswohnbaurecht": { "type": "number" },
          "gfWohnenSonderwohnformen": { "type": "boolean" },
          "gfWohnenStudentischesWohnen": { "type": "number" },
          "gfWohnenSeniorinnenWohnen": { "type": "number" },
          "gfWohnenGenossenschaftlichesWohnen": { "type": "number" },
          "gfWohnenWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "number" },
          "weGesamt": { "type": "integer", "format": "int32" },
          "weBaurechtlichGenehmigt": { "type": "integer", "format": "int32" },
          "weBaurechtlichFestgesetzt": { "type": "integer", "format": "int32" },
          "weSonderwohnformen": { "type": "boolean" },
          "weStudentischesWohnen": { "type": "integer", "format": "int32" },
          "weSeniorinnenWohnen": { "type": "integer", "format": "int32" },
          "weGenossenschaftlichesWohnen": { "type": "integer", "format": "int32" },
          "weWeiteresNichtInfrastrukturrelevantesWohnen": { "type": "integer", "format": "int32" },
          "bauabschnitte": { "type": "array", "items": { "$ref": "#/components/schemas/BauabschnittDto" } },
          "sobonOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022", "STANDORTABFRAGE"]
          },
          "sobonBerechnung": { "$ref": "#/components/schemas/SobonBerechnungDto" },
          "stammdatenGueltigAb": { "type": "string", "format": "date" },
          "anmerkung": { "maxLength": 1000, "minLength": 0, "type": "string" }
        }
      },
      "AbfragevarianteWeiteresVerfahrenSachbearbeitungInBearbeitungSachbearbeitungDto": {
        "required": ["sobonOrientierungswertJahr", "stammdatenGueltigAb"],
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "sobonOrientierungswertJahr": {
            "type": "string",
            "enum": ["UNSPECIFIED", "JAHR_2014", "JAHR_2017", "JAHR_2022", "STANDORTABFRAGE"]
          },
          "sobonBerechnung": { "$ref": "#/components/schemas/SobonBerechnungDto" },
          "stammdatenGueltigAb": { "type": "string", "format": "date" },
          "anmerkung": { "maxLength": 1000, "minLength": 0, "type": "string" }
        }
      },
      "BaugenehmigungsverfahrenInBearbeitungSachbearbeitungDto": {
        "required": [
          "abfragevariantenBaugenehmigungsverfahren",
          "abfragevariantenSachbearbeitungBaugenehmigungsverfahren"
        ],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/AbfrageInBearbeitungSachbearbeitungDto" },
          {
            "type": "object",
            "properties": {
              "verortung": { "$ref": "#/components/schemas/VerortungMultiPolygonDto" },
              "abfragevariantenBaugenehmigungsverfahren": {
                "maxItems": 5,
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AbfragevarianteBaugenehmigungsverfahrenSachbearbeitungInBearbeitungSachbearbeitungDto"
                }
              },
              "abfragevariantenSachbearbeitungBaugenehmigungsverfahren": {
                "maxItems": 5,
                "minItems": 0,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AbfragevarianteBaugenehmigungsverfahrenInBearbeitungSachbearbeitungDto"
                }
              }
            }
          }
        ]
      },
      "BauleitplanverfahrenInBearbeitungSachbearbeitungDto": {
        "required": ["abfragevariantenBauleitplanverfahren", "abfragevariantenSachbearbeitungBauleitplanverfahren"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/AbfrageInBearbeitungSachbearbeitungDto" },
          {
            "type": "object",
            "properties": {
              "verortung": { "$ref": "#/components/schemas/VerortungMultiPolygonDto" },
              "abfragevariantenBauleitplanverfahren": {
                "maxItems": 5,
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AbfragevarianteBauleitplanverfahrenSachbearbeitungInBearbeitungSachbearbeitungDto"
                }
              },
              "abfragevariantenSachbearbeitungBauleitplanverfahren": {
                "maxItems": 5,
                "minItems": 0,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AbfragevarianteBauleitplanverfahrenInBearbeitungSachbearbeitungDto"
                }
              }
            }
          }
        ]
      },
      "WeiteresVerfahrenInBearbeitungSachbearbeitungDto": {
        "required": ["abfragevariantenSachbearbeitungWeiteresVerfahren", "abfragevariantenWeiteresVerfahren"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/AbfrageInBearbeitungSachbearbeitungDto" },
          {
            "type": "object",
            "properties": {
              "verortung": { "$ref": "#/components/schemas/VerortungMultiPolygonDto" },
              "abfragevariantenWeiteresVerfahren": {
                "maxItems": 5,
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AbfragevarianteWeiteresVerfahrenSachbearbeitungInBearbeitungSachbearbeitungDto"
                }
              },
              "abfragevariantenSachbearbeitungWeiteresVerfahren": {
                "maxItems": 5,
                "minItems": 0,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AbfragevarianteWeiteresVerfahrenInBearbeitungSachbearbeitungDto"
                }
              }
            }
          }
        ]
      },
      "AbfrageInBearbeitungFachreferatDto": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "artAbfrage": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          }
        },
        "description": "AbfrageInBearbeitungFachreferatDto",
        "discriminator": {
          "propertyName": "artAbfrage",
          "mapping": {
            "BAULEITPLANVERFAHREN": "#/components/schemas/BauleitplanverfahrenInBearbeitungFachreferatDto",
            "BAUGENEHMIGUNGSVERFAHREN": "#/components/schemas/BaugenehmigungsverfahrenInBearbeitungFachreferatDto",
            "WEITERES_VERFAHREN": "#/components/schemas/WeiteresVerfahrenInBearbeitungFachreferatDto"
          }
        }
      },
      "AbfragevarianteBaugenehmigungsverfahrenInBearbeitungFachreferatDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "bedarfsmeldungFachreferate": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BedarfsmeldungDto" }
          },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauKita": { "type": "boolean" },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauSchule": { "type": "boolean" },
          "hinweisVersorgung": { "type": "string" }
        }
      },
      "AbfragevarianteBauleitplanverfahrenInBearbeitungFachreferatDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "bedarfsmeldungFachreferate": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BedarfsmeldungDto" }
          },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauKita": { "type": "boolean" },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauSchule": { "type": "boolean" },
          "hinweisVersorgung": { "type": "string" }
        }
      },
      "AbfragevarianteWeiteresVerfahrenInBearbeitungFachreferatDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "bedarfsmeldungFachreferate": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BedarfsmeldungDto" }
          },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenKita": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauKita": { "type": "boolean" },
          "ausgeloesterBedarfImBaugebietBeruecksichtigenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungImBplanSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenSchule": { "type": "boolean" },
          "ausgeloesterBedarfMitversorgungInBestEinrichtungenNachAusbauSchule": { "type": "boolean" },
          "hinweisVersorgung": { "type": "string" }
        }
      },
      "BaugenehmigungsverfahrenInBearbeitungFachreferatDto": {
        "required": [
          "abfragevariantenBaugenehmigungsverfahren",
          "abfragevariantenSachbearbeitungBaugenehmigungsverfahren"
        ],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/AbfrageInBearbeitungFachreferatDto" },
          {
            "type": "object",
            "properties": {
              "abfragevariantenBaugenehmigungsverfahren": {
                "maxItems": 5,
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AbfragevarianteBaugenehmigungsverfahrenInBearbeitungFachreferatDto"
                }
              },
              "abfragevariantenSachbearbeitungBaugenehmigungsverfahren": {
                "maxItems": 5,
                "minItems": 0,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AbfragevarianteBaugenehmigungsverfahrenInBearbeitungFachreferatDto"
                }
              }
            }
          }
        ]
      },
      "BauleitplanverfahrenInBearbeitungFachreferatDto": {
        "required": ["abfragevariantenBauleitplanverfahren", "abfragevariantenSachbearbeitungBauleitplanverfahren"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/AbfrageInBearbeitungFachreferatDto" },
          {
            "type": "object",
            "properties": {
              "abfragevariantenBauleitplanverfahren": {
                "maxItems": 5,
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AbfragevarianteBauleitplanverfahrenInBearbeitungFachreferatDto"
                }
              },
              "abfragevariantenSachbearbeitungBauleitplanverfahren": {
                "maxItems": 5,
                "minItems": 0,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AbfragevarianteBauleitplanverfahrenInBearbeitungFachreferatDto"
                }
              }
            }
          }
        ]
      },
      "WeiteresVerfahrenInBearbeitungFachreferatDto": {
        "required": ["abfragevariantenSachbearbeitungWeiteresVerfahren", "abfragevariantenWeiteresVerfahren"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/AbfrageInBearbeitungFachreferatDto" },
          {
            "type": "object",
            "properties": {
              "abfragevariantenWeiteresVerfahren": {
                "maxItems": 5,
                "minItems": 1,
                "type": "array",
                "items": { "$ref": "#/components/schemas/AbfragevarianteWeiteresVerfahrenInBearbeitungFachreferatDto" }
              },
              "abfragevariantenSachbearbeitungWeiteresVerfahren": {
                "maxItems": 5,
                "minItems": 0,
                "type": "array",
                "items": { "$ref": "#/components/schemas/AbfragevarianteWeiteresVerfahrenInBearbeitungFachreferatDto" }
              }
            }
          }
        ]
      },
      "AbfrageBedarfsmeldungErfolgtDto": {
        "type": "object",
        "properties": {
          "version": { "type": "integer", "format": "int64" },
          "artAbfrage": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          }
        },
        "description": "AbfrageBedarfsmeldungErfolgtDto",
        "discriminator": {
          "propertyName": "artAbfrage",
          "mapping": {
            "BAULEITPLANVERFAHREN": "#/components/schemas/BauleitplanverfahrenBedarfsmeldungErfolgtDto",
            "BAUGENEHMIGUNGSVERFAHREN": "#/components/schemas/BaugenehmigungsverfahrenBedarfsmeldungErfolgtDto",
            "WEITERES_VERFAHREN": "#/components/schemas/WeiteresVerfahrenBedarfsmeldungErfolgtDto"
          }
        }
      },
      "AbfragevarianteBaugenehmigungsverfahrenBedarfsmeldungErfolgtDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "bedarfsmeldungAbfrageersteller": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BedarfsmeldungDto" }
          }
        }
      },
      "AbfragevarianteBauleitplanverfahrenBedarfsmeldungErfolgtDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "bedarfsmeldungAbfrageersteller": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BedarfsmeldungDto" }
          }
        }
      },
      "AbfragevarianteWeiteresVerfahrenBedarfsmeldungErfolgtDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "version": { "type": "integer", "format": "int64" },
          "artAbfragevariante": {
            "type": "string",
            "enum": ["UNSPECIFIED", "BAULEITPLANVERFAHREN", "BAUGENEHMIGUNGSVERFAHREN", "WEITERES_VERFAHREN"]
          },
          "bedarfsmeldungAbfrageersteller": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BedarfsmeldungDto" }
          }
        }
      },
      "BaugenehmigungsverfahrenBedarfsmeldungErfolgtDto": {
        "required": [
          "abfragevariantenBaugenehmigungsverfahren",
          "abfragevariantenSachbearbeitungBaugenehmigungsverfahren"
        ],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/AbfrageBedarfsmeldungErfolgtDto" },
          {
            "type": "object",
            "properties": {
              "abfragevariantenBaugenehmigungsverfahren": {
                "maxItems": 5,
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AbfragevarianteBaugenehmigungsverfahrenBedarfsmeldungErfolgtDto"
                }
              },
              "abfragevariantenSachbearbeitungBaugenehmigungsverfahren": {
                "maxItems": 5,
                "minItems": 0,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AbfragevarianteBaugenehmigungsverfahrenBedarfsmeldungErfolgtDto"
                }
              }
            }
          }
        ]
      },
      "BauleitplanverfahrenBedarfsmeldungErfolgtDto": {
        "required": ["abfragevariantenBauleitplanverfahren", "abfragevariantenSachbearbeitungBauleitplanverfahren"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/AbfrageBedarfsmeldungErfolgtDto" },
          {
            "type": "object",
            "properties": {
              "abfragevariantenBauleitplanverfahren": {
                "maxItems": 5,
                "minItems": 1,
                "type": "array",
                "items": { "$ref": "#/components/schemas/AbfragevarianteBauleitplanverfahrenBedarfsmeldungErfolgtDto" }
              },
              "abfragevariantenSachbearbeitungBauleitplanverfahren": {
                "maxItems": 5,
                "minItems": 0,
                "type": "array",
                "items": { "$ref": "#/components/schemas/AbfragevarianteBauleitplanverfahrenBedarfsmeldungErfolgtDto" }
              }
            }
          }
        ]
      },
      "WeiteresVerfahrenBedarfsmeldungErfolgtDto": {
        "required": ["abfragevariantenSachbearbeitungWeiteresVerfahren", "abfragevariantenWeiteresVerfahren"],
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/AbfrageBedarfsmeldungErfolgtDto" },
          {
            "type": "object",
            "properties": {
              "abfragevariantenWeiteresVerfahren": {
                "maxItems": 5,
                "minItems": 1,
                "type": "array",
                "items": { "$ref": "#/components/schemas/AbfragevarianteWeiteresVerfahrenBedarfsmeldungErfolgtDto" }
              },
              "abfragevariantenSachbearbeitungWeiteresVerfahren": {
                "maxItems": 5,
                "minItems": 0,
                "type": "array",
                "items": { "$ref": "#/components/schemas/AbfragevarianteWeiteresVerfahrenBedarfsmeldungErfolgtDto" }
              }
            }
          }
        ]
      },
      "FileInformationDto": {
        "type": "object",
        "properties": {
          "maxFileSizeBytes": { "type": "integer", "format": "int64" },
          "maxNumberOfFiles": { "type": "integer", "format": "int64" },
          "allowedMimeTypes": { "type": "array", "items": { "type": "string" } }
        }
      },
      "LookupEntryDto": {
        "type": "object",
        "properties": { "key": { "type": "string" }, "value": { "type": "string" } }
      },
      "LookupListDto": {
        "type": "object",
        "properties": { "list": { "type": "array", "items": { "$ref": "#/components/schemas/LookupEntryDto" } } }
      },
      "LookupListsDto": {
        "type": "object",
        "properties": {
          "uncertainBoolean": { "$ref": "#/components/schemas/LookupListDto" },
          "artDokument": { "$ref": "#/components/schemas/LookupListDto" },
          "artAbfrage": { "$ref": "#/components/schemas/LookupListDto" },
          "sobonVerfahrensgrundsaetzeJahr": { "$ref": "#/components/schemas/LookupListDto" },
          "standVerfahrenBauleitplanverfahren": { "$ref": "#/components/schemas/LookupListDto" },
          "standVerfahrenBaugenehmigungsverfahren": { "$ref": "#/components/schemas/LookupListDto" },
          "standVerfahrenWeiteresVerfahren": { "$ref": "#/components/schemas/LookupListDto" },
          "standVerfahren": { "$ref": "#/components/schemas/LookupListDto" },
          "statusAbfrage": { "$ref": "#/components/schemas/LookupListDto" },
          "wesentlicheRechtsgrundlageBauleitplanverfahren": { "$ref": "#/components/schemas/LookupListDto" },
          "wesentlicheRechtsgrundlageBaugenehmigungsverfahren": { "$ref": "#/components/schemas/LookupListDto" },
          "wesentlicheRechtsgrundlage": { "$ref": "#/components/schemas/LookupListDto" },
          "artBaulicheNutzung": { "$ref": "#/components/schemas/LookupListDto" },
          "artBaulicheNutzungBauvorhaben": { "$ref": "#/components/schemas/LookupListDto" },
          "statusInfrastruktureinrichtung": { "$ref": "#/components/schemas/LookupListDto" },
          "einrichtungstraeger": { "$ref": "#/components/schemas/LookupListDto" },
          "einrichtungstraegerSchulen": { "$ref": "#/components/schemas/LookupListDto" },
          "infrastruktureinrichtungTyp": { "$ref": "#/components/schemas/LookupListDto" },
          "artGsNachmittagBetreuung": { "$ref": "#/components/schemas/LookupListDto" },
          "sobonOrientierungswertJahr": { "$ref": "#/components/schemas/LookupListDto" },
          "sobonOrientierungswertJahrWithoutStandortabfrage": { "$ref": "#/components/schemas/LookupListDto" }
        }
      },
      "DokumenteDto": {
        "type": "object",
        "properties": {
          "dokumente": { "type": "array", "items": { "$ref": "#/components/schemas/DokumentDto" } },
          "pageNumber": { "type": "integer", "format": "int32" },
          "pageSize": { "type": "integer", "format": "int32" },
          "totalElements": { "type": "integer", "format": "int64" },
          "totalPages": { "type": "integer", "format": "int32" },
          "last": { "type": "boolean" }
        }
      },
      "TransitionDto": {
        "type": "object",
        "properties": {
          "url": { "type": "string" },
          "buttonName": { "type": "string" },
          "index": { "type": "integer", "format": "int32" },
          "dialogText": { "type": "string" }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": { "type": "string" },
          "hreflang": { "type": "string" },
          "title": { "type": "string" },
          "type": { "type": "string" },
          "deprecation": { "type": "string" },
          "profile": { "type": "string" },
          "name": { "type": "string" },
          "templated": { "type": "boolean" }
        }
      }
    }
  }
}

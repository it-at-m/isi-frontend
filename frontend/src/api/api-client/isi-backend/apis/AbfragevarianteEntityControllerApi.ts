/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AbfragevarianteRequestBody,
  EntityModelAbfragevariante,
  PagedModelEntityModelAbfragevariante,
} from '../models';
import {
    AbfragevarianteRequestBodyFromJSON,
    AbfragevarianteRequestBodyToJSON,
    EntityModelAbfragevarianteFromJSON,
    EntityModelAbfragevarianteToJSON,
    PagedModelEntityModelAbfragevarianteFromJSON,
    PagedModelEntityModelAbfragevarianteToJSON,
} from '../models';

export interface DeleteItemResourceAbfragevarianteDeleteRequest {
    id: string;
}

export interface GetCollectionResourceAbfragevarianteGet1Request {
    page?: number;
    size?: number;
    sort?: Array<string>;
}

export interface GetItemResourceAbfragevarianteGetRequest {
    id: string;
}

export interface PatchItemResourceAbfragevariantePatchRequest {
    id: string;
    abfragevarianteRequestBody: AbfragevarianteRequestBody;
}

export interface PostCollectionResourceAbfragevariantePostRequest {
    abfragevarianteRequestBody: AbfragevarianteRequestBody;
}

export interface PutItemResourceAbfragevariantePutRequest {
    id: string;
    abfragevarianteRequestBody: AbfragevarianteRequestBody;
}

/**
 * 
 */
export class AbfragevarianteEntityControllerApi extends runtime.BaseAPI {

    /**
     * delete-abfragevariante
     */
    async deleteItemResourceAbfragevarianteDeleteRaw(requestParameters: DeleteItemResourceAbfragevarianteDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteItemResourceAbfragevarianteDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/abfragevariantes/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * delete-abfragevariante
     */
    async deleteItemResourceAbfragevarianteDelete(requestParameters: DeleteItemResourceAbfragevarianteDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteItemResourceAbfragevarianteDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * get-abfragevariante
     */
    async getCollectionResourceAbfragevarianteGet1Raw(requestParameters: GetCollectionResourceAbfragevarianteGet1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PagedModelEntityModelAbfragevariante>> {
        const queryParameters: any = {};

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.size !== undefined) {
            queryParameters['size'] = requestParameters.size;
        }

        if (requestParameters.sort) {
            queryParameters['sort'] = requestParameters.sort;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/abfragevariantes`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PagedModelEntityModelAbfragevarianteFromJSON(jsonValue));
    }

    /**
     * get-abfragevariante
     */
    async getCollectionResourceAbfragevarianteGet1(requestParameters: GetCollectionResourceAbfragevarianteGet1Request = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PagedModelEntityModelAbfragevariante> {
        const response = await this.getCollectionResourceAbfragevarianteGet1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * get-abfragevariante
     */
    async getItemResourceAbfragevarianteGetRaw(requestParameters: GetItemResourceAbfragevarianteGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelAbfragevariante>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getItemResourceAbfragevarianteGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/abfragevariantes/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelAbfragevarianteFromJSON(jsonValue));
    }

    /**
     * get-abfragevariante
     */
    async getItemResourceAbfragevarianteGet(requestParameters: GetItemResourceAbfragevarianteGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelAbfragevariante> {
        const response = await this.getItemResourceAbfragevarianteGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * patch-abfragevariante
     */
    async patchItemResourceAbfragevariantePatchRaw(requestParameters: PatchItemResourceAbfragevariantePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelAbfragevariante>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling patchItemResourceAbfragevariantePatch.');
        }

        if (requestParameters.abfragevarianteRequestBody === null || requestParameters.abfragevarianteRequestBody === undefined) {
            throw new runtime.RequiredError('abfragevarianteRequestBody','Required parameter requestParameters.abfragevarianteRequestBody was null or undefined when calling patchItemResourceAbfragevariantePatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/abfragevariantes/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: AbfragevarianteRequestBodyToJSON(requestParameters.abfragevarianteRequestBody),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelAbfragevarianteFromJSON(jsonValue));
    }

    /**
     * patch-abfragevariante
     */
    async patchItemResourceAbfragevariantePatch(requestParameters: PatchItemResourceAbfragevariantePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelAbfragevariante> {
        const response = await this.patchItemResourceAbfragevariantePatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * create-abfragevariante
     */
    async postCollectionResourceAbfragevariantePostRaw(requestParameters: PostCollectionResourceAbfragevariantePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelAbfragevariante>> {
        if (requestParameters.abfragevarianteRequestBody === null || requestParameters.abfragevarianteRequestBody === undefined) {
            throw new runtime.RequiredError('abfragevarianteRequestBody','Required parameter requestParameters.abfragevarianteRequestBody was null or undefined when calling postCollectionResourceAbfragevariantePost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/abfragevariantes`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AbfragevarianteRequestBodyToJSON(requestParameters.abfragevarianteRequestBody),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelAbfragevarianteFromJSON(jsonValue));
    }

    /**
     * create-abfragevariante
     */
    async postCollectionResourceAbfragevariantePost(requestParameters: PostCollectionResourceAbfragevariantePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelAbfragevariante> {
        const response = await this.postCollectionResourceAbfragevariantePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * update-abfragevariante
     */
    async putItemResourceAbfragevariantePutRaw(requestParameters: PutItemResourceAbfragevariantePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelAbfragevariante>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling putItemResourceAbfragevariantePut.');
        }

        if (requestParameters.abfragevarianteRequestBody === null || requestParameters.abfragevarianteRequestBody === undefined) {
            throw new runtime.RequiredError('abfragevarianteRequestBody','Required parameter requestParameters.abfragevarianteRequestBody was null or undefined when calling putItemResourceAbfragevariantePut.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/abfragevariantes/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: AbfragevarianteRequestBodyToJSON(requestParameters.abfragevarianteRequestBody),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelAbfragevarianteFromJSON(jsonValue));
    }

    /**
     * update-abfragevariante
     */
    async putItemResourceAbfragevariantePut(requestParameters: PutItemResourceAbfragevariantePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelAbfragevariante> {
        const response = await this.putItemResourceAbfragevariantePutRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

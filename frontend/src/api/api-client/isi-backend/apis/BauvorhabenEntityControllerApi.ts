/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BauvorhabenRequestBody,
  EntityModelBauvorhaben,
  PagedModelEntityModelBauvorhaben,
} from '../models';
import {
    BauvorhabenRequestBodyFromJSON,
    BauvorhabenRequestBodyToJSON,
    EntityModelBauvorhabenFromJSON,
    EntityModelBauvorhabenToJSON,
    PagedModelEntityModelBauvorhabenFromJSON,
    PagedModelEntityModelBauvorhabenToJSON,
} from '../models';

export interface DeleteItemResourceBauvorhabenDeleteRequest {
    id: string;
}

export interface GetCollectionResourceBauvorhabenGet1Request {
    page?: number;
    size?: number;
    sort?: Array<string>;
}

export interface GetItemResourceBauvorhabenGetRequest {
    id: string;
}

export interface PatchItemResourceBauvorhabenPatchRequest {
    id: string;
    bauvorhabenRequestBody: BauvorhabenRequestBody;
}

export interface PostCollectionResourceBauvorhabenPostRequest {
    bauvorhabenRequestBody: BauvorhabenRequestBody;
}

export interface PutItemResourceBauvorhabenPutRequest {
    id: string;
    bauvorhabenRequestBody: BauvorhabenRequestBody;
}

/**
 * 
 */
export class BauvorhabenEntityControllerApi extends runtime.BaseAPI {

    /**
     * delete-bauvorhaben
     */
    async deleteItemResourceBauvorhabenDeleteRaw(requestParameters: DeleteItemResourceBauvorhabenDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteItemResourceBauvorhabenDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/bauvorhabens/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * delete-bauvorhaben
     */
    async deleteItemResourceBauvorhabenDelete(requestParameters: DeleteItemResourceBauvorhabenDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteItemResourceBauvorhabenDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * get-bauvorhaben
     */
    async getCollectionResourceBauvorhabenGet1Raw(requestParameters: GetCollectionResourceBauvorhabenGet1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PagedModelEntityModelBauvorhaben>> {
        const queryParameters: any = {};

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.size !== undefined) {
            queryParameters['size'] = requestParameters.size;
        }

        if (requestParameters.sort) {
            queryParameters['sort'] = requestParameters.sort;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/bauvorhabens`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PagedModelEntityModelBauvorhabenFromJSON(jsonValue));
    }

    /**
     * get-bauvorhaben
     */
    async getCollectionResourceBauvorhabenGet1(requestParameters: GetCollectionResourceBauvorhabenGet1Request = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PagedModelEntityModelBauvorhaben> {
        const response = await this.getCollectionResourceBauvorhabenGet1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * get-bauvorhaben
     */
    async getItemResourceBauvorhabenGetRaw(requestParameters: GetItemResourceBauvorhabenGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelBauvorhaben>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getItemResourceBauvorhabenGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/bauvorhabens/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelBauvorhabenFromJSON(jsonValue));
    }

    /**
     * get-bauvorhaben
     */
    async getItemResourceBauvorhabenGet(requestParameters: GetItemResourceBauvorhabenGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelBauvorhaben> {
        const response = await this.getItemResourceBauvorhabenGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * patch-bauvorhaben
     */
    async patchItemResourceBauvorhabenPatchRaw(requestParameters: PatchItemResourceBauvorhabenPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelBauvorhaben>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling patchItemResourceBauvorhabenPatch.');
        }

        if (requestParameters.bauvorhabenRequestBody === null || requestParameters.bauvorhabenRequestBody === undefined) {
            throw new runtime.RequiredError('bauvorhabenRequestBody','Required parameter requestParameters.bauvorhabenRequestBody was null or undefined when calling patchItemResourceBauvorhabenPatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/bauvorhabens/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: BauvorhabenRequestBodyToJSON(requestParameters.bauvorhabenRequestBody),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelBauvorhabenFromJSON(jsonValue));
    }

    /**
     * patch-bauvorhaben
     */
    async patchItemResourceBauvorhabenPatch(requestParameters: PatchItemResourceBauvorhabenPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelBauvorhaben> {
        const response = await this.patchItemResourceBauvorhabenPatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * create-bauvorhaben
     */
    async postCollectionResourceBauvorhabenPostRaw(requestParameters: PostCollectionResourceBauvorhabenPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelBauvorhaben>> {
        if (requestParameters.bauvorhabenRequestBody === null || requestParameters.bauvorhabenRequestBody === undefined) {
            throw new runtime.RequiredError('bauvorhabenRequestBody','Required parameter requestParameters.bauvorhabenRequestBody was null or undefined when calling postCollectionResourceBauvorhabenPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/bauvorhabens`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BauvorhabenRequestBodyToJSON(requestParameters.bauvorhabenRequestBody),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelBauvorhabenFromJSON(jsonValue));
    }

    /**
     * create-bauvorhaben
     */
    async postCollectionResourceBauvorhabenPost(requestParameters: PostCollectionResourceBauvorhabenPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelBauvorhaben> {
        const response = await this.postCollectionResourceBauvorhabenPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * update-bauvorhaben
     */
    async putItemResourceBauvorhabenPutRaw(requestParameters: PutItemResourceBauvorhabenPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelBauvorhaben>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling putItemResourceBauvorhabenPut.');
        }

        if (requestParameters.bauvorhabenRequestBody === null || requestParameters.bauvorhabenRequestBody === undefined) {
            throw new runtime.RequiredError('bauvorhabenRequestBody','Required parameter requestParameters.bauvorhabenRequestBody was null or undefined when calling putItemResourceBauvorhabenPut.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/bauvorhabens/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: BauvorhabenRequestBodyToJSON(requestParameters.bauvorhabenRequestBody),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelBauvorhabenFromJSON(jsonValue));
    }

    /**
     * update-bauvorhaben
     */
    async putItemResourceBauvorhabenPut(requestParameters: PutItemResourceBauvorhabenPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelBauvorhaben> {
        const response = await this.putItemResourceBauvorhabenPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Serivce für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    AbfrageerstellungAbfragevarianteAngelegtDto,
    AbfrageerstellungAbfragevarianteAngelegtDtoFromJSON,
    AbfrageerstellungAbfragevarianteAngelegtDtoToJSON,
    BauabschnittDto,
    BauabschnittDtoFromJSON,
    BauabschnittDtoToJSON,
    BaugebietDto,
    BaugebietDtoFromJSON,
    BaugebietDtoToJSON,
    WohneinheitenInformationDto,
    WohneinheitenInformationDtoFromJSON,
    WohneinheitenInformationDtoToJSON,
} from '../models';

export interface CalculateWohneinheitenInformationRequest {
    baugebietDto: BaugebietDto;
}

export interface CalculateWohneinheitenInformation1Request {
    bauabschnittDto: BauabschnittDto;
}

export interface CalculateWohneinheitenInformation2Request {
    abfrageerstellungAbfragevarianteAngelegtDto: AbfrageerstellungAbfragevarianteAngelegtDto;
}

/**
 * 
 */
export class WohneinheitenInformationApi extends runtime.BaseAPI {

    /**
     * Das Ergebnis summiert die Informationen der im Baugebiet beinhalteten Bauraten
     * Berechne Informationen zu Wohneinheiten für ein Baugebiet
     */
    async calculateWohneinheitenInformationRaw(requestParameters: CalculateWohneinheitenInformationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<WohneinheitenInformationDto>> {
        if (requestParameters.baugebietDto === null || requestParameters.baugebietDto === undefined) {
            throw new runtime.RequiredError('baugebietDto','Required parameter requestParameters.baugebietDto was null or undefined when calling calculateWohneinheitenInformation.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/calculate-wohneinheiten-information-for-baugebiet`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BaugebietDtoToJSON(requestParameters.baugebietDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WohneinheitenInformationDtoFromJSON(jsonValue));
    }

    /**
     * Das Ergebnis summiert die Informationen der im Baugebiet beinhalteten Bauraten
     * Berechne Informationen zu Wohneinheiten für ein Baugebiet
     */
    async calculateWohneinheitenInformation(requestParameters: CalculateWohneinheitenInformationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<WohneinheitenInformationDto> {
        const response = await this.calculateWohneinheitenInformationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Das Ergebnis summiert die Informationen der im Bauabschnitt beinhalteten Baugebiete
     * Berechne Informationen zu Wohneinheiten für einen Bauabschnitt
     */
    async calculateWohneinheitenInformation1Raw(requestParameters: CalculateWohneinheitenInformation1Request, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<WohneinheitenInformationDto>> {
        if (requestParameters.bauabschnittDto === null || requestParameters.bauabschnittDto === undefined) {
            throw new runtime.RequiredError('bauabschnittDto','Required parameter requestParameters.bauabschnittDto was null or undefined when calling calculateWohneinheitenInformation1.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/calculate-wohneinheiten-information-for-bauabschnitt`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BauabschnittDtoToJSON(requestParameters.bauabschnittDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WohneinheitenInformationDtoFromJSON(jsonValue));
    }

    /**
     * Das Ergebnis summiert die Informationen der im Bauabschnitt beinhalteten Baugebiete
     * Berechne Informationen zu Wohneinheiten für einen Bauabschnitt
     */
    async calculateWohneinheitenInformation1(requestParameters: CalculateWohneinheitenInformation1Request, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<WohneinheitenInformationDto> {
        const response = await this.calculateWohneinheitenInformation1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Das Ergebnis summiert die Informationen der in der Abfragevariante beinhalteten Bauabschnitte
     * Berechne Informationen zu Wohneinheiten für eine Abfragevariante
     */
    async calculateWohneinheitenInformation2Raw(requestParameters: CalculateWohneinheitenInformation2Request, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<WohneinheitenInformationDto>> {
        if (requestParameters.abfrageerstellungAbfragevarianteAngelegtDto === null || requestParameters.abfrageerstellungAbfragevarianteAngelegtDto === undefined) {
            throw new runtime.RequiredError('abfrageerstellungAbfragevarianteAngelegtDto','Required parameter requestParameters.abfrageerstellungAbfragevarianteAngelegtDto was null or undefined when calling calculateWohneinheitenInformation2.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/calculate-wohneinheiten-information-for-abfragevariante`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AbfrageerstellungAbfragevarianteAngelegtDtoToJSON(requestParameters.abfrageerstellungAbfragevarianteAngelegtDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WohneinheitenInformationDtoFromJSON(jsonValue));
    }

    /**
     * Das Ergebnis summiert die Informationen der in der Abfragevariante beinhalteten Bauabschnitte
     * Berechne Informationen zu Wohneinheiten für eine Abfragevariante
     */
    async calculateWohneinheitenInformation2(requestParameters: CalculateWohneinheitenInformation2Request, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<WohneinheitenInformationDto> {
        const response = await this.calculateWohneinheitenInformation2Raw(requestParameters, initOverrides);
        return await response.value();
    }

}

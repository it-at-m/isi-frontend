/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  EntityModelAbfragevarianteBaugenehmigungsverfahren,
} from '../models';
import {
    EntityModelAbfragevarianteBaugenehmigungsverfahrenFromJSON,
    EntityModelAbfragevarianteBaugenehmigungsverfahrenToJSON,
} from '../models';

export interface ExecuteSearchAbfragevariantebaugenehmigungsverfahrenGetRequest {
    id?: string;
}

export interface ExecuteSearchAbfragevariantebaugenehmigungsverfahrenGet1Request {
    id?: string;
}

/**
 * 
 */
export class AbfragevarianteBaugenehmigungsverfahrenSearchControllerApi extends runtime.BaseAPI {

    /**
     */
    async executeSearchAbfragevariantebaugenehmigungsverfahrenGetRaw(requestParameters: ExecuteSearchAbfragevariantebaugenehmigungsverfahrenGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelAbfragevarianteBaugenehmigungsverfahren>> {
        const queryParameters: any = {};

        if (requestParameters.id !== undefined) {
            queryParameters['id'] = requestParameters.id;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/abfragevarianteBaugenehmigungsverfahrens/search/findAbfrageIdForAbfragevarianteById`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelAbfragevarianteBaugenehmigungsverfahrenFromJSON(jsonValue));
    }

    /**
     */
    async executeSearchAbfragevariantebaugenehmigungsverfahrenGet(requestParameters: ExecuteSearchAbfragevariantebaugenehmigungsverfahrenGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelAbfragevarianteBaugenehmigungsverfahren> {
        const response = await this.executeSearchAbfragevariantebaugenehmigungsverfahrenGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async executeSearchAbfragevariantebaugenehmigungsverfahrenGet1Raw(requestParameters: ExecuteSearchAbfragevariantebaugenehmigungsverfahrenGet1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelAbfragevarianteBaugenehmigungsverfahren>> {
        const queryParameters: any = {};

        if (requestParameters.id !== undefined) {
            queryParameters['id'] = requestParameters.id;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/abfragevarianteBaugenehmigungsverfahrens/search/findAbfrageIdForAbfragevarianteSachbearbeitungById`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelAbfragevarianteBaugenehmigungsverfahrenFromJSON(jsonValue));
    }

    /**
     */
    async executeSearchAbfragevariantebaugenehmigungsverfahrenGet1(requestParameters: ExecuteSearchAbfragevariantebaugenehmigungsverfahrenGet1Request = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelAbfragevarianteBaugenehmigungsverfahren> {
        const response = await this.executeSearchAbfragevariantebaugenehmigungsverfahrenGet1Raw(requestParameters, initOverrides);
        return await response.value();
    }

}

/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  EntityModelUmlegungFoerderarten,
  PagedModelEntityModelUmlegungFoerderarten,
  UmlegungFoerderartenRequestBody,
} from '../models';
import {
    EntityModelUmlegungFoerderartenFromJSON,
    EntityModelUmlegungFoerderartenToJSON,
    PagedModelEntityModelUmlegungFoerderartenFromJSON,
    PagedModelEntityModelUmlegungFoerderartenToJSON,
    UmlegungFoerderartenRequestBodyFromJSON,
    UmlegungFoerderartenRequestBodyToJSON,
} from '../models';

export interface DeleteItemResourceUmlegungfoerderartenDeleteRequest {
    id: string;
}

export interface GetCollectionResourceUmlegungfoerderartenGet1Request {
    page?: number;
    size?: number;
    sort?: Array<string>;
}

export interface GetItemResourceUmlegungfoerderartenGetRequest {
    id: string;
}

export interface PatchItemResourceUmlegungfoerderartenPatchRequest {
    id: string;
    umlegungFoerderartenRequestBody: UmlegungFoerderartenRequestBody;
}

export interface PostCollectionResourceUmlegungfoerderartenPostRequest {
    umlegungFoerderartenRequestBody: UmlegungFoerderartenRequestBody;
}

export interface PutItemResourceUmlegungfoerderartenPutRequest {
    id: string;
    umlegungFoerderartenRequestBody: UmlegungFoerderartenRequestBody;
}

/**
 * 
 */
export class UmlegungFoerderartenEntityControllerApi extends runtime.BaseAPI {

    /**
     * delete-umlegungfoerderarten
     */
    async deleteItemResourceUmlegungfoerderartenDeleteRaw(requestParameters: DeleteItemResourceUmlegungfoerderartenDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteItemResourceUmlegungfoerderartenDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/umlegungFoerderartens/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * delete-umlegungfoerderarten
     */
    async deleteItemResourceUmlegungfoerderartenDelete(requestParameters: DeleteItemResourceUmlegungfoerderartenDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteItemResourceUmlegungfoerderartenDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * get-umlegungfoerderarten
     */
    async getCollectionResourceUmlegungfoerderartenGet1Raw(requestParameters: GetCollectionResourceUmlegungfoerderartenGet1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PagedModelEntityModelUmlegungFoerderarten>> {
        const queryParameters: any = {};

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.size !== undefined) {
            queryParameters['size'] = requestParameters.size;
        }

        if (requestParameters.sort) {
            queryParameters['sort'] = requestParameters.sort;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/umlegungFoerderartens`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PagedModelEntityModelUmlegungFoerderartenFromJSON(jsonValue));
    }

    /**
     * get-umlegungfoerderarten
     */
    async getCollectionResourceUmlegungfoerderartenGet1(requestParameters: GetCollectionResourceUmlegungfoerderartenGet1Request = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PagedModelEntityModelUmlegungFoerderarten> {
        const response = await this.getCollectionResourceUmlegungfoerderartenGet1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * get-umlegungfoerderarten
     */
    async getItemResourceUmlegungfoerderartenGetRaw(requestParameters: GetItemResourceUmlegungfoerderartenGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelUmlegungFoerderarten>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getItemResourceUmlegungfoerderartenGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/umlegungFoerderartens/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelUmlegungFoerderartenFromJSON(jsonValue));
    }

    /**
     * get-umlegungfoerderarten
     */
    async getItemResourceUmlegungfoerderartenGet(requestParameters: GetItemResourceUmlegungfoerderartenGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelUmlegungFoerderarten> {
        const response = await this.getItemResourceUmlegungfoerderartenGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * patch-umlegungfoerderarten
     */
    async patchItemResourceUmlegungfoerderartenPatchRaw(requestParameters: PatchItemResourceUmlegungfoerderartenPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelUmlegungFoerderarten>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling patchItemResourceUmlegungfoerderartenPatch.');
        }

        if (requestParameters.umlegungFoerderartenRequestBody === null || requestParameters.umlegungFoerderartenRequestBody === undefined) {
            throw new runtime.RequiredError('umlegungFoerderartenRequestBody','Required parameter requestParameters.umlegungFoerderartenRequestBody was null or undefined when calling patchItemResourceUmlegungfoerderartenPatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/umlegungFoerderartens/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: UmlegungFoerderartenRequestBodyToJSON(requestParameters.umlegungFoerderartenRequestBody),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelUmlegungFoerderartenFromJSON(jsonValue));
    }

    /**
     * patch-umlegungfoerderarten
     */
    async patchItemResourceUmlegungfoerderartenPatch(requestParameters: PatchItemResourceUmlegungfoerderartenPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelUmlegungFoerderarten> {
        const response = await this.patchItemResourceUmlegungfoerderartenPatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * create-umlegungfoerderarten
     */
    async postCollectionResourceUmlegungfoerderartenPostRaw(requestParameters: PostCollectionResourceUmlegungfoerderartenPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelUmlegungFoerderarten>> {
        if (requestParameters.umlegungFoerderartenRequestBody === null || requestParameters.umlegungFoerderartenRequestBody === undefined) {
            throw new runtime.RequiredError('umlegungFoerderartenRequestBody','Required parameter requestParameters.umlegungFoerderartenRequestBody was null or undefined when calling postCollectionResourceUmlegungfoerderartenPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/umlegungFoerderartens`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: UmlegungFoerderartenRequestBodyToJSON(requestParameters.umlegungFoerderartenRequestBody),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelUmlegungFoerderartenFromJSON(jsonValue));
    }

    /**
     * create-umlegungfoerderarten
     */
    async postCollectionResourceUmlegungfoerderartenPost(requestParameters: PostCollectionResourceUmlegungfoerderartenPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelUmlegungFoerderarten> {
        const response = await this.postCollectionResourceUmlegungfoerderartenPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * update-umlegungfoerderarten
     */
    async putItemResourceUmlegungfoerderartenPutRaw(requestParameters: PutItemResourceUmlegungfoerderartenPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelUmlegungFoerderarten>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling putItemResourceUmlegungfoerderartenPut.');
        }

        if (requestParameters.umlegungFoerderartenRequestBody === null || requestParameters.umlegungFoerderartenRequestBody === undefined) {
            throw new runtime.RequiredError('umlegungFoerderartenRequestBody','Required parameter requestParameters.umlegungFoerderartenRequestBody was null or undefined when calling putItemResourceUmlegungfoerderartenPut.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/umlegungFoerderartens/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: UmlegungFoerderartenRequestBodyToJSON(requestParameters.umlegungFoerderartenRequestBody),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelUmlegungFoerderartenFromJSON(jsonValue));
    }

    /**
     * update-umlegungfoerderarten
     */
    async putItemResourceUmlegungfoerderartenPut(requestParameters: PutItemResourceUmlegungfoerderartenPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelUmlegungFoerderarten> {
        const response = await this.putItemResourceUmlegungfoerderartenPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

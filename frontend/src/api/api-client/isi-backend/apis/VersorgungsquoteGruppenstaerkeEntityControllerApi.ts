/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  EntityModelVersorgungsquoteGruppenstaerke,
  PagedModelEntityModelVersorgungsquoteGruppenstaerke,
  VersorgungsquoteGruppenstaerkeRequestBody,
} from '../models';
import {
    EntityModelVersorgungsquoteGruppenstaerkeFromJSON,
    EntityModelVersorgungsquoteGruppenstaerkeToJSON,
    PagedModelEntityModelVersorgungsquoteGruppenstaerkeFromJSON,
    PagedModelEntityModelVersorgungsquoteGruppenstaerkeToJSON,
    VersorgungsquoteGruppenstaerkeRequestBodyFromJSON,
    VersorgungsquoteGruppenstaerkeRequestBodyToJSON,
} from '../models';

export interface DeleteItemResourceVersorgungsquotegruppenstaerkeDeleteRequest {
    id: string;
}

export interface GetCollectionResourceVersorgungsquotegruppenstaerkeGet1Request {
    page?: number;
    size?: number;
    sort?: Array<string>;
}

export interface GetItemResourceVersorgungsquotegruppenstaerkeGetRequest {
    id: string;
}

export interface PatchItemResourceVersorgungsquotegruppenstaerkePatchRequest {
    id: string;
    versorgungsquoteGruppenstaerkeRequestBody: VersorgungsquoteGruppenstaerkeRequestBody;
}

export interface PostCollectionResourceVersorgungsquotegruppenstaerkePostRequest {
    versorgungsquoteGruppenstaerkeRequestBody: VersorgungsquoteGruppenstaerkeRequestBody;
}

export interface PutItemResourceVersorgungsquotegruppenstaerkePutRequest {
    id: string;
    versorgungsquoteGruppenstaerkeRequestBody: VersorgungsquoteGruppenstaerkeRequestBody;
}

/**
 * 
 */
export class VersorgungsquoteGruppenstaerkeEntityControllerApi extends runtime.BaseAPI {

    /**
     * delete-versorgungsquotegruppenstaerke
     */
    async deleteItemResourceVersorgungsquotegruppenstaerkeDeleteRaw(requestParameters: DeleteItemResourceVersorgungsquotegruppenstaerkeDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteItemResourceVersorgungsquotegruppenstaerkeDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/versorgungsquoteGruppenstaerkes/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * delete-versorgungsquotegruppenstaerke
     */
    async deleteItemResourceVersorgungsquotegruppenstaerkeDelete(requestParameters: DeleteItemResourceVersorgungsquotegruppenstaerkeDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteItemResourceVersorgungsquotegruppenstaerkeDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * get-versorgungsquotegruppenstaerke
     */
    async getCollectionResourceVersorgungsquotegruppenstaerkeGet1Raw(requestParameters: GetCollectionResourceVersorgungsquotegruppenstaerkeGet1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PagedModelEntityModelVersorgungsquoteGruppenstaerke>> {
        const queryParameters: any = {};

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.size !== undefined) {
            queryParameters['size'] = requestParameters.size;
        }

        if (requestParameters.sort) {
            queryParameters['sort'] = requestParameters.sort;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/versorgungsquoteGruppenstaerkes`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PagedModelEntityModelVersorgungsquoteGruppenstaerkeFromJSON(jsonValue));
    }

    /**
     * get-versorgungsquotegruppenstaerke
     */
    async getCollectionResourceVersorgungsquotegruppenstaerkeGet1(requestParameters: GetCollectionResourceVersorgungsquotegruppenstaerkeGet1Request = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PagedModelEntityModelVersorgungsquoteGruppenstaerke> {
        const response = await this.getCollectionResourceVersorgungsquotegruppenstaerkeGet1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * get-versorgungsquotegruppenstaerke
     */
    async getItemResourceVersorgungsquotegruppenstaerkeGetRaw(requestParameters: GetItemResourceVersorgungsquotegruppenstaerkeGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelVersorgungsquoteGruppenstaerke>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getItemResourceVersorgungsquotegruppenstaerkeGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/versorgungsquoteGruppenstaerkes/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelVersorgungsquoteGruppenstaerkeFromJSON(jsonValue));
    }

    /**
     * get-versorgungsquotegruppenstaerke
     */
    async getItemResourceVersorgungsquotegruppenstaerkeGet(requestParameters: GetItemResourceVersorgungsquotegruppenstaerkeGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelVersorgungsquoteGruppenstaerke> {
        const response = await this.getItemResourceVersorgungsquotegruppenstaerkeGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * patch-versorgungsquotegruppenstaerke
     */
    async patchItemResourceVersorgungsquotegruppenstaerkePatchRaw(requestParameters: PatchItemResourceVersorgungsquotegruppenstaerkePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelVersorgungsquoteGruppenstaerke>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling patchItemResourceVersorgungsquotegruppenstaerkePatch.');
        }

        if (requestParameters.versorgungsquoteGruppenstaerkeRequestBody === null || requestParameters.versorgungsquoteGruppenstaerkeRequestBody === undefined) {
            throw new runtime.RequiredError('versorgungsquoteGruppenstaerkeRequestBody','Required parameter requestParameters.versorgungsquoteGruppenstaerkeRequestBody was null or undefined when calling patchItemResourceVersorgungsquotegruppenstaerkePatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/versorgungsquoteGruppenstaerkes/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: VersorgungsquoteGruppenstaerkeRequestBodyToJSON(requestParameters.versorgungsquoteGruppenstaerkeRequestBody),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelVersorgungsquoteGruppenstaerkeFromJSON(jsonValue));
    }

    /**
     * patch-versorgungsquotegruppenstaerke
     */
    async patchItemResourceVersorgungsquotegruppenstaerkePatch(requestParameters: PatchItemResourceVersorgungsquotegruppenstaerkePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelVersorgungsquoteGruppenstaerke> {
        const response = await this.patchItemResourceVersorgungsquotegruppenstaerkePatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * create-versorgungsquotegruppenstaerke
     */
    async postCollectionResourceVersorgungsquotegruppenstaerkePostRaw(requestParameters: PostCollectionResourceVersorgungsquotegruppenstaerkePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelVersorgungsquoteGruppenstaerke>> {
        if (requestParameters.versorgungsquoteGruppenstaerkeRequestBody === null || requestParameters.versorgungsquoteGruppenstaerkeRequestBody === undefined) {
            throw new runtime.RequiredError('versorgungsquoteGruppenstaerkeRequestBody','Required parameter requestParameters.versorgungsquoteGruppenstaerkeRequestBody was null or undefined when calling postCollectionResourceVersorgungsquotegruppenstaerkePost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/versorgungsquoteGruppenstaerkes`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: VersorgungsquoteGruppenstaerkeRequestBodyToJSON(requestParameters.versorgungsquoteGruppenstaerkeRequestBody),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelVersorgungsquoteGruppenstaerkeFromJSON(jsonValue));
    }

    /**
     * create-versorgungsquotegruppenstaerke
     */
    async postCollectionResourceVersorgungsquotegruppenstaerkePost(requestParameters: PostCollectionResourceVersorgungsquotegruppenstaerkePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelVersorgungsquoteGruppenstaerke> {
        const response = await this.postCollectionResourceVersorgungsquotegruppenstaerkePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * update-versorgungsquotegruppenstaerke
     */
    async putItemResourceVersorgungsquotegruppenstaerkePutRaw(requestParameters: PutItemResourceVersorgungsquotegruppenstaerkePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelVersorgungsquoteGruppenstaerke>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling putItemResourceVersorgungsquotegruppenstaerkePut.');
        }

        if (requestParameters.versorgungsquoteGruppenstaerkeRequestBody === null || requestParameters.versorgungsquoteGruppenstaerkeRequestBody === undefined) {
            throw new runtime.RequiredError('versorgungsquoteGruppenstaerkeRequestBody','Required parameter requestParameters.versorgungsquoteGruppenstaerkeRequestBody was null or undefined when calling putItemResourceVersorgungsquotegruppenstaerkePut.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/versorgungsquoteGruppenstaerkes/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: VersorgungsquoteGruppenstaerkeRequestBodyToJSON(requestParameters.versorgungsquoteGruppenstaerkeRequestBody),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelVersorgungsquoteGruppenstaerkeFromJSON(jsonValue));
    }

    /**
     * update-versorgungsquotegruppenstaerke
     */
    async putItemResourceVersorgungsquotegruppenstaerkePut(requestParameters: PutItemResourceVersorgungsquotegruppenstaerkePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelVersorgungsquoteGruppenstaerke> {
        const response = await this.putItemResourceVersorgungsquotegruppenstaerkePutRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

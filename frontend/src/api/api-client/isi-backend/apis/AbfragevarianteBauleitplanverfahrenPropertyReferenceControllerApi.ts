/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CollectionModelDokument,
  CollectionModelObject,
} from '../models';
import {
    CollectionModelDokumentFromJSON,
    CollectionModelDokumentToJSON,
    CollectionModelObjectFromJSON,
    CollectionModelObjectToJSON,
} from '../models';

export interface CreatePropertyReferenceAbfragevariantebauleitplanverfahrenPatchRequest {
    id: string;
    collectionModelObject: CollectionModelObject;
}

export interface CreatePropertyReferenceAbfragevariantebauleitplanverfahrenPutRequest {
    id: string;
    collectionModelObject: CollectionModelObject;
}

export interface DeletePropertyReferenceAbfragevariantebauleitplanverfahrenDeleteRequest {
    id: string;
}

export interface DeletePropertyReferenceIdAbfragevariantebauleitplanverfahrenDeleteRequest {
    id: string;
    propertyId: string;
}

export interface FollowPropertyReferenceAbfragevariantebauleitplanverfahrenGetRequest {
    id: string;
    propertyId: string;
}

export interface FollowPropertyReferenceAbfragevariantebauleitplanverfahrenGet1Request {
    id: string;
}

/**
 * 
 */
export class AbfragevarianteBauleitplanverfahrenPropertyReferenceControllerApi extends runtime.BaseAPI {

    /**
     * patch-dokument-by-abfragevariantebauleitplanverfahren-Id
     */
    async createPropertyReferenceAbfragevariantebauleitplanverfahrenPatchRaw(requestParameters: CreatePropertyReferenceAbfragevariantebauleitplanverfahrenPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelDokument>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling createPropertyReferenceAbfragevariantebauleitplanverfahrenPatch.');
        }

        if (requestParameters.collectionModelObject === null || requestParameters.collectionModelObject === undefined) {
            throw new runtime.RequiredError('collectionModelObject','Required parameter requestParameters.collectionModelObject was null or undefined when calling createPropertyReferenceAbfragevariantebauleitplanverfahrenPatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/abfragevarianteBauleitplanverfahrens/{id}/dokumente`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: CollectionModelObjectToJSON(requestParameters.collectionModelObject),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionModelDokumentFromJSON(jsonValue));
    }

    /**
     * patch-dokument-by-abfragevariantebauleitplanverfahren-Id
     */
    async createPropertyReferenceAbfragevariantebauleitplanverfahrenPatch(requestParameters: CreatePropertyReferenceAbfragevariantebauleitplanverfahrenPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelDokument> {
        const response = await this.createPropertyReferenceAbfragevariantebauleitplanverfahrenPatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * update-dokument-by-abfragevariantebauleitplanverfahren-Id
     */
    async createPropertyReferenceAbfragevariantebauleitplanverfahrenPutRaw(requestParameters: CreatePropertyReferenceAbfragevariantebauleitplanverfahrenPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelDokument>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling createPropertyReferenceAbfragevariantebauleitplanverfahrenPut.');
        }

        if (requestParameters.collectionModelObject === null || requestParameters.collectionModelObject === undefined) {
            throw new runtime.RequiredError('collectionModelObject','Required parameter requestParameters.collectionModelObject was null or undefined when calling createPropertyReferenceAbfragevariantebauleitplanverfahrenPut.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/abfragevarianteBauleitplanverfahrens/{id}/dokumente`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: CollectionModelObjectToJSON(requestParameters.collectionModelObject),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionModelDokumentFromJSON(jsonValue));
    }

    /**
     * update-dokument-by-abfragevariantebauleitplanverfahren-Id
     */
    async createPropertyReferenceAbfragevariantebauleitplanverfahrenPut(requestParameters: CreatePropertyReferenceAbfragevariantebauleitplanverfahrenPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelDokument> {
        const response = await this.createPropertyReferenceAbfragevariantebauleitplanverfahrenPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * delete-dokument-by-abfragevariantebauleitplanverfahren-Id
     */
    async deletePropertyReferenceAbfragevariantebauleitplanverfahrenDeleteRaw(requestParameters: DeletePropertyReferenceAbfragevariantebauleitplanverfahrenDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deletePropertyReferenceAbfragevariantebauleitplanverfahrenDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/abfragevarianteBauleitplanverfahrens/{id}/dokumente`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * delete-dokument-by-abfragevariantebauleitplanverfahren-Id
     */
    async deletePropertyReferenceAbfragevariantebauleitplanverfahrenDelete(requestParameters: DeletePropertyReferenceAbfragevariantebauleitplanverfahrenDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deletePropertyReferenceAbfragevariantebauleitplanverfahrenDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * delete-dokument-by-abfragevariantebauleitplanverfahren-Id
     */
    async deletePropertyReferenceIdAbfragevariantebauleitplanverfahrenDeleteRaw(requestParameters: DeletePropertyReferenceIdAbfragevariantebauleitplanverfahrenDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deletePropertyReferenceIdAbfragevariantebauleitplanverfahrenDelete.');
        }

        if (requestParameters.propertyId === null || requestParameters.propertyId === undefined) {
            throw new runtime.RequiredError('propertyId','Required parameter requestParameters.propertyId was null or undefined when calling deletePropertyReferenceIdAbfragevariantebauleitplanverfahrenDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/abfragevarianteBauleitplanverfahrens/{id}/dokumente/{propertyId}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))).replace(`{${"propertyId"}}`, encodeURIComponent(String(requestParameters.propertyId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * delete-dokument-by-abfragevariantebauleitplanverfahren-Id
     */
    async deletePropertyReferenceIdAbfragevariantebauleitplanverfahrenDelete(requestParameters: DeletePropertyReferenceIdAbfragevariantebauleitplanverfahrenDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deletePropertyReferenceIdAbfragevariantebauleitplanverfahrenDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * get-dokument-by-abfragevariantebauleitplanverfahren-Id
     */
    async followPropertyReferenceAbfragevariantebauleitplanverfahrenGetRaw(requestParameters: FollowPropertyReferenceAbfragevariantebauleitplanverfahrenGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelDokument>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling followPropertyReferenceAbfragevariantebauleitplanverfahrenGet.');
        }

        if (requestParameters.propertyId === null || requestParameters.propertyId === undefined) {
            throw new runtime.RequiredError('propertyId','Required parameter requestParameters.propertyId was null or undefined when calling followPropertyReferenceAbfragevariantebauleitplanverfahrenGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/abfragevarianteBauleitplanverfahrens/{id}/dokumente/{propertyId}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))).replace(`{${"propertyId"}}`, encodeURIComponent(String(requestParameters.propertyId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionModelDokumentFromJSON(jsonValue));
    }

    /**
     * get-dokument-by-abfragevariantebauleitplanverfahren-Id
     */
    async followPropertyReferenceAbfragevariantebauleitplanverfahrenGet(requestParameters: FollowPropertyReferenceAbfragevariantebauleitplanverfahrenGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelDokument> {
        const response = await this.followPropertyReferenceAbfragevariantebauleitplanverfahrenGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * get-dokument-by-abfragevariantebauleitplanverfahren-Id
     */
    async followPropertyReferenceAbfragevariantebauleitplanverfahrenGet1Raw(requestParameters: FollowPropertyReferenceAbfragevariantebauleitplanverfahrenGet1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelDokument>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling followPropertyReferenceAbfragevariantebauleitplanverfahrenGet1.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/abfragevarianteBauleitplanverfahrens/{id}/dokumente`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionModelDokumentFromJSON(jsonValue));
    }

    /**
     * get-dokument-by-abfragevariantebauleitplanverfahren-Id
     */
    async followPropertyReferenceAbfragevariantebauleitplanverfahrenGet1(requestParameters: FollowPropertyReferenceAbfragevariantebauleitplanverfahrenGet1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelDokument> {
        const response = await this.followPropertyReferenceAbfragevariantebauleitplanverfahrenGet1Raw(requestParameters, initOverrides);
        return await response.value();
    }

}

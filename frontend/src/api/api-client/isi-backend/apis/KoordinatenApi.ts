/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  InformationResponseDto,
  UtmDto,
  Wgs84Dto,
} from '../models';
import {
    InformationResponseDtoFromJSON,
    InformationResponseDtoToJSON,
    UtmDtoFromJSON,
    UtmDtoToJSON,
    Wgs84DtoFromJSON,
    Wgs84DtoToJSON,
} from '../models';

export interface Utm32ToWgs84Request {
    utmDto: UtmDto;
}

export interface Wgs84toUtm32Request {
    wgs84Dto: Wgs84Dto;
}

/**
 * 
 */
export class KoordinatenApi extends runtime.BaseAPI {

    /**
     * Umrechnung UTM32 zu WGS84
     */
    async utm32ToWgs84Raw(requestParameters: Utm32ToWgs84Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Wgs84Dto>> {
        if (requestParameters.utmDto === null || requestParameters.utmDto === undefined) {
            throw new runtime.RequiredError('utmDto','Required parameter requestParameters.utmDto was null or undefined when calling utm32ToWgs84.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/utm-to-wgs`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: UtmDtoToJSON(requestParameters.utmDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => Wgs84DtoFromJSON(jsonValue));
    }

    /**
     * Umrechnung UTM32 zu WGS84
     */
    async utm32ToWgs84(requestParameters: Utm32ToWgs84Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Wgs84Dto> {
        const response = await this.utm32ToWgs84Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Umrechnung Wgs84 zu UTM
     */
    async wgs84toUtm32Raw(requestParameters: Wgs84toUtm32Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UtmDto>> {
        if (requestParameters.wgs84Dto === null || requestParameters.wgs84Dto === undefined) {
            throw new runtime.RequiredError('wgs84Dto','Required parameter requestParameters.wgs84Dto was null or undefined when calling wgs84toUtm32.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/wgs-to-utm`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: Wgs84DtoToJSON(requestParameters.wgs84Dto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UtmDtoFromJSON(jsonValue));
    }

    /**
     * Umrechnung Wgs84 zu UTM
     */
    async wgs84toUtm32(requestParameters: Wgs84toUtm32Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UtmDto> {
        const response = await this.wgs84toUtm32Raw(requestParameters, initOverrides);
        return await response.value();
    }

}

/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CollectionModelDokument,
  CollectionModelObject,
  EntityModelAbfragevariante,
} from '../models';
import {
    CollectionModelDokumentFromJSON,
    CollectionModelDokumentToJSON,
    CollectionModelObjectFromJSON,
    CollectionModelObjectToJSON,
    EntityModelAbfragevarianteFromJSON,
    EntityModelAbfragevarianteToJSON,
} from '../models';

export interface CreatePropertyReferenceBauvorhabenPatchRequest {
    id: string;
    collectionModelObject: CollectionModelObject;
}

export interface CreatePropertyReferenceBauvorhabenPatch1Request {
    id: string;
    collectionModelObject: CollectionModelObject;
}

export interface CreatePropertyReferenceBauvorhabenPutRequest {
    id: string;
    collectionModelObject: CollectionModelObject;
}

export interface CreatePropertyReferenceBauvorhabenPut1Request {
    id: string;
    collectionModelObject: CollectionModelObject;
}

export interface DeletePropertyReferenceBauvorhabenDeleteRequest {
    id: string;
}

export interface DeletePropertyReferenceBauvorhabenDelete1Request {
    id: string;
}

export interface DeletePropertyReferenceIdBauvorhabenDeleteRequest {
    id: string;
    propertyId: string;
}

export interface DeletePropertyReferenceIdBauvorhabenDelete1Request {
    id: string;
    propertyId: string;
}

export interface FollowPropertyReferenceBauvorhabenGetRequest {
    id: string;
    propertyId: string;
}

export interface FollowPropertyReferenceBauvorhabenGet1Request {
    id: string;
}

export interface FollowPropertyReferenceBauvorhabenGet2Request {
    id: string;
    propertyId: string;
}

export interface FollowPropertyReferenceBauvorhabenGet21Request {
    id: string;
}

/**
 * 
 */
export class BauvorhabenPropertyReferenceControllerApi extends runtime.BaseAPI {

    /**
     * patch-dokument-by-bauvorhaben-Id
     */
    async createPropertyReferenceBauvorhabenPatchRaw(requestParameters: CreatePropertyReferenceBauvorhabenPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelDokument>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling createPropertyReferenceBauvorhabenPatch.');
        }

        if (requestParameters.collectionModelObject === null || requestParameters.collectionModelObject === undefined) {
            throw new runtime.RequiredError('collectionModelObject','Required parameter requestParameters.collectionModelObject was null or undefined when calling createPropertyReferenceBauvorhabenPatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/bauvorhabens/{id}/dokumente`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: CollectionModelObjectToJSON(requestParameters.collectionModelObject),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionModelDokumentFromJSON(jsonValue));
    }

    /**
     * patch-dokument-by-bauvorhaben-Id
     */
    async createPropertyReferenceBauvorhabenPatch(requestParameters: CreatePropertyReferenceBauvorhabenPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelDokument> {
        const response = await this.createPropertyReferenceBauvorhabenPatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * patch-abfragevariante-by-bauvorhaben-Id
     */
    async createPropertyReferenceBauvorhabenPatch1Raw(requestParameters: CreatePropertyReferenceBauvorhabenPatch1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelAbfragevariante>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling createPropertyReferenceBauvorhabenPatch1.');
        }

        if (requestParameters.collectionModelObject === null || requestParameters.collectionModelObject === undefined) {
            throw new runtime.RequiredError('collectionModelObject','Required parameter requestParameters.collectionModelObject was null or undefined when calling createPropertyReferenceBauvorhabenPatch1.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/bauvorhabens/{id}/relevanteAbfragevariante`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: CollectionModelObjectToJSON(requestParameters.collectionModelObject),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelAbfragevarianteFromJSON(jsonValue));
    }

    /**
     * patch-abfragevariante-by-bauvorhaben-Id
     */
    async createPropertyReferenceBauvorhabenPatch1(requestParameters: CreatePropertyReferenceBauvorhabenPatch1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelAbfragevariante> {
        const response = await this.createPropertyReferenceBauvorhabenPatch1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * update-dokument-by-bauvorhaben-Id
     */
    async createPropertyReferenceBauvorhabenPutRaw(requestParameters: CreatePropertyReferenceBauvorhabenPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelDokument>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling createPropertyReferenceBauvorhabenPut.');
        }

        if (requestParameters.collectionModelObject === null || requestParameters.collectionModelObject === undefined) {
            throw new runtime.RequiredError('collectionModelObject','Required parameter requestParameters.collectionModelObject was null or undefined when calling createPropertyReferenceBauvorhabenPut.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/bauvorhabens/{id}/dokumente`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: CollectionModelObjectToJSON(requestParameters.collectionModelObject),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionModelDokumentFromJSON(jsonValue));
    }

    /**
     * update-dokument-by-bauvorhaben-Id
     */
    async createPropertyReferenceBauvorhabenPut(requestParameters: CreatePropertyReferenceBauvorhabenPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelDokument> {
        const response = await this.createPropertyReferenceBauvorhabenPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * update-abfragevariante-by-bauvorhaben-Id
     */
    async createPropertyReferenceBauvorhabenPut1Raw(requestParameters: CreatePropertyReferenceBauvorhabenPut1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelAbfragevariante>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling createPropertyReferenceBauvorhabenPut1.');
        }

        if (requestParameters.collectionModelObject === null || requestParameters.collectionModelObject === undefined) {
            throw new runtime.RequiredError('collectionModelObject','Required parameter requestParameters.collectionModelObject was null or undefined when calling createPropertyReferenceBauvorhabenPut1.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/bauvorhabens/{id}/relevanteAbfragevariante`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: CollectionModelObjectToJSON(requestParameters.collectionModelObject),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelAbfragevarianteFromJSON(jsonValue));
    }

    /**
     * update-abfragevariante-by-bauvorhaben-Id
     */
    async createPropertyReferenceBauvorhabenPut1(requestParameters: CreatePropertyReferenceBauvorhabenPut1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelAbfragevariante> {
        const response = await this.createPropertyReferenceBauvorhabenPut1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * delete-dokument-by-bauvorhaben-Id
     */
    async deletePropertyReferenceBauvorhabenDeleteRaw(requestParameters: DeletePropertyReferenceBauvorhabenDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deletePropertyReferenceBauvorhabenDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/bauvorhabens/{id}/dokumente`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * delete-dokument-by-bauvorhaben-Id
     */
    async deletePropertyReferenceBauvorhabenDelete(requestParameters: DeletePropertyReferenceBauvorhabenDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deletePropertyReferenceBauvorhabenDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * delete-abfragevariante-by-bauvorhaben-Id
     */
    async deletePropertyReferenceBauvorhabenDelete1Raw(requestParameters: DeletePropertyReferenceBauvorhabenDelete1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deletePropertyReferenceBauvorhabenDelete1.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/bauvorhabens/{id}/relevanteAbfragevariante`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * delete-abfragevariante-by-bauvorhaben-Id
     */
    async deletePropertyReferenceBauvorhabenDelete1(requestParameters: DeletePropertyReferenceBauvorhabenDelete1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deletePropertyReferenceBauvorhabenDelete1Raw(requestParameters, initOverrides);
    }

    /**
     * delete-dokument-by-bauvorhaben-Id
     */
    async deletePropertyReferenceIdBauvorhabenDeleteRaw(requestParameters: DeletePropertyReferenceIdBauvorhabenDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deletePropertyReferenceIdBauvorhabenDelete.');
        }

        if (requestParameters.propertyId === null || requestParameters.propertyId === undefined) {
            throw new runtime.RequiredError('propertyId','Required parameter requestParameters.propertyId was null or undefined when calling deletePropertyReferenceIdBauvorhabenDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/bauvorhabens/{id}/dokumente/{propertyId}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))).replace(`{${"propertyId"}}`, encodeURIComponent(String(requestParameters.propertyId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * delete-dokument-by-bauvorhaben-Id
     */
    async deletePropertyReferenceIdBauvorhabenDelete(requestParameters: DeletePropertyReferenceIdBauvorhabenDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deletePropertyReferenceIdBauvorhabenDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * delete-abfragevariante-by-bauvorhaben-Id
     */
    async deletePropertyReferenceIdBauvorhabenDelete1Raw(requestParameters: DeletePropertyReferenceIdBauvorhabenDelete1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deletePropertyReferenceIdBauvorhabenDelete1.');
        }

        if (requestParameters.propertyId === null || requestParameters.propertyId === undefined) {
            throw new runtime.RequiredError('propertyId','Required parameter requestParameters.propertyId was null or undefined when calling deletePropertyReferenceIdBauvorhabenDelete1.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/bauvorhabens/{id}/relevanteAbfragevariante/{propertyId}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))).replace(`{${"propertyId"}}`, encodeURIComponent(String(requestParameters.propertyId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * delete-abfragevariante-by-bauvorhaben-Id
     */
    async deletePropertyReferenceIdBauvorhabenDelete1(requestParameters: DeletePropertyReferenceIdBauvorhabenDelete1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deletePropertyReferenceIdBauvorhabenDelete1Raw(requestParameters, initOverrides);
    }

    /**
     * get-dokument-by-bauvorhaben-Id
     */
    async followPropertyReferenceBauvorhabenGetRaw(requestParameters: FollowPropertyReferenceBauvorhabenGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelDokument>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling followPropertyReferenceBauvorhabenGet.');
        }

        if (requestParameters.propertyId === null || requestParameters.propertyId === undefined) {
            throw new runtime.RequiredError('propertyId','Required parameter requestParameters.propertyId was null or undefined when calling followPropertyReferenceBauvorhabenGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/bauvorhabens/{id}/dokumente/{propertyId}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))).replace(`{${"propertyId"}}`, encodeURIComponent(String(requestParameters.propertyId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionModelDokumentFromJSON(jsonValue));
    }

    /**
     * get-dokument-by-bauvorhaben-Id
     */
    async followPropertyReferenceBauvorhabenGet(requestParameters: FollowPropertyReferenceBauvorhabenGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelDokument> {
        const response = await this.followPropertyReferenceBauvorhabenGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * get-dokument-by-bauvorhaben-Id
     */
    async followPropertyReferenceBauvorhabenGet1Raw(requestParameters: FollowPropertyReferenceBauvorhabenGet1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelDokument>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling followPropertyReferenceBauvorhabenGet1.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/bauvorhabens/{id}/dokumente`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionModelDokumentFromJSON(jsonValue));
    }

    /**
     * get-dokument-by-bauvorhaben-Id
     */
    async followPropertyReferenceBauvorhabenGet1(requestParameters: FollowPropertyReferenceBauvorhabenGet1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelDokument> {
        const response = await this.followPropertyReferenceBauvorhabenGet1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * get-abfragevariante-by-bauvorhaben-Id
     */
    async followPropertyReferenceBauvorhabenGet2Raw(requestParameters: FollowPropertyReferenceBauvorhabenGet2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelAbfragevariante>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling followPropertyReferenceBauvorhabenGet2.');
        }

        if (requestParameters.propertyId === null || requestParameters.propertyId === undefined) {
            throw new runtime.RequiredError('propertyId','Required parameter requestParameters.propertyId was null or undefined when calling followPropertyReferenceBauvorhabenGet2.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/bauvorhabens/{id}/relevanteAbfragevariante/{propertyId}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))).replace(`{${"propertyId"}}`, encodeURIComponent(String(requestParameters.propertyId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelAbfragevarianteFromJSON(jsonValue));
    }

    /**
     * get-abfragevariante-by-bauvorhaben-Id
     */
    async followPropertyReferenceBauvorhabenGet2(requestParameters: FollowPropertyReferenceBauvorhabenGet2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelAbfragevariante> {
        const response = await this.followPropertyReferenceBauvorhabenGet2Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * get-abfragevariante-by-bauvorhaben-Id
     */
    async followPropertyReferenceBauvorhabenGet21Raw(requestParameters: FollowPropertyReferenceBauvorhabenGet21Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelAbfragevariante>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling followPropertyReferenceBauvorhabenGet21.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/bauvorhabens/{id}/relevanteAbfragevariante`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelAbfragevarianteFromJSON(jsonValue));
    }

    /**
     * get-abfragevariante-by-bauvorhaben-Id
     */
    async followPropertyReferenceBauvorhabenGet21(requestParameters: FollowPropertyReferenceBauvorhabenGet21Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelAbfragevariante> {
        const response = await this.followPropertyReferenceBauvorhabenGet21Raw(requestParameters, initOverrides);
        return await response.value();
    }

}

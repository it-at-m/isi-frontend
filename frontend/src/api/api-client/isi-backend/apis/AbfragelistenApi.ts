/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Serivce für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    AbfrageListElementsDto,
    AbfrageListElementsDtoFromJSON,
    AbfrageListElementsDtoToJSON,
} from '../models';

export interface GetAbfrageListElementsThatReferenceBauvorhabenRequest {
    id: string;
}

/**
 * 
 */
export class AbfragelistenApi extends runtime.BaseAPI {

    /**
     * Lade alle Abfragen für die Listendarstellung
     */
    async getAbfrageListElementsRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<AbfrageListElementsDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/abfragen`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AbfrageListElementsDtoFromJSON(jsonValue));
    }

    /**
     * Lade alle Abfragen für die Listendarstellung
     */
    async getAbfrageListElements(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<AbfrageListElementsDto> {
        const response = await this.getAbfrageListElementsRaw(initOverrides);
        return await response.value();
    }

    /**
     * Lade alle Abfragen die ein Bauvorhaben referenzieren für die Listendarstellung
     */
    async getAbfrageListElementsThatReferenceBauvorhabenRaw(requestParameters: GetAbfrageListElementsThatReferenceBauvorhabenRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<AbfrageListElementsDto>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getAbfrageListElementsThatReferenceBauvorhaben.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/abfragen/bauvorhaben/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AbfrageListElementsDtoFromJSON(jsonValue));
    }

    /**
     * Lade alle Abfragen die ein Bauvorhaben referenzieren für die Listendarstellung
     */
    async getAbfrageListElementsThatReferenceBauvorhaben(requestParameters: GetAbfrageListElementsThatReferenceBauvorhabenRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<AbfrageListElementsDto> {
        const response = await this.getAbfrageListElementsThatReferenceBauvorhabenRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

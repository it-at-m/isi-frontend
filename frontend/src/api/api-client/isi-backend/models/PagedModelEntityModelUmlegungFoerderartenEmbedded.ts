/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EntityModelUmlegungFoerderarten } from './EntityModelUmlegungFoerderarten';
import {
    EntityModelUmlegungFoerderartenFromJSON,
    EntityModelUmlegungFoerderartenFromJSONTyped,
    EntityModelUmlegungFoerderartenToJSON,
} from './EntityModelUmlegungFoerderarten';

/**
 * 
 * @export
 * @interface PagedModelEntityModelUmlegungFoerderartenEmbedded
 */
export interface PagedModelEntityModelUmlegungFoerderartenEmbedded {
    /**
     * 
     * @type {Array<EntityModelUmlegungFoerderarten>}
     * @memberof PagedModelEntityModelUmlegungFoerderartenEmbedded
     */
    umlegungFoerderartens?: Array<EntityModelUmlegungFoerderarten>;
}

/**
 * Check if a given object implements the PagedModelEntityModelUmlegungFoerderartenEmbedded interface.
 */
export function instanceOfPagedModelEntityModelUmlegungFoerderartenEmbedded(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PagedModelEntityModelUmlegungFoerderartenEmbeddedFromJSON(json: any): PagedModelEntityModelUmlegungFoerderartenEmbedded {
    return PagedModelEntityModelUmlegungFoerderartenEmbeddedFromJSONTyped(json, false);
}

export function PagedModelEntityModelUmlegungFoerderartenEmbeddedFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagedModelEntityModelUmlegungFoerderartenEmbedded {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'umlegungFoerderartens': !exists(json, 'umlegungFoerderartens') ? undefined : ((json['umlegungFoerderartens'] as Array<any>).map(EntityModelUmlegungFoerderartenFromJSON)),
    };
}

export function PagedModelEntityModelUmlegungFoerderartenEmbeddedToJSON(value?: PagedModelEntityModelUmlegungFoerderartenEmbedded | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'umlegungFoerderartens': value.umlegungFoerderartens === undefined ? undefined : ((value.umlegungFoerderartens as Array<any>).map(EntityModelUmlegungFoerderartenToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BaugenehmigungsverfahrenInBearbeitungSachbearbeitungDto } from './BaugenehmigungsverfahrenInBearbeitungSachbearbeitungDto';
import {
    BaugenehmigungsverfahrenInBearbeitungSachbearbeitungDtoFromJSON,
    BaugenehmigungsverfahrenInBearbeitungSachbearbeitungDtoFromJSONTyped,
    BaugenehmigungsverfahrenInBearbeitungSachbearbeitungDtoToJSON,
} from './BaugenehmigungsverfahrenInBearbeitungSachbearbeitungDto';
import type { BauleitplanverfahrenInBearbeitungSachbearbeitungDto } from './BauleitplanverfahrenInBearbeitungSachbearbeitungDto';
import {
    BauleitplanverfahrenInBearbeitungSachbearbeitungDtoFromJSON,
    BauleitplanverfahrenInBearbeitungSachbearbeitungDtoFromJSONTyped,
    BauleitplanverfahrenInBearbeitungSachbearbeitungDtoToJSON,
} from './BauleitplanverfahrenInBearbeitungSachbearbeitungDto';
import type { WeiteresVerfahrenInBearbeitungSachbearbeitungDto } from './WeiteresVerfahrenInBearbeitungSachbearbeitungDto';
import {
    WeiteresVerfahrenInBearbeitungSachbearbeitungDtoFromJSON,
    WeiteresVerfahrenInBearbeitungSachbearbeitungDtoFromJSONTyped,
    WeiteresVerfahrenInBearbeitungSachbearbeitungDtoToJSON,
} from './WeiteresVerfahrenInBearbeitungSachbearbeitungDto';

import {
     BaugenehmigungsverfahrenInBearbeitungSachbearbeitungDtoFromJSONTyped,
     BauleitplanverfahrenInBearbeitungSachbearbeitungDtoFromJSONTyped,
     WeiteresVerfahrenInBearbeitungSachbearbeitungDtoFromJSONTyped
} from './';

/**
 * AbfrageInBearbeitungSachbearbeitungDto
 * @export
 * @interface AbfrageInBearbeitungSachbearbeitungDto
 */
export interface AbfrageInBearbeitungSachbearbeitungDto {
    /**
     * 
     * @type {number}
     * @memberof AbfrageInBearbeitungSachbearbeitungDto
     */
    version?: number;
    /**
     * 
     * @type {string}
     * @memberof AbfrageInBearbeitungSachbearbeitungDto
     */
    artAbfrage?: AbfrageInBearbeitungSachbearbeitungDtoArtAbfrageEnum;
    /**
     * 
     * @type {string}
     * @memberof AbfrageInBearbeitungSachbearbeitungDto
     */
    bauvorhaben?: string;
    /**
     * 
     * @type {string}
     * @memberof AbfrageInBearbeitungSachbearbeitungDto
     */
    linkEakte?: string;
}


/**
 * @export
 */
export const AbfrageInBearbeitungSachbearbeitungDtoArtAbfrageEnum = {
    Unspecified: 'UNSPECIFIED',
    Bauleitplanverfahren: 'BAULEITPLANVERFAHREN',
    Baugenehmigungsverfahren: 'BAUGENEHMIGUNGSVERFAHREN',
    WeiteresVerfahren: 'WEITERES_VERFAHREN'
} as const;
export type AbfrageInBearbeitungSachbearbeitungDtoArtAbfrageEnum = typeof AbfrageInBearbeitungSachbearbeitungDtoArtAbfrageEnum[keyof typeof AbfrageInBearbeitungSachbearbeitungDtoArtAbfrageEnum];


/**
 * Check if a given object implements the AbfrageInBearbeitungSachbearbeitungDto interface.
 */
export function instanceOfAbfrageInBearbeitungSachbearbeitungDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AbfrageInBearbeitungSachbearbeitungDtoFromJSON(json: any): AbfrageInBearbeitungSachbearbeitungDto {
    return AbfrageInBearbeitungSachbearbeitungDtoFromJSONTyped(json, false);
}

export function AbfrageInBearbeitungSachbearbeitungDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AbfrageInBearbeitungSachbearbeitungDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['artAbfrage'] === 'BAUGENEHMIGUNGSVERFAHREN') {
            return BaugenehmigungsverfahrenInBearbeitungSachbearbeitungDtoFromJSONTyped(json, true);
        }
        if (json['artAbfrage'] === 'BAULEITPLANVERFAHREN') {
            return BauleitplanverfahrenInBearbeitungSachbearbeitungDtoFromJSONTyped(json, true);
        }
        if (json['artAbfrage'] === 'WEITERES_VERFAHREN') {
            return WeiteresVerfahrenInBearbeitungSachbearbeitungDtoFromJSONTyped(json, true);
        }
    }
    return {
        
        'version': !exists(json, 'version') ? undefined : json['version'],
        'artAbfrage': !exists(json, 'artAbfrage') ? undefined : json['artAbfrage'],
        'bauvorhaben': !exists(json, 'bauvorhaben') ? undefined : json['bauvorhaben'],
        'linkEakte': !exists(json, 'linkEakte') ? undefined : json['linkEakte'],
    };
}

export function AbfrageInBearbeitungSachbearbeitungDtoToJSON(value?: AbfrageInBearbeitungSachbearbeitungDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'artAbfrage': value.artAbfrage,
        'bauvorhaben': value.bauvorhaben,
        'linkEakte': value.linkEakte,
    };
}


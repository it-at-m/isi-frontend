/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Flurstueck } from './Flurstueck';
import {
    FlurstueckFromJSON,
    FlurstueckFromJSONTyped,
    FlurstueckToJSON,
} from './Flurstueck';
import type { MultiPolygonGeometry } from './MultiPolygonGeometry';
import {
    MultiPolygonGeometryFromJSON,
    MultiPolygonGeometryFromJSONTyped,
    MultiPolygonGeometryToJSON,
} from './MultiPolygonGeometry';

/**
 * 
 * @export
 * @interface Gemarkung
 */
export interface Gemarkung {
    /**
     * 
     * @type {number}
     * @memberof Gemarkung
     */
    nummer?: number;
    /**
     * 
     * @type {string}
     * @memberof Gemarkung
     */
    name?: string;
    /**
     * 
     * @type {Set<Flurstueck>}
     * @memberof Gemarkung
     */
    flurstuecke?: Set<Flurstueck>;
    /**
     * 
     * @type {MultiPolygonGeometry}
     * @memberof Gemarkung
     */
    multiPolygon?: MultiPolygonGeometry;
}

/**
 * Check if a given object implements the Gemarkung interface.
 */
export function instanceOfGemarkung(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GemarkungFromJSON(json: any): Gemarkung {
    return GemarkungFromJSONTyped(json, false);
}

export function GemarkungFromJSONTyped(json: any, ignoreDiscriminator: boolean): Gemarkung {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nummer': !exists(json, 'nummer') ? undefined : json['nummer'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'flurstuecke': !exists(json, 'flurstuecke') ? undefined : (new Set((json['flurstuecke'] as Array<any>).map(FlurstueckFromJSON))),
        'multiPolygon': !exists(json, 'multiPolygon') ? undefined : MultiPolygonGeometryFromJSON(json['multiPolygon']),
    };
}

export function GemarkungToJSON(value?: Gemarkung | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nummer': value.nummer,
        'name': value.name,
        'flurstuecke': value.flurstuecke === undefined ? undefined : (Array.from(value.flurstuecke as Set<any>).map(FlurstueckToJSON)),
        'multiPolygon': MultiPolygonGeometryToJSON(value.multiPolygon),
    };
}


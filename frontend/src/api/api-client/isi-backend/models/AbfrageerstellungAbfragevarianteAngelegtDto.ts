/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Serivce für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BauabschnittDto,
    BauabschnittDtoFromJSON,
    BauabschnittDtoFromJSONTyped,
    BauabschnittDtoToJSON,
} from './BauabschnittDto';

/**
 * 
 * @export
 * @interface AbfrageerstellungAbfragevarianteAngelegtDto
 */
export interface AbfrageerstellungAbfragevarianteAngelegtDto {
    /**
     * 
     * @type {string}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    id?: string;
    /**
     * 
     * @type {number}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    version?: number;
    /**
     * 
     * @type {number}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    abfragevariantenNr: number;
    /**
     * 
     * @type {string}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    abfragevariantenName: string;
    /**
     * 
     * @type {string}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    planungsrecht: AbfrageerstellungAbfragevarianteAngelegtDtoPlanungsrechtEnum;
    /**
     * 
     * @type {number}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    geschossflaecheWohnen?: number;
    /**
     * 
     * @type {number}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    geschossflaecheWohnenGenehmigt?: number;
    /**
     * 
     * @type {number}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    geschossflaecheWohnenFestgesetzt?: number;
    /**
     * 
     * @type {number}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    geschossflaecheWohnenSoBoNursaechlich?: number;
    /**
     * 
     * @type {number}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    geschossflaecheWohnenBestandswohnbaurecht?: number;
    /**
     * 
     * @type {number}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    gesamtanzahlWe?: number;
    /**
     * 
     * @type {number}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    anzahlWeBaurechtlichGenehmigt?: number;
    /**
     * 
     * @type {number}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    anzahlWeBaurechtlichFestgesetzt?: number;
    /**
     * 
     * @type {number}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    realisierungVon: number;
    /**
     * 
     * @type {number}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    geschossflaecheGenossenschaftlicheWohnungen?: number;
    /**
     * 
     * @type {boolean}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    sonderwohnformen: boolean;
    /**
     * 
     * @type {number}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    geschossflaecheStudentenwohnungen?: number;
    /**
     * 
     * @type {number}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    geschossflaecheSeniorenwohnungen?: number;
    /**
     * 
     * @type {number}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    geschossflaecheSonstiges?: number;
    /**
     * 
     * @type {Array<BauabschnittDto>}
     * @memberof AbfrageerstellungAbfragevarianteAngelegtDto
     */
    bauabschnitte?: Array<BauabschnittDto>;
}


/**
 * @export
 */
export const AbfrageerstellungAbfragevarianteAngelegtDtoPlanungsrechtEnum = {
    Unspecified: 'UNSPECIFIED',
    BplanParag30: 'BPLAN_PARAG_30',
    BplanParag12: 'BPLAN_PARAG_12',
    BplanParag11: 'BPLAN_PARAG_11',
    BplanAendBbplan: 'BPLAN_AEND_BBPLAN',
    NachverdParag34: 'NACHVERD_PARAG_34',
    NachverdParag35: 'NACHVERD_PARAG_35',
    NachverdParag31: 'NACHVERD_PARAG_31',
    NachverdBaurechtsausschoepfung: 'NACHVERD_BAURECHTSAUSSCHOEPFUNG',
    SonstigesUmstrukturierung: 'SONSTIGES_UMSTRUKTURIERUNG',
    SonstigesParag165: 'SONSTIGES_PARAG_165',
    SonstigesParag246: 'SONSTIGES_PARAG_246'
} as const;
export type AbfrageerstellungAbfragevarianteAngelegtDtoPlanungsrechtEnum = typeof AbfrageerstellungAbfragevarianteAngelegtDtoPlanungsrechtEnum[keyof typeof AbfrageerstellungAbfragevarianteAngelegtDtoPlanungsrechtEnum];


export function AbfrageerstellungAbfragevarianteAngelegtDtoFromJSON(json: any): AbfrageerstellungAbfragevarianteAngelegtDto {
    return AbfrageerstellungAbfragevarianteAngelegtDtoFromJSONTyped(json, false);
}

export function AbfrageerstellungAbfragevarianteAngelegtDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AbfrageerstellungAbfragevarianteAngelegtDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'abfragevariantenNr': json['abfragevariantenNr'],
        'abfragevariantenName': json['abfragevariantenName'],
        'planungsrecht': json['planungsrecht'],
        'geschossflaecheWohnen': !exists(json, 'geschossflaecheWohnen') ? undefined : json['geschossflaecheWohnen'],
        'geschossflaecheWohnenGenehmigt': !exists(json, 'geschossflaecheWohnenGenehmigt') ? undefined : json['geschossflaecheWohnenGenehmigt'],
        'geschossflaecheWohnenFestgesetzt': !exists(json, 'geschossflaecheWohnenFestgesetzt') ? undefined : json['geschossflaecheWohnenFestgesetzt'],
        'geschossflaecheWohnenSoBoNursaechlich': !exists(json, 'geschossflaecheWohnenSoBoNursaechlich') ? undefined : json['geschossflaecheWohnenSoBoNursaechlich'],
        'geschossflaecheWohnenBestandswohnbaurecht': !exists(json, 'geschossflaecheWohnenBestandswohnbaurecht') ? undefined : json['geschossflaecheWohnenBestandswohnbaurecht'],
        'gesamtanzahlWe': !exists(json, 'gesamtanzahlWe') ? undefined : json['gesamtanzahlWe'],
        'anzahlWeBaurechtlichGenehmigt': !exists(json, 'anzahlWeBaurechtlichGenehmigt') ? undefined : json['anzahlWeBaurechtlichGenehmigt'],
        'anzahlWeBaurechtlichFestgesetzt': !exists(json, 'anzahlWeBaurechtlichFestgesetzt') ? undefined : json['anzahlWeBaurechtlichFestgesetzt'],
        'realisierungVon': json['realisierungVon'],
        'geschossflaecheGenossenschaftlicheWohnungen': !exists(json, 'geschossflaecheGenossenschaftlicheWohnungen') ? undefined : json['geschossflaecheGenossenschaftlicheWohnungen'],
        'sonderwohnformen': json['sonderwohnformen'],
        'geschossflaecheStudentenwohnungen': !exists(json, 'geschossflaecheStudentenwohnungen') ? undefined : json['geschossflaecheStudentenwohnungen'],
        'geschossflaecheSeniorenwohnungen': !exists(json, 'geschossflaecheSeniorenwohnungen') ? undefined : json['geschossflaecheSeniorenwohnungen'],
        'geschossflaecheSonstiges': !exists(json, 'geschossflaecheSonstiges') ? undefined : json['geschossflaecheSonstiges'],
        'bauabschnitte': !exists(json, 'bauabschnitte') ? undefined : ((json['bauabschnitte'] as Array<any>).map(BauabschnittDtoFromJSON)),
    };
}

export function AbfrageerstellungAbfragevarianteAngelegtDtoToJSON(value?: AbfrageerstellungAbfragevarianteAngelegtDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'version': value.version,
        'abfragevariantenNr': value.abfragevariantenNr,
        'abfragevariantenName': value.abfragevariantenName,
        'planungsrecht': value.planungsrecht,
        'geschossflaecheWohnen': value.geschossflaecheWohnen,
        'geschossflaecheWohnenGenehmigt': value.geschossflaecheWohnenGenehmigt,
        'geschossflaecheWohnenFestgesetzt': value.geschossflaecheWohnenFestgesetzt,
        'geschossflaecheWohnenSoBoNursaechlich': value.geschossflaecheWohnenSoBoNursaechlich,
        'geschossflaecheWohnenBestandswohnbaurecht': value.geschossflaecheWohnenBestandswohnbaurecht,
        'gesamtanzahlWe': value.gesamtanzahlWe,
        'anzahlWeBaurechtlichGenehmigt': value.anzahlWeBaurechtlichGenehmigt,
        'anzahlWeBaurechtlichFestgesetzt': value.anzahlWeBaurechtlichFestgesetzt,
        'realisierungVon': value.realisierungVon,
        'geschossflaecheGenossenschaftlicheWohnungen': value.geschossflaecheGenossenschaftlicheWohnungen,
        'sonderwohnformen': value.sonderwohnformen,
        'geschossflaecheStudentenwohnungen': value.geschossflaecheStudentenwohnungen,
        'geschossflaecheSeniorenwohnungen': value.geschossflaecheSeniorenwohnungen,
        'geschossflaecheSonstiges': value.geschossflaecheSonstiges,
        'bauabschnitte': value.bauabschnitte === undefined ? undefined : ((value.bauabschnitte as Array<any>).map(BauabschnittDtoToJSON)),
    };
}


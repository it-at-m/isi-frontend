/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BaugenehmigungsverfahrenAngelegtDto } from './BaugenehmigungsverfahrenAngelegtDto';
import {
    BaugenehmigungsverfahrenAngelegtDtoFromJSON,
    BaugenehmigungsverfahrenAngelegtDtoFromJSONTyped,
    BaugenehmigungsverfahrenAngelegtDtoToJSON,
} from './BaugenehmigungsverfahrenAngelegtDto';
import type { BauleitplanverfahrenAngelegtDto } from './BauleitplanverfahrenAngelegtDto';
import {
    BauleitplanverfahrenAngelegtDtoFromJSON,
    BauleitplanverfahrenAngelegtDtoFromJSONTyped,
    BauleitplanverfahrenAngelegtDtoToJSON,
} from './BauleitplanverfahrenAngelegtDto';
import type { WeiteresVerfahrenAngelegtDto } from './WeiteresVerfahrenAngelegtDto';
import {
    WeiteresVerfahrenAngelegtDtoFromJSON,
    WeiteresVerfahrenAngelegtDtoFromJSONTyped,
    WeiteresVerfahrenAngelegtDtoToJSON,
} from './WeiteresVerfahrenAngelegtDto';

import {
     BaugenehmigungsverfahrenAngelegtDtoFromJSONTyped,
     BauleitplanverfahrenAngelegtDtoFromJSONTyped,
     WeiteresVerfahrenAngelegtDtoFromJSONTyped
} from './';

/**
 * AbfrageAngelegtDto
 * @export
 * @interface AbfrageAngelegtDto
 */
export interface AbfrageAngelegtDto {
    /**
     * 
     * @type {number}
     * @memberof AbfrageAngelegtDto
     */
    version?: number;
    /**
     * 
     * @type {string}
     * @memberof AbfrageAngelegtDto
     */
    artAbfrage?: AbfrageAngelegtDtoArtAbfrageEnum;
    /**
     * 
     * @type {string}
     * @memberof AbfrageAngelegtDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AbfrageAngelegtDto
     */
    anmerkung?: string;
    /**
     * 
     * @type {string}
     * @memberof AbfrageAngelegtDto
     */
    bauvorhaben?: string;
}


/**
 * @export
 */
export const AbfrageAngelegtDtoArtAbfrageEnum = {
    Unspecified: 'UNSPECIFIED',
    Bauleitplanverfahren: 'BAULEITPLANVERFAHREN',
    Baugenehmigungsverfahren: 'BAUGENEHMIGUNGSVERFAHREN',
    WeiteresVerfahren: 'WEITERES_VERFAHREN'
} as const;
export type AbfrageAngelegtDtoArtAbfrageEnum = typeof AbfrageAngelegtDtoArtAbfrageEnum[keyof typeof AbfrageAngelegtDtoArtAbfrageEnum];


/**
 * Check if a given object implements the AbfrageAngelegtDto interface.
 */
export function instanceOfAbfrageAngelegtDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function AbfrageAngelegtDtoFromJSON(json: any): AbfrageAngelegtDto {
    return AbfrageAngelegtDtoFromJSONTyped(json, false);
}

export function AbfrageAngelegtDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AbfrageAngelegtDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['artAbfrage'] === 'BAUGENEHMIGUNGSVERFAHREN') {
            return BaugenehmigungsverfahrenAngelegtDtoFromJSONTyped(json, true);
        }
        if (json['artAbfrage'] === 'BAULEITPLANVERFAHREN') {
            return BauleitplanverfahrenAngelegtDtoFromJSONTyped(json, true);
        }
        if (json['artAbfrage'] === 'WEITERES_VERFAHREN') {
            return WeiteresVerfahrenAngelegtDtoFromJSONTyped(json, true);
        }
    }
    return {
        
        'version': !exists(json, 'version') ? undefined : json['version'],
        'artAbfrage': !exists(json, 'artAbfrage') ? undefined : json['artAbfrage'],
        'name': json['name'],
        'anmerkung': !exists(json, 'anmerkung') ? undefined : json['anmerkung'],
        'bauvorhaben': !exists(json, 'bauvorhaben') ? undefined : json['bauvorhaben'],
    };
}

export function AbfrageAngelegtDtoToJSON(value?: AbfrageAngelegtDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'artAbfrage': value.artAbfrage,
        'name': value.name,
        'anmerkung': value.anmerkung,
        'bauvorhaben': value.bauvorhaben,
    };
}


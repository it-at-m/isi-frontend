/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GemarkungDto,
    GemarkungDtoFromJSON,
    GemarkungDtoFromJSONTyped,
    GemarkungDtoToJSON,
} from './GemarkungDto';
import {
    PointGeometryDto,
    PointGeometryDtoFromJSON,
    PointGeometryDtoFromJSONTyped,
    PointGeometryDtoToJSON,
} from './PointGeometryDto';
import {
    StadtbezirkDto,
    StadtbezirkDtoFromJSON,
    StadtbezirkDtoFromJSONTyped,
    StadtbezirkDtoToJSON,
} from './StadtbezirkDto';

/**
 * 
 * @export
 * @interface VerortungPointDto
 */
export interface VerortungPointDto {
    /**
     * 
     * @type {Set<StadtbezirkDto>}
     * @memberof VerortungPointDto
     */
    stadtbezirke: Set<StadtbezirkDto>;
    /**
     * 
     * @type {Set<GemarkungDto>}
     * @memberof VerortungPointDto
     */
    gemarkungen: Set<GemarkungDto>;
    /**
     * 
     * @type {PointGeometryDto}
     * @memberof VerortungPointDto
     */
    point: PointGeometryDto;
}

export function VerortungPointDtoFromJSON(json: any): VerortungPointDto {
    return VerortungPointDtoFromJSONTyped(json, false);
}

export function VerortungPointDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerortungPointDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'stadtbezirke': (new Set((json['stadtbezirke'] as Array<any>).map(StadtbezirkDtoFromJSON))),
        'gemarkungen': (new Set((json['gemarkungen'] as Array<any>).map(GemarkungDtoFromJSON))),
        'point': PointGeometryDtoFromJSON(json['point']),
    };
}

export function VerortungPointDtoToJSON(value?: VerortungPointDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'stadtbezirke': (Array.from(value.stadtbezirke as Set<any>).map(StadtbezirkDtoToJSON)),
        'gemarkungen': (Array.from(value.gemarkungen as Set<any>).map(GemarkungDtoToJSON)),
        'point': PointGeometryDtoToJSON(value.point),
    };
}


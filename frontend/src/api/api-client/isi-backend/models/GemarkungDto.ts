/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Serivce für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FlurstueckDto,
    FlurstueckDtoFromJSON,
    FlurstueckDtoFromJSONTyped,
    FlurstueckDtoToJSON,
} from './FlurstueckDto';
import {
    MultiPolygonGeometryDto,
    MultiPolygonGeometryDtoFromJSON,
    MultiPolygonGeometryDtoFromJSONTyped,
    MultiPolygonGeometryDtoToJSON,
} from './MultiPolygonGeometryDto';

/**
 * 
 * @export
 * @interface GemarkungDto
 */
export interface GemarkungDto {
    /**
     * 
     * @type {number}
     * @memberof GemarkungDto
     */
    nummer?: number;
    /**
     * 
     * @type {string}
     * @memberof GemarkungDto
     */
    name?: string;
    /**
     * 
     * @type {Set<FlurstueckDto>}
     * @memberof GemarkungDto
     */
    flurstuecke: Set<FlurstueckDto>;
    /**
     * 
     * @type {MultiPolygonGeometryDto}
     * @memberof GemarkungDto
     */
    multiPolygon: MultiPolygonGeometryDto;
}

export function GemarkungDtoFromJSON(json: any): GemarkungDto {
    return GemarkungDtoFromJSONTyped(json, false);
}

export function GemarkungDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GemarkungDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nummer': !exists(json, 'nummer') ? undefined : json['nummer'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'flurstuecke': (new Set((json['flurstuecke'] as Array<any>).map(FlurstueckDtoFromJSON))),
        'multiPolygon': MultiPolygonGeometryDtoFromJSON(json['multiPolygon']),
    };
}

export function GemarkungDtoToJSON(value?: GemarkungDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nummer': value.nummer,
        'name': value.name,
        'flurstuecke': (Array.from(value.flurstuecke as Set<any>).map(FlurstueckDtoToJSON)),
        'multiPolygon': MultiPolygonGeometryDtoToJSON(value.multiPolygon),
    };
}


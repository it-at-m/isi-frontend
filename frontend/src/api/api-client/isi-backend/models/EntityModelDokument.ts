/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Filepath } from './Filepath';
import {
    FilepathFromJSON,
    FilepathFromJSONTyped,
    FilepathToJSON,
} from './Filepath';
import type { Link } from './Link';
import {
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
} from './Link';

/**
 * 
 * @export
 * @interface EntityModelDokument
 */
export interface EntityModelDokument {
    /**
     * 
     * @type {number}
     * @memberof EntityModelDokument
     */
    version?: number;
    /**
     * 
     * @type {Date}
     * @memberof EntityModelDokument
     */
    createdDateTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof EntityModelDokument
     */
    lastModifiedDateTime?: Date;
    /**
     * 
     * @type {Filepath}
     * @memberof EntityModelDokument
     */
    filePath?: Filepath;
    /**
     * 
     * @type {string}
     * @memberof EntityModelDokument
     */
    artDokument?: EntityModelDokumentArtDokumentEnum;
    /**
     * 
     * @type {{ [key: string]: Link; }}
     * @memberof EntityModelDokument
     */
    links?: { [key: string]: Link; };
}


/**
 * @export
 */
export const EntityModelDokumentArtDokumentEnum = {
    Unspecified: 'UNSPECIFIED',
    Email: 'EMAIL',
    Beschluss: 'BESCHLUSS',
    Anlage: 'ANLAGE',
    Antrag: 'ANTRAG',
    Karte: 'KARTE',
    Stellungnahme: 'STELLUNGNAHME',
    DatenBauvorhaben: 'DATEN_BAUVORHABEN',
    Gebaeudeplan: 'GEBAEUDEPLAN',
    Berechnung: 'BERECHNUNG',
    InfosBaugenehmigung: 'INFOS_BAUGENEHMIGUNG',
    Presseartikel: 'PRESSEARTIKEL',
    InfosZuSozInfrastruktur: 'INFOS_ZU_SOZ_INFRASTRUKTUR',
    Protokoll: 'PROTOKOLL',
    Sonstiges: 'SONSTIGES'
} as const;
export type EntityModelDokumentArtDokumentEnum = typeof EntityModelDokumentArtDokumentEnum[keyof typeof EntityModelDokumentArtDokumentEnum];


/**
 * Check if a given object implements the EntityModelDokument interface.
 */
export function instanceOfEntityModelDokument(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EntityModelDokumentFromJSON(json: any): EntityModelDokument {
    return EntityModelDokumentFromJSONTyped(json, false);
}

export function EntityModelDokumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityModelDokument {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'version': !exists(json, 'version') ? undefined : json['version'],
        'createdDateTime': !exists(json, 'createdDateTime') ? undefined : (new Date(json['createdDateTime'])),
        'lastModifiedDateTime': !exists(json, 'lastModifiedDateTime') ? undefined : (new Date(json['lastModifiedDateTime'])),
        'filePath': !exists(json, 'filePath') ? undefined : FilepathFromJSON(json['filePath']),
        'artDokument': !exists(json, 'artDokument') ? undefined : json['artDokument'],
        'links': !exists(json, '_links') ? undefined : (mapValues(json['_links'], LinkFromJSON)),
    };
}

export function EntityModelDokumentToJSON(value?: EntityModelDokument | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'createdDateTime': value.createdDateTime === undefined ? undefined : (value.createdDateTime.toISOString()),
        'lastModifiedDateTime': value.lastModifiedDateTime === undefined ? undefined : (value.lastModifiedDateTime.toISOString()),
        'filePath': FilepathToJSON(value.filePath),
        'artDokument': value.artDokument,
        '_links': value.links === undefined ? undefined : (mapValues(value.links, LinkToJSON)),
    };
}


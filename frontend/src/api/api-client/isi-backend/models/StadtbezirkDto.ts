/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Serivce für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MultiPolygonGeometryDto,
    MultiPolygonGeometryDtoFromJSON,
    MultiPolygonGeometryDtoFromJSONTyped,
    MultiPolygonGeometryDtoToJSON,
} from './MultiPolygonGeometryDto';

/**
 * 
 * @export
 * @interface StadtbezirkDto
 */
export interface StadtbezirkDto {
    /**
     * 
     * @type {string}
     * @memberof StadtbezirkDto
     */
    id?: string;
    /**
     * 
     * @type {number}
     * @memberof StadtbezirkDto
     */
    version?: number;
    /**
     * 
     * @type {Date}
     * @memberof StadtbezirkDto
     */
    createdDateTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof StadtbezirkDto
     */
    lastModifiedDateTime?: Date;
    /**
     * 
     * @type {string}
     * @memberof StadtbezirkDto
     */
    nummer?: string;
    /**
     * 
     * @type {string}
     * @memberof StadtbezirkDto
     */
    name?: string;
    /**
     * 
     * @type {MultiPolygonGeometryDto}
     * @memberof StadtbezirkDto
     */
    multiPolygon: MultiPolygonGeometryDto;
}

export function StadtbezirkDtoFromJSON(json: any): StadtbezirkDto {
    return StadtbezirkDtoFromJSONTyped(json, false);
}

export function StadtbezirkDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): StadtbezirkDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'createdDateTime': !exists(json, 'createdDateTime') ? undefined : (new Date(json['createdDateTime'])),
        'lastModifiedDateTime': !exists(json, 'lastModifiedDateTime') ? undefined : (new Date(json['lastModifiedDateTime'])),
        'nummer': !exists(json, 'nummer') ? undefined : json['nummer'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'multiPolygon': MultiPolygonGeometryDtoFromJSON(json['multiPolygon']),
    };
}

export function StadtbezirkDtoToJSON(value?: StadtbezirkDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'version': value.version,
        'createdDateTime': value.createdDateTime === undefined ? undefined : (value.createdDateTime.toISOString()),
        'lastModifiedDateTime': value.lastModifiedDateTime === undefined ? undefined : (value.lastModifiedDateTime.toISOString()),
        'nummer': value.nummer,
        'name': value.name,
        'multiPolygon': MultiPolygonGeometryDtoToJSON(value.multiPolygon),
    };
}


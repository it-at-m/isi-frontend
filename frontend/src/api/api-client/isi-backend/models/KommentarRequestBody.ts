/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface KommentarRequestBody
 */
export interface KommentarRequestBody {
    /**
     * 
     * @type {string}
     * @memberof KommentarRequestBody
     */
    id?: string;
    /**
     * 
     * @type {number}
     * @memberof KommentarRequestBody
     */
    version?: number;
    /**
     * 
     * @type {Date}
     * @memberof KommentarRequestBody
     */
    createdDateTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof KommentarRequestBody
     */
    lastModifiedDateTime?: Date;
    /**
     * 
     * @type {string}
     * @memberof KommentarRequestBody
     */
    datum?: string;
    /**
     * 
     * @type {string}
     * @memberof KommentarRequestBody
     */
    text?: string;
    /**
     * 
     * @type {string}
     * @memberof KommentarRequestBody
     */
    bauvorhaben?: string;
    /**
     * 
     * @type {string}
     * @memberof KommentarRequestBody
     */
    infrastruktureinrichtung?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof KommentarRequestBody
     */
    dokumente?: Array<string>;
}

/**
 * Check if a given object implements the KommentarRequestBody interface.
 */
export function instanceOfKommentarRequestBody(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function KommentarRequestBodyFromJSON(json: any): KommentarRequestBody {
    return KommentarRequestBodyFromJSONTyped(json, false);
}

export function KommentarRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): KommentarRequestBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'createdDateTime': !exists(json, 'createdDateTime') ? undefined : (new Date(json['createdDateTime'])),
        'lastModifiedDateTime': !exists(json, 'lastModifiedDateTime') ? undefined : (new Date(json['lastModifiedDateTime'])),
        'datum': !exists(json, 'datum') ? undefined : json['datum'],
        'text': !exists(json, 'text') ? undefined : json['text'],
        'bauvorhaben': !exists(json, 'bauvorhaben') ? undefined : json['bauvorhaben'],
        'infrastruktureinrichtung': !exists(json, 'infrastruktureinrichtung') ? undefined : json['infrastruktureinrichtung'],
        'dokumente': !exists(json, 'dokumente') ? undefined : json['dokumente'],
    };
}

export function KommentarRequestBodyToJSON(value?: KommentarRequestBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'version': value.version,
        'createdDateTime': value.createdDateTime === undefined ? undefined : (value.createdDateTime.toISOString()),
        'lastModifiedDateTime': value.lastModifiedDateTime === undefined ? undefined : (value.lastModifiedDateTime.toISOString()),
        'datum': value.datum,
        'text': value.text,
        'bauvorhaben': value.bauvorhaben,
        'infrastruktureinrichtung': value.infrastruktureinrichtung,
        'dokumente': value.dokumente,
    };
}


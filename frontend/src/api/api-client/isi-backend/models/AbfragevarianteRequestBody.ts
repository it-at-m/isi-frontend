/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AbfragevarianteRequestBody
 */
export interface AbfragevarianteRequestBody {
    /**
     * 
     * @type {string}
     * @memberof AbfragevarianteRequestBody
     */
    id?: string;
    /**
     * 
     * @type {number}
     * @memberof AbfragevarianteRequestBody
     */
    version?: number;
    /**
     * 
     * @type {Date}
     * @memberof AbfragevarianteRequestBody
     */
    createdDateTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof AbfragevarianteRequestBody
     */
    lastModifiedDateTime?: Date;
    /**
     * 
     * @type {number}
     * @memberof AbfragevarianteRequestBody
     */
    abfragevariantenNr?: number;
    /**
     * 
     * @type {string}
     * @memberof AbfragevarianteRequestBody
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof AbfragevarianteRequestBody
     */
    artAbfragevariante?: AbfragevarianteRequestBodyArtAbfragevarianteEnum;
}


/**
 * @export
 */
export const AbfragevarianteRequestBodyArtAbfragevarianteEnum = {
    Unspecified: 'UNSPECIFIED',
    Bauleitplanverfahren: 'BAULEITPLANVERFAHREN',
    Baugenehmigungsverfahren: 'BAUGENEHMIGUNGSVERFAHREN',
    WeiteresVerfahren: 'WEITERES_VERFAHREN'
} as const;
export type AbfragevarianteRequestBodyArtAbfragevarianteEnum = typeof AbfragevarianteRequestBodyArtAbfragevarianteEnum[keyof typeof AbfragevarianteRequestBodyArtAbfragevarianteEnum];


/**
 * Check if a given object implements the AbfragevarianteRequestBody interface.
 */
export function instanceOfAbfragevarianteRequestBody(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AbfragevarianteRequestBodyFromJSON(json: any): AbfragevarianteRequestBody {
    return AbfragevarianteRequestBodyFromJSONTyped(json, false);
}

export function AbfragevarianteRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): AbfragevarianteRequestBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'createdDateTime': !exists(json, 'createdDateTime') ? undefined : (new Date(json['createdDateTime'])),
        'lastModifiedDateTime': !exists(json, 'lastModifiedDateTime') ? undefined : (new Date(json['lastModifiedDateTime'])),
        'abfragevariantenNr': !exists(json, 'abfragevariantenNr') ? undefined : json['abfragevariantenNr'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'artAbfragevariante': !exists(json, 'artAbfragevariante') ? undefined : json['artAbfragevariante'],
    };
}

export function AbfragevarianteRequestBodyToJSON(value?: AbfragevarianteRequestBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'version': value.version,
        'createdDateTime': value.createdDateTime === undefined ? undefined : (value.createdDateTime.toISOString()),
        'lastModifiedDateTime': value.lastModifiedDateTime === undefined ? undefined : (value.lastModifiedDateTime.toISOString()),
        'abfragevariantenNr': value.abfragevariantenNr,
        'name': value.name,
        'artAbfragevariante': value.artAbfragevariante,
    };
}


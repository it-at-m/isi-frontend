/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Serivce für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    StatusAbfrage,
    StatusAbfrageFromJSON,
    StatusAbfrageFromJSONTyped,
    StatusAbfrageToJSON,
} from './StatusAbfrage';

/**
 * 
 * @export
 * @interface AbfrageListElementDto
 */
export interface AbfrageListElementDto {
    /**
     * 
     * @type {string}
     * @memberof AbfrageListElementDto
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AbfrageListElementDto
     */
    nameAbfrage?: string;
    /**
     * 
     * @type {string}
     * @memberof AbfrageListElementDto
     */
    standVorhaben?: AbfrageListElementDtoStandVorhabenEnum;
    /**
     * 
     * @type {StatusAbfrage}
     * @memberof AbfrageListElementDto
     */
    statusAbfrage?: StatusAbfrage;
    /**
     * 
     * @type {Date}
     * @memberof AbfrageListElementDto
     */
    fristStellungnahme?: Date;
    /**
     * 
     * @type {string}
     * @memberof AbfrageListElementDto
     */
    type?: AbfrageListElementDtoTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof AbfrageListElementDto
     */
    sobonJahr?: AbfrageListElementDtoSobonJahrEnum;
}


/**
 * @export
 */
export const AbfrageListElementDtoStandVorhabenEnum = {
    Unspecified: 'UNSPECIFIED',
    GrundsatzEckdatenbeschluss: 'GRUNDSATZ_ECKDATENBESCHLUSS',
    Aufstellungsbeschluss: 'AUFSTELLUNGSBESCHLUSS',
    Parag31Baugb: 'PARAG_3_1_BAUGB',
    Parag32Baugb: 'PARAG_3_2_BAUGB',
    Parag412Baugb: 'PARAG_4_1_2_BAUGB',
    Billigungsbeschluss: 'BILLIGUNGSBESCHLUSS',
    Satzungsbeschluss: 'SATZUNGSBESCHLUSS',
    BplanInKraft: 'BPLAN_IN_KRAFT',
    VorbescheidEingereicht: 'VORBESCHEID_EINGEREICHT',
    BauantragEingereicht: 'BAUANTRAG_EINGEREICHT',
    BaugenehmigungErteilt: 'BAUGENEHMIGUNG_ERTEILT',
    BaubeginnAngezeigt: 'BAUBEGINN_ANGEZEIGT',
    BaufertigstellungGeplant: 'BAUFERTIGSTELLUNG_GEPLANT',
    BaufertigstellungAngezeigt: 'BAUFERTIGSTELLUNG_ANGEZEIGT'
} as const;
export type AbfrageListElementDtoStandVorhabenEnum = typeof AbfrageListElementDtoStandVorhabenEnum[keyof typeof AbfrageListElementDtoStandVorhabenEnum];

/**
 * @export
 */
export const AbfrageListElementDtoTypeEnum = {
    Infrastrukturabfrage: 'INFRASTRUKTURABFRAGE',
    Standortabfrage: 'STANDORTABFRAGE'
} as const;
export type AbfrageListElementDtoTypeEnum = typeof AbfrageListElementDtoTypeEnum[keyof typeof AbfrageListElementDtoTypeEnum];

/**
 * @export
 */
export const AbfrageListElementDtoSobonJahrEnum = {
    Davor: 'DAVOR',
    Jahr2014: 'JAHR_2014',
    Jahr2017: 'JAHR_2017',
    Jahr2017Plus: 'JAHR_2017_PLUS',
    Jahr2021: 'JAHR_2021'
} as const;
export type AbfrageListElementDtoSobonJahrEnum = typeof AbfrageListElementDtoSobonJahrEnum[keyof typeof AbfrageListElementDtoSobonJahrEnum];


export function AbfrageListElementDtoFromJSON(json: any): AbfrageListElementDto {
    return AbfrageListElementDtoFromJSONTyped(json, false);
}

export function AbfrageListElementDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AbfrageListElementDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'nameAbfrage': !exists(json, 'nameAbfrage') ? undefined : json['nameAbfrage'],
        'standVorhaben': !exists(json, 'standVorhaben') ? undefined : json['standVorhaben'],
        'statusAbfrage': !exists(json, 'statusAbfrage') ? undefined : StatusAbfrageFromJSON(json['statusAbfrage']),
        'fristStellungnahme': !exists(json, 'fristStellungnahme') ? undefined : (new Date(json['fristStellungnahme'])),
        'type': !exists(json, 'type') ? undefined : json['type'],
        'sobonJahr': !exists(json, 'sobonJahr') ? undefined : json['sobonJahr'],
    };
}

export function AbfrageListElementDtoToJSON(value?: AbfrageListElementDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'nameAbfrage': value.nameAbfrage,
        'standVorhaben': value.standVorhaben,
        'statusAbfrage': StatusAbfrageToJSON(value.statusAbfrage),
        'fristStellungnahme': value.fristStellungnahme === undefined ? undefined : (value.fristStellungnahme.toISOString().substr(0,10)),
        'type': value.type,
        'sobonJahr': value.sobonJahr,
    };
}


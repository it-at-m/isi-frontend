/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FoerderartDto } from './FoerderartDto';
import {
    FoerderartDtoFromJSON,
    FoerderartDtoFromJSONTyped,
    FoerderartDtoToJSON,
} from './FoerderartDto';

/**
 * 
 * @export
 * @interface FoerdermixDto
 */
export interface FoerdermixDto {
    /**
     * 
     * @type {string}
     * @memberof FoerdermixDto
     */
    bezeichnungJahr?: string;
    /**
     * 
     * @type {string}
     * @memberof FoerdermixDto
     */
    bezeichnung?: string;
    /**
     * 
     * @type {Array<FoerderartDto>}
     * @memberof FoerdermixDto
     */
    foerderarten?: Array<FoerderartDto>;
}

/**
 * Check if a given object implements the FoerdermixDto interface.
 */
export function instanceOfFoerdermixDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FoerdermixDtoFromJSON(json: any): FoerdermixDto {
    return FoerdermixDtoFromJSONTyped(json, false);
}

export function FoerdermixDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FoerdermixDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bezeichnungJahr': !exists(json, 'bezeichnungJahr') ? undefined : json['bezeichnungJahr'],
        'bezeichnung': !exists(json, 'bezeichnung') ? undefined : json['bezeichnung'],
        'foerderarten': !exists(json, 'foerderarten') ? undefined : ((json['foerderarten'] as Array<any>).map(FoerderartDtoFromJSON)),
    };
}

export function FoerdermixDtoToJSON(value?: FoerdermixDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bezeichnungJahr': value.bezeichnungJahr,
        'bezeichnung': value.bezeichnung,
        'foerderarten': value.foerderarten === undefined ? undefined : ((value.foerderarten as Array<any>).map(FoerderartDtoToJSON)),
    };
}


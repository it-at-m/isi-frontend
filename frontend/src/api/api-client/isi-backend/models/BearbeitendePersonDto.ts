/* tslint:disable */
/* eslint-disable */
/**
 * ISI Backend API
 * ISI Backend - Service für das Informationssystem für soziale Infrastrukturplanung
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: noreply@mail.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BearbeitendePersonDto
 */
export interface BearbeitendePersonDto {
    /**
     * 
     * @type {string}
     * @memberof BearbeitendePersonDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof BearbeitendePersonDto
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof BearbeitendePersonDto
     */
    organisationseinheit?: string;
}

/**
 * Check if a given object implements the BearbeitendePersonDto interface.
 */
export function instanceOfBearbeitendePersonDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BearbeitendePersonDtoFromJSON(json: any): BearbeitendePersonDto {
    return BearbeitendePersonDtoFromJSONTyped(json, false);
}

export function BearbeitendePersonDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BearbeitendePersonDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'organisationseinheit': !exists(json, 'organisationseinheit') ? undefined : json['organisationseinheit'],
    };
}

export function BearbeitendePersonDtoToJSON(value?: BearbeitendePersonDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'email': value.email,
        'organisationseinheit': value.organisationseinheit,
    };
}

